[{"/Users/erodriguez/Projects/react_06/src/index.js":"1","/Users/erodriguez/Projects/react_06/src/App.js":"2","/Users/erodriguez/Projects/react_06/src/reportWebVitals.js":"3","/Users/erodriguez/Projects/react_06/src/components/04_02_useRef/CorreoWow.js":"4","/Users/erodriguez/Projects/react_06/src/components/autocomplete/Autocomplete.js":"5","/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/UseState.js":"6","/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/CounterApp2.js":"7","/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/CounterApp1.js":"8","/Users/erodriguez/Projects/react_06/src/components/04_03_useLayaoutEffect/Layout1.js":"9","/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifExpertApp.js":"10","/Users/erodriguez/Projects/react_06/src/components/04_03_useLayaoutEffect/Quote.js":"11","/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/AddCategory.js":"12","/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifGrid.js":"13","/Users/erodriguez/Projects/react_06/src/hooks/useFetch.js":"14","/Users/erodriguez/Projects/react_06/src/hooks/useCouter1.js":"15","/Users/erodriguez/Projects/react_06/src/hooks/useCouter2.js":"16","/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifGridItem.js":"17","/Users/erodriguez/Projects/react_06/src/hooks/useFetchGifs.js":"18","/Users/erodriguez/Projects/react_06/src/helpers/aaagetGifs.js":"19","/Users/erodriguez/Projects/react_06/src/hooks/index.js":"20","/Users/erodriguez/Projects/react_06/src/hooks/useForm.js":"21","/Users/erodriguez/Projects/react_06/src/hooks/useFetch1.js":"22"},{"size":500,"mtime":1652971748000,"results":"23","hashOfConfig":"24"},{"size":3057,"mtime":1663933576000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499158900000,"results":"26","hashOfConfig":"24"},{"size":555,"mtime":1657278260000,"results":"27","hashOfConfig":"24"},{"size":4421,"mtime":1663933122000,"results":"28","hashOfConfig":"24"},{"size":1766,"mtime":1655824100000,"results":"29","hashOfConfig":"24"},{"size":741,"mtime":1655826624000,"results":"30","hashOfConfig":"24"},{"size":745,"mtime":1655827474000,"results":"31","hashOfConfig":"24"},{"size":1396,"mtime":1657279352000,"results":"32","hashOfConfig":"24"},{"size":2226,"mtime":1654258744000,"results":"33","hashOfConfig":"24"},{"size":1612,"mtime":1657280076000,"results":"34","hashOfConfig":"24"},{"size":1856,"mtime":1654511732000,"results":"35","hashOfConfig":"24"},{"size":2989,"mtime":1654528824000,"results":"36","hashOfConfig":"24"},{"size":1631,"mtime":1656421132000,"results":"37","hashOfConfig":"24"},{"size":600,"mtime":1655826970000,"results":"38","hashOfConfig":"24"},{"size":639,"mtime":1655826472000,"results":"39","hashOfConfig":"24"},{"size":467,"mtime":1654598972000,"results":"40","hashOfConfig":"24"},{"size":1833,"mtime":1654530536000,"results":"41","hashOfConfig":"24"},{"size":1030,"mtime":1654512014000,"results":"42","hashOfConfig":"24"},{"size":94,"mtime":1656431080000,"results":"43","hashOfConfig":"24"},{"size":1308,"mtime":1656413126000,"results":"44","hashOfConfig":"24"},{"size":2065,"mtime":1656425652000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lz9kr5",{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/Users/erodriguez/Projects/react_06/src/index.js",[],"/Users/erodriguez/Projects/react_06/src/App.js",["97","98","99","100","101"],"\n// app.js es el archivo principal\n\nimport React from \"react\";\nimport '../src/App.css';\n// import Test01 from \"./components/Test01\";\n// import Pruebas from \"./Pruebas\";\n// import VariablesConstantes from \"./components/components_02/01_var_constantes\";\n// import ModalPrueba from \"./components/components_02/ModalPrueba\";\n// import BbbCom from \"./components/02_base/BbbComponentes\";\n// import PrimeraApp from \"./components/02_base/AaaComponentes\";\n// import AaTeorA from \"./components/02_base/AaTeorA\";\n// import BbbProps from \"./components/02_base/BbbProsp\";\n// import BbbPropsTypes from \"./components/02_base/BbbPropTypes\";\n// import CounterApp from \"./components/02_base/CounterApp\";\n// import EventoClick from \"./components/03_eventos/EventoClick\";\n// import Base from \"./components/04_00_hooks_useState/AaBase\";\n// import Aaaa from \"./components/navbar/Aaa\";\nimport GifApp from \"./components/05_gifAppBuscador/GifExpertApp\";\nimport CounterAppUseState from \"./components/04_00_hooks_useState/UseState\";\nimport CounterApp1 from \"./components/04_00_hooks_useState/CounterApp1\";\nimport CounterApp2 from \"./components/04_00_hooks_useState/CounterApp2\";\n// import UseEfecct from \"./components/04_00_hooks_useEffect/UseEfecct\";\n// import MultipleCustomHook from \"./components/04_01_useFetch/MultipleCustomHooks\";\n// import SimpleForm from \"./components/04_00_useEffect/UseEfecct\";\n// import FormWithCustomHook from \"./components/04_00_useEffect/FormWithCustomHook\";\n// import Login from \"./components/formularios/form\";\n// import Basic from \"./components/formularios/form2/Basic\";\n// import Val from \"./components/formularios/form3/Val\";\n// import Formulario from \"./components/formularios/form4/Formulario\";\n// import FocusScreen from \"./components/04_02_useRef/FocusScreen\";\nimport Layaout1 from \"./components/04_03_useLayaoutEffect/Layout1\";\nimport Correo from \"./components/04_02_useRef/CorreoWow\";\nimport Autocomplete from \"./components/autocomplete/Autocomplete\";\n\n\nfunction App() {\n\n    return (\n\n        <div className=\"App\">\n\n            {/*<Test01/>*/}\n            {/*<VariablesConstantes/>*/}\n            {/*<Pruebas/>*/}\n            {/* seguir este ejercicio  <DataHeroes/>*/}\n            {/*<ModalPrueba/>*/}\n            {/*<PrimeraApp />*/}\n            {/*<BbbCom />*/}\n            {/*<BbbProps/>*/}\n            {/*<BbbPropsTypes/>*/}\n            {/*<AaTeorA/>*/}\n            {/*<CounterApp/>    /!*Ejercicio*!/*/}\n            {/*<EventoClick/>*/}\n            {/*<Base/>*/}\n            {/*<Aaaa/>*/}\n            <GifApp/>\n            {/*<CounterAppUseState/>*/}\n            {/*<CounterApp1/>*/}\n            {/*<CounterApp2/>*/}\n            {/*<UseEfecct/>*/}\n            {/*<FormWithCustomHook/>*/}\n            {/*<MultipleCustomHook/>*/}\n            {/*<FocusScreen/>*/}\n            {/*<SimpleForm/>*/}\n            {/*<Login/>*/}\n            {/*<Basic/>*/}\n            {/*<Val/>*/}\n            {/*<Formulario/>*/}\n            {/*<Layaout1/>*/}\n            {/*<Correo/>*/}\n            <Autocomplete/>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/erodriguez/Projects/react_06/src/reportWebVitals.js",[],"/Users/erodriguez/Projects/react_06/src/components/04_02_useRef/CorreoWow.js",["102"],"\n// borrar esta pestaÃ±a\n// prueba correo wow\n\n\nimport React from \"react\";\nimport '../04_00_hooks_useState/style.css'\n\nimport logo from '../00_imgs/elfa.jpg';\n\nconst Correo = () => {\n\n\n\n    return (\n        <div className=\"dddd\">\n            <div className=\"jj\">\n                <img src={logo} />\n            </div>\n            <div className=\"ff\">\n                <p>uuss</p>\n                <p>uuss</p>\n                <p>uuss</p>\n                <p>uuss</p>\n                <p>uuss</p>\n            </div>\n\n        </div>\n);\n};\nexport default Correo;\n\n","/Users/erodriguez/Projects/react_06/src/components/autocomplete/Autocomplete.js",["103","104","105"],"import './Autoc.css';\nimport Autosuggest from 'react-autosuggest'; // instalar\nimport { useState } from 'react';\n\n// array con los datos: personajes de marvel\nconst data = [\n  { personaje: \"Spider Man\" },\n  { personaje: \"Iron Man\" },\n  { personaje: \"Viuda negra\" },\n  { personaje: \"Capitana marvel\" },\n  { personaje: \"She Hulk\" },\n  { personaje: \"Wonder Woman\" },\n  { personaje: \"Capitan AmÃ©rica\" },\n  { personaje: \"Wanda\" },\n  { personaje: \"Bruja Escarlata\" },\n  { personaje: \"Thanos\" },\n  { personaje: \"Pantera negra\" },\n  { personaje: \"Thor\" },\n  { personaje: \"Doctor Strange\" },\n];\n\n// autocomplete --> el navegador predice el valor, basÃ¡ndose en los datos del array\n// se puede hacer un array o buscando datos en una api\nconst Autocomplete = () => {\n  const[personajes, setpersonajes]= useState(data); // info de los personajes (data)\n  const[value, setValue]= useState(\"\");   // valor del input, valor inicial --> string vacÃ­o\n  const[personajeSeleccionado, setpersonajeSeleccionado]= useState({});  // personaje que se ha seleccionado --> en el autocomplete se puede seleccionar un valor\n  // tmb estÃ¡ vacÃ­o ya que al principio no se selecciona ningÃºn valor\n\n  const onSuggestionsFetchRequested=({value})=>{\n    setpersonajes(filtrarpersonajes(value));\n  }\n  // objeto --> value\n\n  // se llama a la siguiente funciÃ³n:\n  // filtro de personajes\n  // value --> recibe como parÃ¡metro el valor del input\n  const filtrarpersonajes=(value)=>{\n    const inputValue=value.trim().toLowerCase(); // convertir todo a minÃºsculas. trim: se quitan espacios de inicio y final\n    const inputLength=inputValue.length;  // si la longitud es igual a 0, retorna vacÃ­o\n\n    let filtrado=data.filter((personaje)=>{\n      let textoCompleto=personaje.personaje;\n\n      // Propiedad: copiar y pegar: quitar tildes\n      if(textoCompleto.toLowerCase()\n          .normalize(\"NFD\")\n          .replace(/[\\u0300-\\u036f]/g, \"\")\n          .includes(inputValue)){\n        return personaje;\n      }\n    });\n\n    // en caso de que el input estÃ© vacÃ­o, para que no marque error:\n    // si la longitud es igual a 0, retorna vacÃ­o\n    // ternario:\n    return inputLength===0 ? [] : filtrado;\n  }\n\n  // se manda llamar cada vez que se borran las sugerencias\n  const onSuggestionsClearRequested = () =>{\n    setpersonajes([]);\n  }\n\n  const getSuggestionValue=(suggestion)=>{\n    return `${suggestion.personaje}`;\n  }\n\n  // html que se va a mostrar:\n  const renderSuggestion=(suggestion)=>(\n      <div className='sugerencia' onClick={()=>seleccionarpersonaje(suggestion)}>\n        {`${suggestion.personaje}`}\n      </div>\n  );\n\n  const seleccionarpersonaje=(personaje)=>{\n    setpersonajeSeleccionado(personaje); // se establece el personaje selecionado\n  }\n\n  // e de evento y nuevo valor del input\n  const onChange=(e, {newValue})=>{\n    setValue(newValue); // se le pasa el nuevo valor\n  }\n\n  const inputProps={\n    placeholder:\"Nombre del personaje\", // valor por defecto\n    value,     // valor del input. estÃ¡ establecido arriba. lÃ­nea 26\n    onChange   // mÃ©todo onChange\n  };\n\n  // validaciÃ³n cuando se le da al enter\n  // recibe un evento\n  const eventEnter=(e)=>{\n    if(e.key == \"Enter\"){\n      var split = e.target.value.split('-');\n      var personaje ={\n        personaje: split[0].trim(),\n      };\n      seleccionarpersonaje(personaje);\n    }\n  }\n\n  return (\n      <div className=\"App\">\n        <Autosuggest\n            suggestions={personajes} // sugerencias que se van a mostrar en el autocomplete. // personajes importa la info del data\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested} // se llama cada vez que se recalcula las sugerencias\n            onSuggestionsClearRequested={onSuggestionsClearRequested} // se manda llamar cada vez que se borran las sugerencias\n            getSuggestionValue={getSuggestionValue} // cuÃ¡l debe de ser el valor de entrada cuando se hace click en la segurencia\n            renderSuggestion={renderSuggestion} // indica cÃ³mo se van a mostrar las sugerencias\n            inputProps={inputProps}             // configuraciÃ³n del input: requiere el value (valor del input) y el mÃ©todo onChange (que se ejecuta cada vez que cambia de valor)\n            onSuggestionSelected={eventEnter}   // propiedad que se ejecuta cuando se selecciona una sugerencia con mouse o teclado. se activa al darle al enter\n        />\n      </div>\n  );\n}\n\nexport default Autocomplete;","/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/UseState.js",[],"/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/CounterApp2.js",[],"/Users/erodriguez/Projects/react_06/src/components/04_00_hooks_useState/CounterApp1.js",[],"/Users/erodriguez/Projects/react_06/src/components/04_03_useLayaoutEffect/Layout1.js",["106"],"\n// useLayoutEffect (129)\n\nimport React from \"react\";\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {useCouter1} from \"../../hooks/useCouter1\";\nimport '../04_00_hooks_useState/style.css'\nimport {Quote} from \"./Quote\";\n\nconst Layaout1 = () => {\n\n    const { counter, increment } = useCouter1(1);\n    const { loading, data } = useFetch( ` https://www.breakingbadapi.com/api/quotes/${ counter } `);\n    // const { author, quote } = !!data && data[0];\n\n    return (\n        <div>\n            <p> useFetch - Custom Hook </p>\n            <hr/>\n\n\n            {\n                loading ?\n                    (\n                        <div className=\"alert alert-info text-center\">\n                            Loading...\n                        </div>\n                    ) : (\n                        // <blockquote className=\" blockquote text-right \">\n                        //     <p className=\"mb-0\"> Hello there! { quote } </p>\n                        //     <footer className=\"blockquote-footer m-5\"> - { author } </footer>\n                        // </blockquote>\n                    <Quote/>\n                    )\n            }\n\n            <button\n                className=\"btn btn-primary\"\n                disabled={ loading }\n                onClick={ increment }\n            >\n                Siguiente quote\n            </button>\n\n        </div>\n    );\n};\nexport default Layaout1;\n\n","/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifExpertApp.js",[],"/Users/erodriguez/Projects/react_06/src/components/04_03_useLayaoutEffect/Quote.js",[],"/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/AddCategory.js",[],"/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifGrid.js",["107","108","109"],"\n// Fetch API\n// obtener las imÃ¡genes que queremos\n\n// Intro a useEffect\n\n// en este componente: cuando note que hay un nuevo elemento, hace la peticiÃ³n http\n// y traiga las imgs correspondientes a la categorÃ­a\n\n// abrir Postman:\n// get: api.giphy.com/v1/gifs/search\n// key: api_key\n// value: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// click en Send\n// aparece la info\n\n// bÃºsqueda: aloy\n// lÃ­mite: 10\n\nimport React, {useState, useEffect} from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport './GifStyle.css'\nimport {getGifs} from \"../../helpers/aaagetGifs\";\nimport {useFetchGifs} from \"../../hooks/useFetchGifs\"; // se importa de helpers\n\nconst GifGrid = ({ category }) => {\n\n    // estado inicial: array vacÃ­o\n    // const [images, setImages] = useState([]);\n\n\n    // importaciÃ³n del custom hook:\n    // se desestructura el state: { data, loading }\n    // se coloca el loading mÃ¡s abajo\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    // la funciÃ³n se ejecuta solo una vez\n    // cuando se carga el componente por primera vez\n    // lanza la peticiÃ³n para obtener los gifs -->  getGifs( category )\n    // y los coloca en las imÃ¡genes -->  .then( imgs => setImages( imgs ) );\n    // se implementa el useEffect porque cada vez que cambiÃ¡ramos el estado en el componente\n    // el GifGrid se renderiza y se vuelve a ejecutar\n    // esto mismo va a suceder con el useFetchGifs\n    // queremos que se dispare la peticiÃ³n SOLO si la categorÃ­a cambia\n    // useEffect( () => {\n        // recibe la funciÃ³n que queremos ejecutar\n        // se le pasa la categorÃ­a (category)\n        // se colocan .then porque retorna una promesa\n        // getGifs( category )\n        //     .then( imgs => setImages( imgs ) );\n    // }, [ category ] )\n    // deps: [] --> el segundo argumento es un array de dependencias\n    // deps: [category] --> si la categorÃ­a cambia, se tendrÃ­a que volver a ejecutar\n\n\n\n    // va a regresar tÃ­tulo, imagen, etc\n    return (\n        <>\n            {/* se imprime la categorÃ­a */}\n            <h3> { category } </h3>\n\n             {/*ternario\n             si loading estÃ¡ en true: cargando\n             Aparece \"cargando\" durante 3 segundos\n             y luego data cargada\n             */}\n            { loading ? 'Cargando...' : 'Data cargada'}\n\n            {/*es otra forma de ternario*/}\n            {/*{ loading && 'Cargando...'}*/}\n\n            <div className=\"card-grid\">\n\n\n\n                {/*  tÃ­tulo:  */}\n                {/*{*/}\n                {/*    images.map(({ id, title }) => (*/}\n                {/*        <li key={ id }> { title } </li>*/}\n                {/*    ) )*/}\n                {/*}*/}\n\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\nexport default GifGrid;\n\n\n","/Users/erodriguez/Projects/react_06/src/hooks/useFetch.js",["110"],"\n// useFetch - CustomHook (124)\n// antiguo !!\n\n//   es el componente que va a trabajar con la info de useFetch\n//  los dos hooks se comunican\n\nimport React, {useEffect, useState} from \"react\";\n\n// ( url ) --> pedimos la url -->  https://www.breakingbadapi.com/api/quotes/1\nexport const useFetch = ( url ) => {\n\n    // esta es la data que se coloca al final en el return\n    // se le pasa la info: data, loading y error\n    const [state, setState] = useState({\n        data: null,\n        isLoading: true,\n        hasError: null  // maneja si hay un error\n    });\n\n\n\n    // cada vez que cambia la url --> se dispara el efecto\n    // si la url es la misma, no pasa nada\n    useEffect( () =>{\n\n        // si queremos que aparezca el \"loading\" cada vez que presionamos el botÃ³n de \"siguiente quote\"\n        // vuelve a poner el loading en true\n        // regresa un nuevo estado\n        // si se manda el setState a un objeto, hay que pasarle todas las propiedades\n        setState( { data: null, isLoading: true, error: null } )\n\n        // hacemos la peticiÃ³n fetch:\n        fetch( url )\n            // regresa una promesa:\n            .then( respuesta => respuesta.json() )\n            .then( data => {\n\n                // cuando tenemos la data, llamamos al set State\n                setState({\n                    isLoading: false, // en false, porque ya se terminÃ³ de cargar\n                    error: null,  // porque no hay ningÃºn error\n                    data\n                })\n            });\n    }, [url])\n\n    // deps: [url] --> le estamos diciendo: ejecÃºtate solo cuando la url cambia\n\n    return state;\n}\n\n\n\n\n\n\n\n\n\n","/Users/erodriguez/Projects/react_06/src/hooks/useCouter1.js",[],"/Users/erodriguez/Projects/react_06/src/hooks/useCouter2.js",[],"/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifGridItem.js",[],"/Users/erodriguez/Projects/react_06/src/hooks/useFetchGifs.js",[],"/Users/erodriguez/Projects/react_06/src/helpers/aaagetGifs.js",[],"/Users/erodriguez/Projects/react_06/src/hooks/index.js",[],"/Users/erodriguez/Projects/react_06/src/hooks/useForm.js",[],"/Users/erodriguez/Projects/react_06/src/hooks/useFetch1.js",["111","112"],"\n// useFetch - CustomHook (124)\n// nuevo!!\n\n//   es el componente que va a trabajar con la info de useFetch\n//  los dos hooks se comunican\n\nimport React, {useEffect, useState} from \"react\";\n\n// ( url ) --> pedimos la url -->  https://www.breakingbadapi.com/api/quotes/1\nexport const useFetch1 = ( url ) => {\n\n    // esta es la data que se coloca al final en el return\n    // se le pasa la info: data, loading y error\n    // esta es la data que se regresa abajo ( en el return )\n    const [state, setState] = useState({\n        data: null,\n        isLoading: true, // saber cuÃ¡ndo se estÃ¡ cargando\n        hasError: null  // maneja si hay un error. estÃ¡ en null porque no hay ningÃºn error\n    });\n\n\n    // esta es la peticiÃ³n\n    // es una funciÃ³n asÃ­ncrona\n    const getFetch = async () => {\n\n        // vuelve a poner el loading en true\n        // si se vuelve a llamar al getFetch\n        setState( {\n            ...state, // se desestructura todo el state actual\n            isLoading: true,\n        });\n\n        // hacemos la peticiÃ³n fetch:\n        // se almacena la respuesta:\n        const resp = await fetch(url); // llamamos al fetch y le pasamos la url como argumento\n        // data: el await de la respuesta\n        const data = await resp.json();\n\n        // cuando tenemos la data, llamamos al set State\n        // regresa un nuevo estado\n        // si se manda el setState a un objeto, hay que pasarle todas las propiedades\n        // se manda llamar el setState\n        setState({\n            isLoading: false, // en false, porque ya se terminÃ³ de cargar\n            hasError: null,  // porque no hay ningÃºn error\n            data\n        });\n    }\n\n    useEffect(() => {\n        getFetch(); // aquÃ­ se dispara la peticiÃ³n fetch\n    }, [url])\n\n    // deps: [url] --> le estamos diciendo: ejecÃºtate solo cuando la url cambia\n\n    // a)\n    // return state;\n\n    // b) especificar valores de retorno:\n    return {\n        isLoading: state.isLoading,\n        data: state.isLoading,\n        hasError: state.hasError,\n    };\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"ruleId":"113","severity":1,"message":"114","line":20,"column":8,"nodeType":"115","messageId":"116","endLine":20,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":21,"column":8,"nodeType":"115","messageId":"116","endLine":21,"endColumn":19},{"ruleId":"113","severity":1,"message":"118","line":22,"column":8,"nodeType":"115","messageId":"116","endLine":22,"endColumn":19},{"ruleId":"113","severity":1,"message":"119","line":32,"column":8,"nodeType":"115","messageId":"116","endLine":32,"endColumn":16},{"ruleId":"113","severity":1,"message":"120","line":33,"column":8,"nodeType":"115","messageId":"116","endLine":33,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":18,"column":17,"nodeType":"123","endLine":18,"endColumn":35},{"ruleId":"113","severity":1,"message":"124","line":27,"column":9,"nodeType":"115","messageId":"116","endLine":27,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":42,"column":41,"nodeType":"127","messageId":"128","endLine":42,"endColumn":43},{"ruleId":"129","severity":1,"message":"130","line":94,"column":14,"nodeType":"131","messageId":"132","endLine":94,"endColumn":16},{"ruleId":"113","severity":1,"message":"133","line":13,"column":22,"nodeType":"115","messageId":"116","endLine":13,"endColumn":26},{"ruleId":"113","severity":1,"message":"134","line":20,"column":16,"nodeType":"115","messageId":"116","endLine":20,"endColumn":24},{"ruleId":"113","severity":1,"message":"135","line":20,"column":26,"nodeType":"115","messageId":"116","endLine":20,"endColumn":35},{"ruleId":"113","severity":1,"message":"136","line":23,"column":9,"nodeType":"115","messageId":"116","endLine":23,"endColumn":16},{"ruleId":"113","severity":1,"message":"137","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":13},{"ruleId":"113","severity":1,"message":"137","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":53,"column":8,"nodeType":"140","endLine":53,"endColumn":13,"suggestions":"141"},"no-unused-vars","'CounterAppUseState' is defined but never used.","Identifier","unusedVar","'CounterApp1' is defined but never used.","'CounterApp2' is defined but never used.","'Layaout1' is defined but never used.","'Correo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'personajeSeleccionado' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getGifs' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFetch'. Either include it or remove the dependency array.","ArrayExpression",["142"],{"desc":"143","fix":"144"},"Update the dependencies array to be: [getFetch, url]",{"range":"145","text":"146"},[1752,1757],"[getFetch, url]"]