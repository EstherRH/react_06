{"ast":null,"code":"var _s = $RefreshSig$();\n\n// useFetchGifs --> el use de delante indica que es un hook\n// todos los hooks empiezan con use\n// los hooks son funciones\n// cómo hacer un custom hooks\n// es extraer lógica de algún componente\n// o lógica que queremos reutilizar de forma sencilla\n// funcionan como si fueran functional components\n// se extrae una pequeña lógica que vamos a implementar para realizar una carga automática\n// y cuando tengamos la data vamos a renderizarla en pantalla\n// useFetchGifs --> se encarga de hacer esa petición automática cuando se cargue el componente la primera vez\nimport { useState } from \"react\"; // este va a ser un custom hook\n// permite que cuando el componente carga --> realizar la petición Fecth\n// y cuándo terminó la carga\n\nexport const useFetchGifs = () => {\n  _s();\n\n  // estado inicial: objeto\n  // data: array vacío\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  }); // a los 3 segundos se ejecuta lo que está dentro\n\n  setTimeout(() => {\n    setState({\n      data: [1, 2, 3, 4, 5, 6, 7],\n      loading: false\n    });\n  }, 3000); // se retorna el stare\n\n  return state; // { data:[], loading: true }\n}; // después se importa en GifGrid\n\n_s(useFetchGifs, \"1kbnQD1Qd64Vr/91iH93rP717VU=\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/hooks/useFetchGifs.js"],"names":["useState","useFetchGifs","state","setState","data","loading","setTimeout"],"mappings":";;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB,C,CAGA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE9B;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAE;AAChCI,IAAAA,IAAI,EAAE,EAD0B;AAEhCC,IAAAA,OAAO,EAAE;AAFuB,GAAF,CAAlC,CAL8B,CAU9B;;AACAC,EAAAA,UAAU,CAAG,MAAM;AACfH,IAAAA,QAAQ,CAAE;AACNC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAF,CAAR;AAIH,GALS,EAKP,IALO,CAAV,CAX8B,CAkB9B;;AACA,SAAOH,KAAP,CAnB8B,CAmBhB;AAEjB,CArBM,C,CAuBP;;GAvBaD,Y","sourcesContent":["\n// useFetchGifs --> el use de delante indica que es un hook\n// todos los hooks empiezan con use\n\n// los hooks son funciones\n\n// cómo hacer un custom hooks\n// es extraer lógica de algún componente\n// o lógica que queremos reutilizar de forma sencilla\n\n// funcionan como si fueran functional components\n\n// se extrae una pequeña lógica que vamos a implementar para realizar una carga automática\n// y cuando tengamos la data vamos a renderizarla en pantalla\n// useFetchGifs --> se encarga de hacer esa petición automática cuando se cargue el componente la primera vez\n\nimport { useState } from \"react\";\n\n\n// este va a ser un custom hook\n// permite que cuando el componente carga --> realizar la petición Fecth\n// y cuándo terminó la carga\n\nexport const useFetchGifs = () => {\n\n    // estado inicial: objeto\n    // data: array vacío\n\n    const [state, setState] = useState ({\n        data: [],\n        loading: true\n    });\n\n    // a los 3 segundos se ejecuta lo que está dentro\n    setTimeout ( () => {\n        setState ({\n            data: [1,2,3,4,5,6,7],\n            loading: false\n        })\n    }, 3000 );\n\n    // se retorna el stare\n    return state; // { data:[], loading: true }\n\n}\n\n// después se importa en GifGrid\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}