{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\n\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  let domainItem;\n\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase();\n    }\n\n    for (const item of domainItems) {\n      var ref, ref1; // remove port if present\n\n      const domainHostname = (ref = item.domain) === null || ref === void 0 ? void 0 : ref.split(':')[0].toLowerCase();\n\n      if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) === null || ref1 === void 0 ? void 0 : ref1.some(locale => locale.toLowerCase() === detectedLocale))) {\n        domainItem = item;\n        break;\n      }\n    }\n  }\n\n  return domainItem;\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/detect-domain-locale.ts"],"names":["detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","toLowerCase","item","domainHostname","domain","split","defaultLocale","locales","some","locale"],"mappings":";;;;;QAEgBA,kB,GAAAA,kB;;SAAAA,kB,CACdC,W,EACAC,Q,EACAC,c,EACA;AACA,MAAIC,UAAJ;;AAEA,MAAIH,WAAJ,EAAiB;AACf,QAAIE,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,GAAGA,cAAc,CAACE,WAAfF,EAAjBA;AACD;;AAED,SAAK,MAAMG,IAAX,IAAmBL,WAAnB,EAAgC;UAEPK,G,EAIrBA,I,CAN4B,CAC9B;;AACA,YAAMC,cAAc,GAAA,CAAGD,GAAW,GAAXA,IAAI,CAACE,MAAR,MAAc,IAAd,IAAGF,GAAW,KAAA,KAAA,CAAd,GAAGA,KAAAA,CAAH,GAAGA,GAAW,CAAEG,KAAbH,CAAmB,GAAnBA,EAAwB,CAAxBA,EAA2BD,WAA3BC,EAAvB;;AACA,UACEJ,QAAQ,KAAKK,cAAbL,IACAC,cAAc,KAAKG,IAAI,CAACI,aAALJ,CAAmBD,WAAnBC,EADnBJ,KACiD,CACjDI,IAAY,GAAZA,IAAI,CAACK,OAD4C,MACrC,IADqC,IACjDL,IAAY,KAAA,KAAA,CADqC,GACjDA,KAAAA,CADiD,GACjDA,IAAY,CAAEM,IAAdN,CAAoBO,MAAF,IAAaA,MAAM,CAACR,WAAPQ,OAAyBV,cAAxDG,CAFAJ,CADF,EAIE;AACAE,QAAAA,UAAU,GAAGE,IAAbF;AACA;AACD;AACF;AACF;;AAED,SAAOA,UAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) === null || ref === void 0 ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) === null || ref1 === void 0 ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale\n            ))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map"]},"metadata":{},"sourceType":"script"}