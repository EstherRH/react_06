{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/form3/Val.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Validation = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: ''\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required('First Name is required')\n    }),\n    onSubmit: fields => {\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n    },\n    render: ({\n      errors,\n      status,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          type: \"text\",\n          className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"firstName\",\n          component: \"div\",\n          className: \"invalid-feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mr-2\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/form3/Val.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","Validation","firstName","object","shape","string","required","fields","alert","JSON","stringify","errors","status","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACrB,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA,KADnB;AAII,IAAA,gBAAgB,EAAEF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACjCF,MAAAA,SAAS,EAAEF,GAAG,CAACK,MAAJ,GACNC,QADM,CACG,wBADH;AADsB,KAAnB,CAJtB;AAQI,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAChBC,MAAAA,KAAK,CAAC,sBAAsBC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAvB,CAAL;AACH,KAVL;AAWI,IAAA,MAAM,EAAE,CAAC;AAACI,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAD,kBACJ,QAAC,IAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,IAAI,EAAC,MAA7B;AACO,UAAA,SAAS,EAAE,kBAAkBF,MAAM,CAACT,SAAP,IAAoBW,OAAO,CAACX,SAA5B,GAAwC,aAAxC,GAAwD,EAA1E;AADlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAC,KAAzC;AAA+C,UAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA7BD;;KAAMD,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst Validation = () => {\n    return (\n        <Formik\n            initialValues={{\n                firstName: '',\n            }}\n            validationSchema={Yup.object().shape({\n                firstName: Yup.string()\n                    .required('First Name is required'),\n            })}\n            onSubmit={fields => {\n                alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n            }}\n            render={({errors, status, touched}) => (\n                <Form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <Field name=\"firstName\" type=\"text\"\n                               className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')}/>\n                        <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n\n                    </div>\n                </Form>\n            )}\n        />\n    )\n}\n\nexport default Validation;"]},"metadata":{},"sourceType":"module"}