{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Programation_Front/Base_React/retshe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport Header01 from \"./Components/Header01\";\nimport Formulario from \"./Components/Formulario\";\nimport Mensaje from \"./Components/Mensaje\";\nimport Resultado from \"./Components/Resultado\";\nimport Spinner from \"./Components/Spinner\"; // a)\n// Componente Hello. Primera forma\n// se utiliza el parámetro u objeto props, con la propiedad title\n// se utlizan las llaves\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Hello = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}; // b)\n// Componente Yass. Segunda forma\n// Se utiliza el método Render: se devuelve el elemento que queremos renderizar\n\n\n_c = Hello;\n\nclass Yasss extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: this.props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n} // c)\n// Componente Text. Con sintaxis de clases:\n\n\nclass Text extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n} // d)\n// Componente Número. Con sintaxis de clases:\n// el elemento render solo puede devolver un elemento\n// Componente Booleano tmb:\n\n\nclass Number extends Component {\n  render() {\n    const textoSegunBool = this.props.boolean ? 'Cierto' : 'Falso';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: textoSegunBool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction App() {\n  _s();\n\n  // En React los valores fluyen del padre al hijo pero no al revés,\n  // se define un state para la cantidad\n  // El state retorna dos valores\n  // cantidad es: una variable que contiene el valor\n  // guardarCantidad es: una función que va ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n  // al useState se le puede dar un valor inicial. empieza en cero\n  const [cantidad, guardarCantidad] = useState(0); // const [plazo, guardarPlazo] = useState(0);\n\n  const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n  // Plazo contiene el valor\n  // guardarPlazo: es la función\n  // pasamos ambas al formulario\n\n  const [total, guardarTotal] = useState(0); // Spinner\n  // se inicia en false\n\n  const [cargando, guardarCargando] = useState(false);\n  let componente;\n\n  if (cargando) {\n    componente = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }, this);\n  } else if (total === 0) {\n    componente = /*#__PURE__*/_jsxDEV(Mensaje, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }, this);\n  } else {\n    componente = /*#__PURE__*/_jsxDEV(Resultado, {\n      total: total,\n      plazo: plazo,\n      cantidad: cantidad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }, this);\n  } //Boolean\n\n\n  class Boolean extends Component {\n    render() {\n      const textoBooleans = this.props.isActivated ? 'On!' : 'Off';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: textoBooleans\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this);\n    }\n\n  } // // Números\n  // class Numbers extends Component {\n  //     render () {\n  //\n  //         // se le pasa una función para multiplicar cada elemento por 2\n  //         const mappedNumber = this.props.arrayOfNumber.map(n => n * 2)\n  //         // otra forma de multiplicar: multiply1\n  //         const mappedNumber1 = this.props.arrayOfNumber.map(this.props.multiply1)\n  //\n  //         return (\n  //             <div>\n  //                 {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n  //                 <p>{this.props.arrayOfNumber.join(', ')}</p>\n  //                 <p>{mappedNumber.join(', ')}</p>\n  //                 <p>{mappedNumber1.join(', ')}</p>\n  //                 <p>{this.props.objectWithInfo.key}</p>\n  //             </div>\n  //\n  //         )\n  //     }\n  // }\n  //Números (como la anterior pero más simplificada) Destructuración:\n\n\n  class Numbers extends Component {\n    render() {\n      // Destructuración del objeto. todo ordenado en una constante:\n      // Así se accede a todas las props que necesitamos en nuestro componente\n      const {\n        arrayOfNumber,\n        multiply1,\n        objectWithInfo,\n        title\n      } = this.props; // en las dos siguientes funciones se elimina: \"this.props\"\n      // se le pasa una función para multiplicar cada elemento por 2\n\n      const mappedNumber = arrayOfNumber.map(n => n * 2); // otra forma de multiplicar: multiply1\n\n      const mappedNumber1 = arrayOfNumber.map(multiply1);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.arrayOfNumber.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mappedNumber.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mappedNumber1.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: objectWithInfo.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Hello, {\n        title: \"Podemos repetirlo varias veces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Hello, {\n        title: \"Hello from props\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Yasss, {\n        title: \"Hello from yass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: \"texto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Boolean, {\n        text: \"prueba con booleanos\",\n        isActivated: false // si a \"isActivated\" no se le pasa ningún valor, da por hecho que es true, en nuesto caso: \"on!\"\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Number, {\n        number: 2,\n        text: \"Esto es un n\\xFAmero\",\n        boolean: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n        arrayOfNumber: [2, 3, 10],\n        multiply1: number => number * 4,\n        objectWithInfo: {\n          key: 'First Value',\n          key2: 'otherValue'\n        },\n        text: \"N\\xFAmeros\",\n        title: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Este es el t\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      titulo: \"Header 1\",\n      descripcion: \"Utiliza el formulario y obten una cotizaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header01, {\n      titulo: \"Header 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      cantidad: cantidad,\n      guardarCantidad: guardarCantidad,\n      plazo: plazo,\n      guardarPlazo: guardarPlazo,\n      total: total,\n      guardarTotal: guardarTotal,\n      guardarCargando: guardarCargando\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), componente, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://www.20minutos.es/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"peri\\xF3dico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hola mundo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"LXKE2bW3zNFIJeRyKXQglirthIU=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hello\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Volumes/ALOY/Programation_Front/Base_React/retshe/src/App.js"],"names":["React","useState","Component","Header","Header01","Formulario","Mensaje","Resultado","Spinner","Hello","props","title","Yasss","render","Text","text","Number","textoSegunBool","boolean","number","App","cantidad","guardarCantidad","plazo","guardarPlazo","total","guardarTotal","cargando","guardarCargando","componente","Boolean","textoBooleans","isActivated","Numbers","arrayOfNumber","multiply1","objectWithInfo","mappedNumber","map","n","mappedNumber1","join","key","key2","logo"],"mappings":"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","sourcesContent":["import React, {useState, Component} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport Header01 from \"./Components/Header01\";\nimport Formulario from \"./Components/Formulario\";\nimport Mensaje from \"./Components/Mensaje\";\nimport Resultado from \"./Components/Resultado\";\nimport Spinner from \"./Components/Spinner\";\n\n\n\n// a)\n// Componente Hello. Primera forma\n// se utiliza el parámetro u objeto props, con la propiedad title\n// se utlizan las llaves\nconst Hello = (props) => {\n    return <p>{props.title}</p>\n}\n\n// b)\n// Componente Yass. Segunda forma\n// Se utiliza el método Render: se devuelve el elemento que queremos renderizar\nclass Yasss extends Component{\n    render () {\n        return <h2>{this.props.title}</h2>\n    }\n}\n\n// c)\n// Componente Text. Con sintaxis de clases:\nclass Text extends Component {\n    render () {\n        return <p>{this.props.text}</p>\n    }\n\n}\n\n// d)\n// Componente Número. Con sintaxis de clases:\n// el elemento render solo puede devolver un elemento\n// Componente Booleano tmb:\nclass Number extends Component {\n    render () {\n        const textoSegunBool = this.props.boolean ? 'Cierto' : 'Falso'\n        return(\n            <div>\n                <p>{this.props.text}</p>\n                <p>{this.props.number}</p>\n                <p>{textoSegunBool}</p>\n            </div>\n        )\n    }\n\n}\n\n\n\nfunction App() {\n\n    // En React los valores fluyen del padre al hijo pero no al revés,\n    // se define un state para la cantidad\n    // El state retorna dos valores\n    // cantidad es: una variable que contiene el valor\n    // guardarCantidad es: una función que va ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n    // al useState se le puede dar un valor inicial. empieza en cero\n\n    const [cantidad, guardarCantidad ] = useState(0);\n    // const [plazo, guardarPlazo] = useState(0);\n    const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n    // Plazo contiene el valor\n    // guardarPlazo: es la función\n    // pasamos ambas al formulario\n    const [total, guardarTotal] = useState(0);\n\n    // Spinner\n    // se inicia en false\n    const [cargando, guardarCargando] = useState(false);\n\n\n    let componente;\n\n    if(cargando) {\n        componente = <Spinner/>\n    } else if ( total === 0 ) {\n        componente = <Mensaje />\n    } else {\n        componente = <Resultado\n            total = {total}\n            plazo = {plazo}\n            cantidad = {cantidad}\n        />\n    }\n\n\n\n    //Boolean\n    class Boolean extends Component {\n        render () {\n            const textoBooleans = this.props.isActivated ? 'On!' : 'Off'\n\n            return (\n                <div>\n                    <p>{textoBooleans}</p>\n                </div>\n            )\n        }\n    }\n\n    // // Números\n    // class Numbers extends Component {\n    //     render () {\n    //\n    //         // se le pasa una función para multiplicar cada elemento por 2\n    //         const mappedNumber = this.props.arrayOfNumber.map(n => n * 2)\n    //         // otra forma de multiplicar: multiply1\n    //         const mappedNumber1 = this.props.arrayOfNumber.map(this.props.multiply1)\n    //\n    //         return (\n    //             <div>\n    //                 {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n    //                 <p>{this.props.arrayOfNumber.join(', ')}</p>\n    //                 <p>{mappedNumber.join(', ')}</p>\n    //                 <p>{mappedNumber1.join(', ')}</p>\n    //                 <p>{this.props.objectWithInfo.key}</p>\n    //             </div>\n    //\n    //         )\n    //     }\n    // }\n\n    //Números (como la anterior pero más simplificada) Destructuración:\n    class Numbers extends Component {\n        render () {\n            // Destructuración del objeto. todo ordenado en una constante:\n            // Así se accede a todas las props que necesitamos en nuestro componente\n            const {\n                arrayOfNumber,\n                multiply1,\n                objectWithInfo,\n                title\n            } = this.props\n\n            // en las dos siguientes funciones se elimina: \"this.props\"\n            // se le pasa una función para multiplicar cada elemento por 2\n            const mappedNumber = arrayOfNumber.map(n => n * 2)\n            // otra forma de multiplicar: multiply1\n            const mappedNumber1 = arrayOfNumber.map(multiply1)\n\n            return (\n                <div>\n                    {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n                    <p>{this.props.arrayOfNumber.join(', ')}</p>\n                    <p>{mappedNumber.join(', ')}</p>\n                    <p>{mappedNumber1.join(', ')}</p>\n                    <p>{objectWithInfo.key}</p>\n\n                    {/* tmb se pueden usar los propios Elementos de React como props */}\n                    {title}\n                </div>\n\n            )\n        }\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <div className=\"App-header\">\n\n                {/*Para pasarle una propiedad al componente Hello, debemos pasarle el valor como si fuera el valor de una etiqueta html\n    nada de esto es html!! es JSX*/}\n\n                <Hello title='Podemos repetirlo varias veces'/>\n                <Hello title='Hello from props'/>\n\n                <Yasss title='Hello from yass' />\n\n                <Text text='texto' />\n\n\n                {/* Podemos pasarle una props llamada isActivated\n                    se suelen separar dejando una props en cada línea\n                    si hay muchas, se ordenan alfabéticamente     */}\n                <Boolean\n                    text='prueba con booleanos'\n                    isActivated={false}\n                    // si a \"isActivated\" no se le pasa ningún valor, da por hecho que es true, en nuesto caso: \"on!\"\n                />\n\n\n                <Number number={2} text='Esto es un número' boolean={true} />\n\n\n                {/*  arrayOfNumber: Se abren los corchetes para crear el array\n                     objectWithInfo: doble llaves (con las llaves propias del objeto dentro) */}\n                <Numbers\n                    arrayOfNumber={[2 ,3, 10]}\n                    multiply1={(number) => number * 4}\n                    objectWithInfo={{ key: 'First Value', key2: 'otherValue' }}\n                    text='Números'\n                    title={<h1>Este es el título</h1>}\n                />\n            </div>\n\n\n\n            {/* El componente de Header se puede poner así:*/}\n            <Header/>\n            {/*  también así para incluir los props  */}\n            {/*  \"título\" es la propiedad, se le asigna un valor: \"Prueba uno\" */}\n            <Header\n                titulo=\"Header 1\"\n                descripcion=\"Utiliza el formulario y obten una cotización\"/>\n            <Header01\n                titulo=\"Header 2\"/>\n\n\n\n            <Formulario\n                cantidad={cantidad}\n                guardarCantidad={guardarCantidad}\n                plazo={plazo}\n                guardarPlazo={guardarPlazo}\n                total = {total}\n                guardarTotal = {guardarTotal}\n                guardarCargando = {guardarCargando}\n            />\n\n\n            {componente}\n\n\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <a className=\"App-link\" href=\"https://www.20minutos.es/\"\n                   target=\"_blank\" rel=\"noopener noreferrer\">\n                    periódico\n                </a>\n                <p>Hola mundo</p>\n            </div>\n\n\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}