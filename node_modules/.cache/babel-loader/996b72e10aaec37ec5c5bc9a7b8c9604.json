{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/FormWithCustomHook.js\",\n    _s = $RefreshSig$();\n\n// se crea un custom hook que nos ayude a manejar el formulario\n// va a ser: hooks/useForm.js\nimport React from \"react\";\nimport './style.css';\nimport { useForm } from \"../../hooks/useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SimpleFormCustom = () => {\n  _s();\n\n  // se cambia el useState por el useForm\n  const [formState, setFormState] = useForm({\n    name: '',\n    // objeto vacío,   es el name que aparece en en input, más abajo\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = formState; // esta función podría ir en el custom hook\n  // se puede extraer la lógica\n  // así se podría implementar la función en varios formularios\n\n  const handleInputChange = ({\n    target\n  }) => {\n    setFormState({ ...formState,\n      [target.name]: target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Simple Form CUSTOM Hook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\",\n        placeholder: \"Tu nombre\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"form-control\",\n        placeholder: \"email@gmail.com\",\n        autoComplete: \"off\",\n        value: email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        placeholder: \"*****\",\n        value: password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SimpleFormCustom, \"xuA/AbWldVIKhBoTKLfScgANyLI=\", false, function () {\n  return [useForm];\n});\n\n_c = SimpleFormCustom;\nexport default SimpleFormCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleFormCustom\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/FormWithCustomHook.js"],"names":["React","useForm","SimpleFormCustom","formState","setFormState","name","email","password","handleInputChange","target","value"],"mappings":";;;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,OAAR,QAAsB,qBAAtB;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,OAAO,CAAC;AACtCI,IAAAA,IAAI,EAAE,EADgC;AAC3B;AACXC,IAAAA,KAAK,EAAE,EAF+B;AAGtCC,IAAAA,QAAQ,EAAE;AAH4B,GAAD,CAAzC;AAMA,QAAM;AAAEF,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BJ,SAAlC,CAT2B,CAW3B;AACA;AACA;;AACA,QAAMK,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACtCL,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,OAAEM,MAAM,CAACJ,IAAT,GAAiBI,MAAM,CAACC;AAFf,KAAD,CAAZ;AAKH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,SAAS,EAAC,cAFjB;AAGO,QAAA,WAAW,EAAC,WAHnB;AAIO,QAAA,YAAY,EAAC,KAJpB;AAKO,QAAA,KAAK,EAAIL,IALhB;AAMO,QAAA,QAAQ,EAAGG;AANlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAcI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,IAAI,EAAC,OADZ;AAEO,QAAA,SAAS,EAAC,cAFjB;AAGO,QAAA,WAAW,EAAC,iBAHnB;AAIO,QAAA,YAAY,EAAC,KAJpB;AAKO,QAAA,KAAK,EAAIF,KALhB;AAMO,QAAA,QAAQ,EAAGE;AANlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ,eAwBK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACG;AAAO,QAAA,IAAI,EAAC,UAAZ;AACO,QAAA,IAAI,EAAC,UADZ;AAEO,QAAA,SAAS,EAAC,cAFjB;AAGO,QAAA,WAAW,EAAC,OAHnB;AAIO,QAAA,KAAK,EAAID,QAJhB;AAKO,QAAA,QAAQ,EAAGC;AALlB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAxBL;AAAA,kBADJ;AAoCH,CA1DD;;GAAMN,gB;UAGgCD,O;;;KAHhCC,gB;AA2DN,eAAeA,gBAAf","sourcesContent":["\n\n// se crea un custom hook que nos ayude a manejar el formulario\n// va a ser: hooks/useForm.js\n\nimport React from \"react\";\nimport './style.css'\nimport {useForm} from \"../../hooks/useForm\";\n\nconst SimpleFormCustom = () => {\n\n    // se cambia el useState por el useForm\n    const [formState, setFormState] = useForm({\n        name: '',  // objeto vacío,   es el name que aparece en en input, más abajo\n        email: '',\n        password: ''\n    });\n\n    const { name, email, password } = formState;\n\n    // esta función podría ir en el custom hook\n    // se puede extraer la lógica\n    // así se podría implementar la función en varios formularios\n    const handleInputChange = ({ target }) => {\n        setFormState({\n            ...formState,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return (\n        <>\n            <p> Simple Form CUSTOM Hook </p>\n            <hr/>\n\n            <div className=\"form-group\">\n                <input type=\"text\"\n                       name=\"name\"\n                       className=\"form-control\"\n                       placeholder=\"Tu nombre\"\n                       autoComplete=\"off\"\n                       value= { name }\n                       onChange={ handleInputChange }\n                />\n            </div>\n            <div className=\"form-group\">\n                <input type=\"text\"\n                       name=\"email\"\n                       className=\"form-control\"\n                       placeholder=\"email@gmail.com\"\n                       autoComplete=\"off\"\n                       value= { email }\n                       onChange={ handleInputChange }\n                />\n            </div>\n             <div className=\"form-group\">\n                <input type=\"password\"\n                       name=\"password\"\n                       className=\"form-control\"\n                       placeholder=\"*****\"\n                       value= { password }\n                       onChange={ handleInputChange }\n                />\n            </div>\n        </>\n    );\n};\nexport default SimpleFormCustom;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}