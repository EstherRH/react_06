{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/01_ejercicios/components_01/Header.js\";\n// componente de Header\nimport React from 'react'; // se le pasa props para poder leer Header en app.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(props) {\n  /*   En este punto se puede colocar CÓDIGO estándar de javaScript   */\n  console.log(props);\n  /*   Todo lo que está dentro del return es lo que se va a mostrar en pantalla\n  *     es código JSX: mezcla de HTML y javaScript\n  *    */\n\n  return (\n    /*#__PURE__*/\n    // se envuelve todo dentro de un div porque se devuelve varios elementos\n    _jsxDEV(\"div\", {\n      className: \"header_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hola mundo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c = Header;\nexport default Header; //se puede aplicar destructuring:\n\n/*\n function header(titulo) {\n   return(\n       <div>\n           <h1>{ titulo }</h1>\n       </div>\n   );\n}\nexport default header;\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/01_ejercicios/components_01/Header.js"],"names":["React","Header","props","console","log","titulo","descripcion"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAGA;AACJ;AACA;;AACI;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,kBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAcH;;KAxBQL,M;AA0BT,eAAeA,MAAf,C,CAIA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// componente de Header\n\nimport React from 'react';\n\n// se le pasa props para poder leer Header en app.js\nfunction Header(props) {\n\n    /*   En este punto se puede colocar CÓDIGO estándar de javaScript   */\n\n    console.log(props)\n\n\n    /*   Todo lo que está dentro del return es lo que se va a mostrar en pantalla\n    *     es código JSX: mezcla de HTML y javaScript\n    *    */\n    return(\n        // se envuelve todo dentro de un div porque se devuelve varios elementos\n        <div className=\"header_container\">\n            <p>Hola mundo</p>\n\n            {/*   Cómo acceder a los props: { props.titulo }\n             es html pero lo que está dentro de las llaves {  } se interpreta como código JS\n             se le pueden pasar varios props\n             aquí tendríamos DOS props:\n             */}\n            <h1>{ props.titulo }</h1>\n            <p>{ props.descripcion }</p>\n        </div>\n    );\n}\n\nexport default Header;\n\n\n\n//se puede aplicar destructuring:\n\n /*\n\n function header(titulo) {\n    return(\n        <div>\n            <h1>{ titulo }</h1>\n        </div>\n    );\n}\nexport default header;\n\n*/"]},"metadata":{},"sourceType":"module"}