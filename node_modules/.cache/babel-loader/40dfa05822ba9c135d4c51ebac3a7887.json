{"ast":null,"code":"import $01b9c$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { useState as $01b9c$useState, useRef as $01b9c$useRef, createElement as $01b9c$createElement, useCallback as $01b9c$useCallback, forwardRef as $01b9c$forwardRef, Fragment as $01b9c$Fragment, useEffect as $01b9c$useEffect, useMemo as $01b9c$useMemo } from \"react\";\nimport { createPortal as $01b9c$createPortal } from \"react-dom\";\nimport { clamp as $01b9c$clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers as $01b9c$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection as $01b9c$createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs as $01b9c$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $01b9c$createContextScope } from \"@radix-ui/react-context\";\nimport { useDirection as $01b9c$useDirection } from \"@radix-ui/react-direction\";\nimport { DismissableLayer as $01b9c$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards as $01b9c$useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope as $01b9c$FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId as $01b9c$useId } from \"@radix-ui/react-id\";\nimport { useLabelContext as $01b9c$useLabelContext } from \"@radix-ui/react-label\";\nimport { Portal as $01b9c$Portal } from \"@radix-ui/react-portal\";\nimport { Primitive as $01b9c$Primitive } from \"@radix-ui/react-primitive\";\nimport { Slot as $01b9c$Slot } from \"@radix-ui/react-slot\";\nimport { useCallbackRef as $01b9c$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState as $01b9c$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect as $01b9c$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { usePrevious as $01b9c$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { VisuallyHidden as $01b9c$VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\nimport { hideOthers as $01b9c$hideOthers } from \"aria-hidden\";\nimport { RemoveScroll as $01b9c$RemoveScroll } from \"react-remove-scroll\";\nconst $cc7e05a45900e73f$var$OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst $cc7e05a45900e73f$var$SELECTION_KEYS = [' ', 'Enter'];\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$SELECT_NAME = 'Select';\nconst [$cc7e05a45900e73f$var$Collection, $cc7e05a45900e73f$var$useCollection, $cc7e05a45900e73f$var$createCollectionScope] = $01b9c$createCollection($cc7e05a45900e73f$var$SELECT_NAME);\nconst [$cc7e05a45900e73f$var$createSelectContext, $cc7e05a45900e73f$export$286727a75dc039bd] = $01b9c$createContextScope($cc7e05a45900e73f$var$SELECT_NAME, [$cc7e05a45900e73f$var$createCollectionScope]);\nconst [$cc7e05a45900e73f$var$SelectProvider, $cc7e05a45900e73f$var$useSelectContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME);\nconst [$cc7e05a45900e73f$var$SelectNativeOptionsProvider, $cc7e05a45900e73f$var$useSelectNativeOptionsContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME);\n\nconst $cc7e05a45900e73f$export$ef9b1a59e592288f = props => {\n  const {\n    __scopeSelect: __scopeSelect,\n    children: children,\n    open: openProp,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    value: valueProp,\n    defaultValue: defaultValue,\n    onValueChange: onValueChange,\n    dir: dir,\n    name: name,\n    autoComplete: autoComplete\n  } = props;\n  const [trigger, setTrigger] = $01b9c$useState(null);\n  const [valueNode, setValueNode] = $01b9c$useState(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = $01b9c$useState(false);\n  const direction = $01b9c$useDirection(dir);\n  const [open = false, setOpen] = $01b9c$useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  const [value, setValue] = $01b9c$useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange\n  });\n  const triggerPointerDownPosRef = $01b9c$useRef(null); // We set this to true by default so that events bubble to forms without JS (SSR)\n\n  const isFormControl = trigger ? Boolean(trigger.closest('form')) : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = $01b9c$useState(new Set()); // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n\n  const nativeSelectKey = Array.from(nativeOptionsSet).map(option => option.props.value).join(';');\n  return /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectProvider, {\n    scope: __scopeSelect,\n    trigger: trigger,\n    onTriggerChange: setTrigger,\n    valueNode: valueNode,\n    onValueNodeChange: setValueNode,\n    valueNodeHasChildren: valueNodeHasChildren,\n    onValueNodeHasChildrenChange: setValueNodeHasChildren,\n    contentId: $01b9c$useId(),\n    value: value,\n    onValueChange: setValue,\n    open: open,\n    onOpenChange: setOpen,\n    dir: direction,\n    triggerPointerDownPosRef: triggerPointerDownPosRef\n  }, /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$Collection.Provider, {\n    scope: __scopeSelect\n  }, /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectNativeOptionsProvider, {\n    scope: props.__scopeSelect,\n    onNativeOptionAdd: $01b9c$useCallback(option => {\n      setNativeOptionsSet(prev => new Set(prev).add(option));\n    }, []),\n    onNativeOptionRemove: $01b9c$useCallback(option => {\n      setNativeOptionsSet(prev => {\n        const optionsSet = new Set(prev);\n        optionsSet.delete(option);\n        return optionsSet;\n      });\n    }, [])\n  }, children)), isFormControl ? /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$BubbleSelect, {\n    key: nativeSelectKey,\n    \"aria-hidden\": true,\n    tabIndex: -1,\n    name: name,\n    autoComplete: autoComplete,\n    value: value // enable form autofill\n    ,\n    onChange: event => setValue(event.target.value)\n  }, Array.from(nativeOptionsSet)) : null);\n};\n/*#__PURE__*/\n\n\nObject.assign($cc7e05a45900e73f$export$ef9b1a59e592288f, {\n  displayName: $cc7e05a45900e73f$var$SELECT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$TRIGGER_NAME = 'SelectTrigger';\nconst $cc7e05a45900e73f$export$3ac1e88a1c0b9f1 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    disabled = false,\n    'aria-labelledby': ariaLabelledby,\n    ...triggerProps\n  } = props;\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$TRIGGER_NAME, __scopeSelect);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, context.onTriggerChange);\n  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);\n  const labelId = $01b9c$useLabelContext(context.trigger);\n  const labelledBy = ariaLabelledby || labelId;\n  const [searchRef, handleTypeaheadSearch, resetTypeahead] = $cc7e05a45900e73f$var$useTypeaheadSearch(search => {\n    const enabledItems = getItems().filter(item => !item.disabled);\n    const currentItem = enabledItems.find(item => item.value === context.value);\n    const nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);\n    if (nextItem !== undefined) context.onValueChange(nextItem.value);\n  });\n\n  const handleOpen = () => {\n    if (!disabled) {\n      context.onOpenChange(true); // reset typeahead when we open\n\n      resetTypeahead();\n    }\n  };\n\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.button, $01b9c$babelruntimehelpersesmextends({\n    type: \"button\",\n    role: \"combobox\",\n    \"aria-controls\": context.contentId,\n    \"aria-expanded\": context.open,\n    \"aria-autocomplete\": \"none\",\n    \"aria-labelledby\": labelledBy,\n    dir: context.dir,\n    \"data-state\": context.open ? 'open' : 'closed',\n    disabled: disabled,\n    \"data-disabled\": disabled ? '' : undefined,\n    \"data-placeholder\": context.value === undefined ? '' : undefined\n  }, triggerProps, {\n    ref: composedRefs,\n    onPointerDown: $01b9c$composeEventHandlers(triggerProps.onPointerDown, event => {\n      // prevent implicit pointer capture\n      // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n      event.target.releasePointerCapture(event.pointerId); // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n      // but not when the control key is pressed (avoiding MacOS right click)\n\n      if (event.button === 0 && event.ctrlKey === false) {\n        handleOpen();\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(event.pageX),\n          y: Math.round(event.pageY)\n        }; // prevent trigger from stealing focus from the active item after opening.\n\n        event.preventDefault();\n      }\n    }),\n    onKeyDown: $01b9c$composeEventHandlers(triggerProps.onKeyDown, event => {\n      const isTypingAhead = searchRef.current !== '';\n      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n      if (isTypingAhead && event.key === ' ') return;\n\n      if ($cc7e05a45900e73f$var$OPEN_KEYS.includes(event.key)) {\n        handleOpen();\n        event.preventDefault();\n      }\n    })\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$3ac1e88a1c0b9f1, {\n  displayName: $cc7e05a45900e73f$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$VALUE_NAME = 'SelectValue';\nconst $cc7e05a45900e73f$export$e288731fd71264f0 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  // We ignore `className` and `style` as this part shouldn't be styled.\n  const {\n    __scopeSelect: __scopeSelect,\n    className: className,\n    style: style,\n    children: children,\n    placeholder: placeholder,\n    ...valueProps\n  } = props;\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$VALUE_NAME, __scopeSelect);\n  const {\n    onValueNodeHasChildrenChange: onValueNodeHasChildrenChange\n  } = context;\n  const hasChildren = children !== undefined;\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, context.onValueNodeChange);\n  $01b9c$useLayoutEffect(() => {\n    onValueNodeHasChildrenChange(hasChildren);\n  }, [onValueNodeHasChildrenChange, hasChildren]);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.span, $01b9c$babelruntimehelpersesmextends({}, valueProps, {\n    ref: composedRefs // we don't want events from the portalled `SelectValue` children to bubble\n    ,\n    style: {\n      pointerEvents: 'none'\n    }\n  }), context.value === undefined && placeholder !== undefined ? placeholder : children);\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$e288731fd71264f0, {\n  displayName: $cc7e05a45900e73f$var$VALUE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$ICON_NAME = 'SelectIcon';\nconst $cc7e05a45900e73f$export$99b400cabb58c515 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    children: children,\n    ...iconProps\n  } = props;\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.span, $01b9c$babelruntimehelpersesmextends({\n    \"aria-hidden\": true\n  }, iconProps, {\n    ref: forwardedRef\n  }), children || '▼');\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$99b400cabb58c515, {\n  displayName: $cc7e05a45900e73f$var$ICON_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$PORTAL_NAME = 'SelectPortal';\n\nconst $cc7e05a45900e73f$export$b2af6c9944296213 = props => {\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Portal, $01b9c$babelruntimehelpersesmextends({\n    asChild: true\n  }, props));\n};\n/*#__PURE__*/\n\n\nObject.assign($cc7e05a45900e73f$export$b2af6c9944296213, {\n  displayName: $cc7e05a45900e73f$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$CONTENT_NAME = 'SelectContent';\nconst $cc7e05a45900e73f$export$c973a4b3cb86a03d = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, props.__scopeSelect);\n  const [fragment, setFragment] = $01b9c$useState(); // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n\n  $01b9c$useLayoutEffect(() => {\n    setFragment(new DocumentFragment());\n  }, []);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Fragment, null, context.open ? /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectContentImpl, $01b9c$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef\n  })) : fragment ? /*#__PURE__*/$01b9c$createPortal( /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectContentProvider, {\n    scope: props.__scopeSelect\n  }, /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$Collection.Slot, {\n    scope: props.__scopeSelect\n  }, /*#__PURE__*/$01b9c$createElement(\"div\", null, props.children))), fragment) : null);\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$c973a4b3cb86a03d, {\n  displayName: $cc7e05a45900e73f$var$CONTENT_NAME\n});\nconst $cc7e05a45900e73f$var$CONTENT_MARGIN = 10;\nconst [$cc7e05a45900e73f$var$SelectContentProvider, $cc7e05a45900e73f$var$useSelectContentContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$CONTENT_NAME);\nconst $cc7e05a45900e73f$var$SelectContentImpl = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    onCloseAutoFocus: onCloseAutoFocus,\n    ...contentProps\n  } = props;\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = $01b9c$useState(null);\n  const [content, setContent] = $01b9c$useState(null);\n  const [viewport, setViewport] = $01b9c$useState(null);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, node => setContent(node));\n  const [selectedItem, setSelectedItem] = $01b9c$useState(null);\n  const [selectedItemText, setSelectedItemText] = $01b9c$useState(null);\n  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);\n  const [isPositioned, setIsPositioned] = $01b9c$useState(false);\n  const shouldRepositionRef = $01b9c$useRef(true);\n  const shouldExpandOnScrollRef = $01b9c$useRef(false);\n  const firstValidItemFoundRef = $01b9c$useRef(false); // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n\n  $01b9c$useEffect(() => {\n    if (content) return $01b9c$hideOthers(content);\n  }, [content]); // Make sure the whole tree has focus guards as our `Select` may be\n  // the last element in the DOM (because of the `Portal`)\n\n  $01b9c$useFocusGuards();\n  const [contentZIndex, setContentZIndex] = $01b9c$useState();\n  $01b9c$useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n  const focusFirst = $01b9c$useCallback(candidates => {\n    const [firstItem, ...restItems] = getItems().map(item => item.ref.current);\n    const [lastItem] = restItems.slice(-1);\n    const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n\n    for (const candidate of candidates) {\n      // if focus is already where we want to go, we don't want to keep going through the candidates\n      if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n      candidate === null || candidate === void 0 || candidate.scrollIntoView({\n        block: 'nearest'\n      }); // viewport might have padding so scroll to its edges when focusing first/last items.\n\n      if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n      if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n      candidate === null || candidate === void 0 || candidate.focus();\n      if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n    }\n  }, [getItems, viewport]);\n  const position = $01b9c$useCallback(() => {\n    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {\n      const triggerRect = context.trigger.getBoundingClientRect(); // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN;\n        const clampedLeft = $01b9c$clamp(left, [$cc7e05a45900e73f$var$CONTENT_MARGIN, rightEdge - contentWidth]);\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN;\n        const clampedRight = $01b9c$clamp(right, [$cc7e05a45900e73f$var$CONTENT_MARGIN, leftEdge - contentWidth]);\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      } // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n\n\n      const items = getItems();\n      const availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - $cc7e05a45900e73f$var$CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = \"0px\";\n        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(triggerMiddleToBottomEdge, selectedItemHalfHeight + (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth);\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = selectedItem === items[0].ref.current;\n        contentWrapper.style.top = \"0px\";\n        const clampedTopEdgeToTriggerMiddle = Math.max(topEdgeToTriggerMiddle, contentBorderTopWidth + viewport.offsetTop + (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight);\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${$cc7e05a45900e73f$var$CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px'; // -----------------------------------------------------------------------------------------\n\n      setIsPositioned(true); // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n\n      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);\n    }\n  }, [getItems, context.trigger, context.valueNode, contentWrapper, content, viewport, selectedItem, selectedItemText, context.dir]);\n  $01b9c$useLayoutEffect(() => position(), [position]);\n  const focusSelectedItem = $01b9c$useCallback(() => focusFirst([selectedItem, content]), [focusFirst, selectedItem, content]); // Since this is not dependent on layout, we want to ensure this runs at the same time as\n  // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n\n  $01b9c$useEffect(() => {\n    if (isPositioned) focusSelectedItem();\n  }, [isPositioned, focusSelectedItem]); // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n\n  const handleScrollButtonChange = $01b9c$useCallback(node => {\n    if (node && shouldRepositionRef.current === true) {\n      position();\n      focusSelectedItem();\n      shouldRepositionRef.current = false;\n    }\n  }, [position, focusSelectedItem]); // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n  // and close on `pointerup` outside.\n\n  const {\n    onOpenChange: onOpenChange,\n    triggerPointerDownPosRef: triggerPointerDownPosRef\n  } = context;\n  $01b9c$useEffect(() => {\n    if (content) {\n      let pointerMoveDelta = {\n        x: 0,\n        y: 0\n      };\n\n      const handlePointerMove = event => {\n        var _triggerPointerDownPo, _triggerPointerDownPo2, _triggerPointerDownPo3, _triggerPointerDownPo4;\n\n        pointerMoveDelta = {\n          x: Math.abs(Math.round(event.pageX) - ((_triggerPointerDownPo = (_triggerPointerDownPo2 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo2 === void 0 ? void 0 : _triggerPointerDownPo2.x) !== null && _triggerPointerDownPo !== void 0 ? _triggerPointerDownPo : 0)),\n          y: Math.abs(Math.round(event.pageY) - ((_triggerPointerDownPo3 = (_triggerPointerDownPo4 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo4 === void 0 ? void 0 : _triggerPointerDownPo4.y) !== null && _triggerPointerDownPo3 !== void 0 ? _triggerPointerDownPo3 : 0))\n        };\n      };\n\n      const handlePointerUp = event => {\n        // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n        if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) event.preventDefault();else // otherwise, if the event was outside the content, close.\n          if (!content.contains(event.target)) onOpenChange(false);\n        document.removeEventListener('pointermove', handlePointerMove);\n        triggerPointerDownPosRef.current = null;\n      };\n\n      if (triggerPointerDownPosRef.current !== null) {\n        document.addEventListener('pointermove', handlePointerMove);\n        document.addEventListener('pointerup', handlePointerUp, {\n          capture: true,\n          once: true\n        });\n      }\n\n      return () => {\n        document.removeEventListener('pointermove', handlePointerMove);\n        document.removeEventListener('pointerup', handlePointerUp, {\n          capture: true\n        });\n      };\n    }\n  }, [content, onOpenChange, triggerPointerDownPosRef]);\n  $01b9c$useEffect(() => {\n    const close = () => onOpenChange(false);\n\n    window.addEventListener('blur', close);\n    window.addEventListener('resize', close);\n    return () => {\n      window.removeEventListener('blur', close);\n      window.removeEventListener('resize', close);\n    };\n  }, [onOpenChange]);\n  const [searchRef, handleTypeaheadSearch] = $cc7e05a45900e73f$var$useTypeaheadSearch(search => {\n    const enabledItems = getItems().filter(item => !item.disabled);\n    const currentItem = enabledItems.find(item => item.ref.current === document.activeElement);\n    const nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);\n    if (nextItem)\n      /**\n      * Imperative focus during keydown is risky so we prevent React's batching updates\n      * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n      */\n      setTimeout(() => nextItem.ref.current.focus());\n  });\n  const itemRefCallback = $01b9c$useCallback((node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n    const isSelectedItem = context.value !== undefined && context.value === value;\n\n    if (isSelectedItem || isFirstValidItem) {\n      setSelectedItem(node);\n      if (isFirstValidItem) firstValidItemFoundRef.current = true;\n    }\n  }, [context.value]);\n  const handleItemLeave = $01b9c$useCallback(() => content === null || content === void 0 ? void 0 : content.focus(), [content]);\n  const itemTextRefCallback = $01b9c$useCallback((node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n    const isSelectedItem = context.value !== undefined && context.value === value;\n    if (isSelectedItem || isFirstValidItem) setSelectedItemText(node);\n  }, [context.value]);\n  return /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectContentProvider, {\n    scope: __scopeSelect,\n    contentWrapper: contentWrapper,\n    content: content,\n    viewport: viewport,\n    onViewportChange: setViewport,\n    itemRefCallback: itemRefCallback,\n    selectedItem: selectedItem,\n    onItemLeave: handleItemLeave,\n    itemTextRefCallback: itemTextRefCallback,\n    selectedItemText: selectedItemText,\n    onScrollButtonChange: handleScrollButtonChange,\n    isPositioned: isPositioned,\n    shouldExpandOnScrollRef: shouldExpandOnScrollRef,\n    searchRef: searchRef\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$RemoveScroll, {\n    as: $01b9c$Slot,\n    allowPinchZoom: true\n  }, /*#__PURE__*/$01b9c$createElement(\"div\", {\n    ref: setContentWrapper,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'fixed',\n      zIndex: contentZIndex\n    }\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$FocusScope, {\n    asChild: true // we make sure we're not trapping once it's been closed\n    ,\n    trapped: context.open,\n    onMountAutoFocus: event => {\n      // we prevent open autofocus because we manually focus the selected item\n      event.preventDefault();\n    },\n    onUnmountAutoFocus: $01b9c$composeEventHandlers(onCloseAutoFocus, event => {\n      var _context$trigger;\n\n      (_context$trigger = context.trigger) === null || _context$trigger === void 0 || _context$trigger.focus({\n        preventScroll: true\n      });\n      event.preventDefault();\n    })\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$DismissableLayer, $01b9c$babelruntimehelpersesmextends({\n    role: \"listbox\",\n    id: context.contentId,\n    \"data-state\": context.open ? 'open' : 'closed',\n    dir: context.dir,\n    onContextMenu: event => event.preventDefault()\n  }, contentProps, {\n    ref: composedRefs,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      // When we get the height of the content, it includes borders. If we were to set\n      // the height without having `boxSizing: 'border-box'` it would be too big.\n      boxSizing: 'border-box',\n      maxHeight: '100%',\n      outline: 'none',\n      ...contentProps.style\n    },\n    disableOutsidePointerEvents: true // When focus is trapped, a focusout event may still happen.\n    ,\n    onFocusOutside: event => event.preventDefault(),\n    onDismiss: () => context.onOpenChange(false),\n    onKeyDown: $01b9c$composeEventHandlers(contentProps.onKeyDown, event => {\n      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey; // select should not be navigated using tab key so we prevent it\n\n      if (event.key === 'Tab') event.preventDefault();\n      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n      if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n        const items = getItems().filter(item => !item.disabled);\n        let candidateNodes = items.map(item => item.ref.current);\n        if (['ArrowUp', 'End'].includes(event.key)) candidateNodes = candidateNodes.slice().reverse();\n\n        if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n          const currentElement = event.target;\n          const currentIndex = candidateNodes.indexOf(currentElement);\n          candidateNodes = candidateNodes.slice(currentIndex + 1);\n        }\n        /**\n        * Imperative focus during keydown is risky so we prevent React's batching updates\n        * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n        */\n\n\n        setTimeout(() => focusFirst(candidateNodes));\n        event.preventDefault();\n      }\n    })\n  }))))));\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$VIEWPORT_NAME = 'SelectViewport';\nconst $cc7e05a45900e73f$export$9ed6e7b40248d36d = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    ...viewportProps\n  } = props;\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$VIEWPORT_NAME, __scopeSelect);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, contentContext.onViewportChange);\n  const prevScrollTopRef = $01b9c$useRef(0);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Fragment, null, /*#__PURE__*/$01b9c$createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`\n    }\n  }), /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$Collection.Slot, {\n    scope: __scopeSelect\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    \"data-radix-select-viewport\": \"\",\n    role: \"presentation\"\n  }, viewportProps, {\n    ref: composedRefs,\n    style: {\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: 1,\n      overflow: 'auto',\n      ...viewportProps.style\n    },\n    onScroll: $01b9c$composeEventHandlers(viewportProps.onScroll, event => {\n      const viewport = event.currentTarget;\n      const {\n        contentWrapper: contentWrapper,\n        shouldExpandOnScrollRef: shouldExpandOnScrollRef\n      } = contentContext;\n\n      if (shouldExpandOnScrollRef !== null && shouldExpandOnScrollRef !== void 0 && shouldExpandOnScrollRef.current && contentWrapper) {\n        const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n\n        if (scrolledBy > 0) {\n          const availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2;\n          const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n          const cssHeight = parseFloat(contentWrapper.style.height);\n          const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n          if (prevHeight < availableHeight) {\n            const nextHeight = prevHeight + scrolledBy;\n            const clampedNextHeight = Math.min(availableHeight, nextHeight);\n            const heightDiff = nextHeight - clampedNextHeight;\n            contentWrapper.style.height = clampedNextHeight + 'px';\n\n            if (contentWrapper.style.bottom === '0px') {\n              viewport.scrollTop = heightDiff > 0 ? heightDiff : 0; // ensure the content stays pinned to the bottom\n\n              contentWrapper.style.justifyContent = 'flex-end';\n            }\n          }\n        }\n      }\n\n      prevScrollTopRef.current = viewport.scrollTop;\n    })\n  }))));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$9ed6e7b40248d36d, {\n  displayName: $cc7e05a45900e73f$var$VIEWPORT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$GROUP_NAME = 'SelectGroup';\nconst [$cc7e05a45900e73f$var$SelectGroupContextProvider, $cc7e05a45900e73f$var$useSelectGroupContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$GROUP_NAME);\nconst $cc7e05a45900e73f$export$ee25a334c55de1f4 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    ...groupProps\n  } = props;\n  const groupId = $01b9c$useId();\n  return /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectGroupContextProvider, {\n    scope: __scopeSelect,\n    id: groupId\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    role: \"group\",\n    \"aria-labelledby\": groupId\n  }, groupProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$ee25a334c55de1f4, {\n  displayName: $cc7e05a45900e73f$var$GROUP_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$LABEL_NAME = 'SelectLabel';\nconst $cc7e05a45900e73f$export$f67338d29bd972f8 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    ...labelProps\n  } = props;\n  const groupContext = $cc7e05a45900e73f$var$useSelectGroupContext($cc7e05a45900e73f$var$LABEL_NAME, __scopeSelect);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    id: groupContext.id\n  }, labelProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$f67338d29bd972f8, {\n  displayName: $cc7e05a45900e73f$var$LABEL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$ITEM_NAME = 'SelectItem';\nconst [$cc7e05a45900e73f$var$SelectItemContextProvider, $cc7e05a45900e73f$var$useSelectItemContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$ITEM_NAME);\nconst $cc7e05a45900e73f$export$13ef48a934230896 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    value: value,\n    disabled = false,\n    textValue: textValueProp,\n    ...itemProps\n  } = props;\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect);\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect);\n  const isSelected = context.value === value;\n  const [textValue, setTextValue] = $01b9c$useState(textValueProp !== null && textValueProp !== void 0 ? textValueProp : '');\n  const [isFocused, setIsFocused] = $01b9c$useState(false);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, node => {\n    var _contentContext$itemR;\n\n    return (_contentContext$itemR = contentContext.itemRefCallback) === null || _contentContext$itemR === void 0 ? void 0 : _contentContext$itemR.call(contentContext, node, value, disabled);\n  });\n  const textId = $01b9c$useId();\n\n  const handleSelect = () => {\n    if (!disabled) {\n      context.onValueChange(value);\n      context.onOpenChange(false);\n    }\n  };\n\n  return /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectItemContextProvider, {\n    scope: __scopeSelect,\n    value: value,\n    disabled: disabled,\n    textId: textId,\n    isSelected: isSelected,\n    onItemTextChange: $01b9c$useCallback(node => {\n      setTextValue(prevTextValue => {\n        var _node$textContent;\n\n        return prevTextValue || ((_node$textContent = node === null || node === void 0 ? void 0 : node.textContent) !== null && _node$textContent !== void 0 ? _node$textContent : '').trim();\n      });\n    }, [])\n  }, /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$Collection.ItemSlot, {\n    scope: __scopeSelect,\n    value: value,\n    disabled: disabled,\n    textValue: textValue\n  }, /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    role: \"option\",\n    \"aria-labelledby\": textId,\n    \"data-highlighted\": isFocused ? '' : undefined // `isFocused` caveat fixes stuttering in VoiceOver\n    ,\n    \"aria-selected\": isSelected && isFocused,\n    \"data-state\": isSelected ? 'checked' : 'unchecked',\n    \"aria-disabled\": disabled || undefined,\n    \"data-disabled\": disabled ? '' : undefined,\n    tabIndex: disabled ? undefined : -1\n  }, itemProps, {\n    ref: composedRefs,\n    onFocus: $01b9c$composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),\n    onBlur: $01b9c$composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),\n    onPointerUp: $01b9c$composeEventHandlers(itemProps.onPointerUp, handleSelect),\n    onPointerMove: $01b9c$composeEventHandlers(itemProps.onPointerMove, event => {\n      if (disabled) {\n        var _contentContext$onIte;\n\n        (_contentContext$onIte = contentContext.onItemLeave) === null || _contentContext$onIte === void 0 || _contentContext$onIte.call(contentContext);\n      } else // even though safari doesn't support this option, it's acceptable\n        // as it only means it might scroll a few pixels when using the pointer.\n        event.currentTarget.focus({\n          preventScroll: true\n        });\n    }),\n    onPointerLeave: $01b9c$composeEventHandlers(itemProps.onPointerLeave, event => {\n      if (event.currentTarget === document.activeElement) {\n        var _contentContext$onIte2;\n\n        (_contentContext$onIte2 = contentContext.onItemLeave) === null || _contentContext$onIte2 === void 0 || _contentContext$onIte2.call(contentContext);\n      }\n    }),\n    onKeyDown: $01b9c$composeEventHandlers(itemProps.onKeyDown, event => {\n      var _contentContext$searc;\n\n      const isTypingAhead = ((_contentContext$searc = contentContext.searchRef) === null || _contentContext$searc === void 0 ? void 0 : _contentContext$searc.current) !== '';\n      if (isTypingAhead && event.key === ' ') return;\n      if ($cc7e05a45900e73f$var$SELECTION_KEYS.includes(event.key)) handleSelect(); // prevent page scroll if using the space key to select an item\n\n      if (event.key === ' ') event.preventDefault();\n    })\n  }))));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$13ef48a934230896, {\n  displayName: $cc7e05a45900e73f$var$ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$ITEM_TEXT_NAME = 'SelectItemText';\nconst $cc7e05a45900e73f$export$3572fb0fb821ff49 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  // We ignore `className` and `style` as this part shouldn't be styled.\n  const {\n    __scopeSelect: __scopeSelect,\n    className: className,\n    style: style,\n    ...itemTextProps\n  } = props;\n  const context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);\n  const itemContext = $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);\n  const nativeOptionsContext = $cc7e05a45900e73f$var$useSelectNativeOptionsContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect);\n  const [itemTextNode, setItemTextNode] = $01b9c$useState(null);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, node => setItemTextNode(node), itemContext.onItemTextChange, node => {\n    var _contentContext$itemT;\n\n    return (_contentContext$itemT = contentContext.itemTextRefCallback) === null || _contentContext$itemT === void 0 ? void 0 : _contentContext$itemT.call(contentContext, node, itemContext.value, itemContext.disabled);\n  });\n  const textContent = itemTextNode === null || itemTextNode === void 0 ? void 0 : itemTextNode.textContent;\n  const nativeOption = $01b9c$useMemo(() => /*#__PURE__*/$01b9c$createElement(\"option\", {\n    key: itemContext.value,\n    value: itemContext.value,\n    disabled: itemContext.disabled\n  }, textContent), [itemContext.disabled, itemContext.value, textContent]);\n  const {\n    onNativeOptionAdd: onNativeOptionAdd,\n    onNativeOptionRemove: onNativeOptionRemove\n  } = nativeOptionsContext;\n  $01b9c$useLayoutEffect(() => {\n    onNativeOptionAdd(nativeOption);\n    return () => onNativeOptionRemove(nativeOption);\n  }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Fragment, null, /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.span, $01b9c$babelruntimehelpersesmextends({\n    id: itemContext.textId\n  }, itemTextProps, {\n    ref: composedRefs\n  })), itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? /*#__PURE__*/$01b9c$createPortal(itemTextProps.children, context.valueNode) : null);\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$3572fb0fb821ff49, {\n  displayName: $cc7e05a45900e73f$var$ITEM_TEXT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$ITEM_INDICATOR_NAME = 'SelectItemIndicator';\nconst $cc7e05a45900e73f$export$6b9198de19accfe6 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    ...itemIndicatorProps\n  } = props;\n  const itemContext = $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_INDICATOR_NAME, __scopeSelect);\n  return itemContext.isSelected ? /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.span, $01b9c$babelruntimehelpersesmextends({\n    \"aria-hidden\": true\n  }, itemIndicatorProps, {\n    ref: forwardedRef\n  })) : null;\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$6b9198de19accfe6, {\n  displayName: $cc7e05a45900e73f$var$ITEM_INDICATOR_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\nconst $cc7e05a45900e73f$export$d8117927658af6d7 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp1, setCanScrollUp] = $01b9c$useState(false);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, contentContext.onScrollButtonChange);\n  $01b9c$useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollUp1 ? /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectScrollButtonImpl, $01b9c$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs,\n    onAutoScroll: () => {\n      const {\n        viewport: viewport,\n        selectedItem: selectedItem\n      } = contentContext;\n      if (viewport && selectedItem) viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n    }\n  })) : null;\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$d8117927658af6d7, {\n  displayName: $cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\nconst $cc7e05a45900e73f$export$ff951e476c12189 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown1, setCanScrollDown] = $01b9c$useState(false);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, contentContext.onScrollButtonChange);\n  $01b9c$useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight; // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollDown1 ? /*#__PURE__*/$01b9c$createElement($cc7e05a45900e73f$var$SelectScrollButtonImpl, $01b9c$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs,\n    onAutoScroll: () => {\n      const {\n        viewport: viewport,\n        selectedItem: selectedItem\n      } = contentContext;\n      if (viewport && selectedItem) viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n    }\n  })) : null;\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$ff951e476c12189, {\n  displayName: $cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME\n});\nconst $cc7e05a45900e73f$var$SelectScrollButtonImpl = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    onAutoScroll: onAutoScroll,\n    ...scrollIndicatorProps\n  } = props;\n  const contentContext = $cc7e05a45900e73f$var$useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = $01b9c$useRef(null);\n  const getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect);\n  const clearAutoScrollTimer = $01b9c$useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n  $01b9c$useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]); // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n\n  $01b9c$useLayoutEffect(() => {\n    var _activeItem$ref$curre;\n\n    const activeItem = getItems().find(item => item.ref.current === document.activeElement);\n    activeItem === null || activeItem === void 0 || (_activeItem$ref$curre = activeItem.ref.current) === null || _activeItem$ref$curre === void 0 || _activeItem$ref$curre.scrollIntoView({\n      block: 'nearest'\n    });\n  }, [getItems]);\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    \"aria-hidden\": true\n  }, scrollIndicatorProps, {\n    ref: forwardedRef,\n    style: {\n      flexShrink: 0,\n      ...scrollIndicatorProps.style\n    },\n    onPointerMove: $01b9c$composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n      var _contentContext$onIte3;\n\n      (_contentContext$onIte3 = contentContext.onItemLeave) === null || _contentContext$onIte3 === void 0 || _contentContext$onIte3.call(contentContext);\n      if (autoScrollTimerRef.current === null) autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n    }),\n    onPointerLeave: $01b9c$composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n      clearAutoScrollTimer();\n    })\n  }));\n});\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$SEPARATOR_NAME = 'SelectSeparator';\nconst $cc7e05a45900e73f$export$eba4b1df07cb1d3 = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect: __scopeSelect,\n    ...separatorProps\n  } = props;\n  return /*#__PURE__*/$01b9c$createElement($01b9c$Primitive.div, $01b9c$babelruntimehelpersesmextends({\n    \"aria-hidden\": true\n  }, separatorProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($cc7e05a45900e73f$export$eba4b1df07cb1d3, {\n  displayName: $cc7e05a45900e73f$var$SEPARATOR_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $cc7e05a45900e73f$var$BubbleSelect = /*#__PURE__*/$01b9c$forwardRef((props, forwardedRef) => {\n  const {\n    value: value,\n    ...selectProps\n  } = props;\n  const ref = $01b9c$useRef(null);\n  const composedRefs = $01b9c$useComposedRefs(forwardedRef, ref);\n  const prevValue = $01b9c$usePrevious(value); // Bubble value change to parents (e.g form change event)\n\n  $01b9c$useEffect(() => {\n    const select = ref.current;\n    const selectProto = window.HTMLSelectElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(selectProto, 'value');\n    const setValue = descriptor.set;\n\n    if (prevValue !== value && setValue) {\n      const event = new Event('change', {\n        bubbles: true\n      });\n      setValue.call(select, value);\n      select.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n  /**\n  * We purposefully use a `select` here to support form autofill as much\n  * as possible.\n  *\n  * We purposefully do not add the `value` attribute here to allow the value\n  * to be set programatically and bubble to any parent form `onChange` event.\n  * Adding the `value` will cause React to consider the programatic\n  * dispatch a duplicate and it will get swallowed.\n  *\n  * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n  * won't work otherwise.\n  */\n\n  return /*#__PURE__*/$01b9c$createElement($01b9c$VisuallyHidden, {\n    asChild: true\n  }, /*#__PURE__*/$01b9c$createElement(\"select\", $01b9c$babelruntimehelpersesmextends({}, selectProps, {\n    ref: composedRefs,\n    defaultValue: value\n  })));\n});\n$cc7e05a45900e73f$var$BubbleSelect.displayName = 'BubbleSelect';\n\nfunction $cc7e05a45900e73f$var$useTypeaheadSearch(onSearchChange) {\n  const handleSearchChange = $01b9c$useCallbackRef(onSearchChange);\n  const searchRef = $01b9c$useRef('');\n  const timerRef = $01b9c$useRef(0);\n  const handleTypeaheadSearch = $01b9c$useCallback(key => {\n    const search = searchRef.current + key;\n    handleSearchChange(search);\n\n    (function updateSearch(value) {\n      searchRef.current = value;\n      window.clearTimeout(timerRef.current); // Reset `searchRef` 1 second after it was last updated\n\n      if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n    })(search);\n  }, [handleSearchChange]);\n  const resetTypeahead = $01b9c$useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n  $01b9c$useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n  return [searchRef, handleTypeaheadSearch, resetTypeahead];\n}\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\n\n\nfunction $cc7e05a45900e73f$var$findNextItem(items, search, currentItem) {\n  const isRepeated = search.length > 1 && Array.from(search).every(char => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = $cc7e05a45900e73f$var$wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter(v => v !== currentItem);\n  const nextItem = wrappedItems.find(item => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase()));\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\n\n\nfunction $cc7e05a45900e73f$var$wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst $cc7e05a45900e73f$export$be92b6f5f03c0fe9 = $cc7e05a45900e73f$export$ef9b1a59e592288f;\nconst $cc7e05a45900e73f$export$41fb9f06171c75f4 = $cc7e05a45900e73f$export$3ac1e88a1c0b9f1;\nconst $cc7e05a45900e73f$export$4c8d1a57a761ef94 = $cc7e05a45900e73f$export$e288731fd71264f0;\nconst $cc7e05a45900e73f$export$f04a61298a47a40f = $cc7e05a45900e73f$export$99b400cabb58c515;\nconst $cc7e05a45900e73f$export$602eac185826482c = $cc7e05a45900e73f$export$b2af6c9944296213;\nconst $cc7e05a45900e73f$export$7c6e2c02157bb7d2 = $cc7e05a45900e73f$export$c973a4b3cb86a03d;\nconst $cc7e05a45900e73f$export$d5c6c08dc2d3ca7 = $cc7e05a45900e73f$export$9ed6e7b40248d36d;\nconst $cc7e05a45900e73f$export$eb2fcfdbd7ba97d4 = $cc7e05a45900e73f$export$ee25a334c55de1f4;\nconst $cc7e05a45900e73f$export$b04be29aa201d4f5 = $cc7e05a45900e73f$export$f67338d29bd972f8;\nconst $cc7e05a45900e73f$export$6d08773d2e66f8f2 = $cc7e05a45900e73f$export$13ef48a934230896;\nconst $cc7e05a45900e73f$export$d6e5bf9c43ea9319 = $cc7e05a45900e73f$export$3572fb0fb821ff49;\nconst $cc7e05a45900e73f$export$c3468e2714d175fa = $cc7e05a45900e73f$export$6b9198de19accfe6;\nconst $cc7e05a45900e73f$export$2f60d3ec9ad468f2 = $cc7e05a45900e73f$export$d8117927658af6d7;\nconst $cc7e05a45900e73f$export$bf1aedc3039c8d63 = $cc7e05a45900e73f$export$ff951e476c12189;\nconst $cc7e05a45900e73f$export$1ff3c3f08ae963c0 = $cc7e05a45900e73f$export$eba4b1df07cb1d3;\nexport { $cc7e05a45900e73f$export$286727a75dc039bd as createSelectScope, $cc7e05a45900e73f$export$ef9b1a59e592288f as Select, $cc7e05a45900e73f$export$3ac1e88a1c0b9f1 as SelectTrigger, $cc7e05a45900e73f$export$e288731fd71264f0 as SelectValue, $cc7e05a45900e73f$export$99b400cabb58c515 as SelectIcon, $cc7e05a45900e73f$export$b2af6c9944296213 as SelectPortal, $cc7e05a45900e73f$export$c973a4b3cb86a03d as SelectContent, $cc7e05a45900e73f$export$9ed6e7b40248d36d as SelectViewport, $cc7e05a45900e73f$export$ee25a334c55de1f4 as SelectGroup, $cc7e05a45900e73f$export$f67338d29bd972f8 as SelectLabel, $cc7e05a45900e73f$export$13ef48a934230896 as SelectItem, $cc7e05a45900e73f$export$3572fb0fb821ff49 as SelectItemText, $cc7e05a45900e73f$export$6b9198de19accfe6 as SelectItemIndicator, $cc7e05a45900e73f$export$d8117927658af6d7 as SelectScrollUpButton, $cc7e05a45900e73f$export$ff951e476c12189 as SelectScrollDownButton, $cc7e05a45900e73f$export$eba4b1df07cb1d3 as SelectSeparator, $cc7e05a45900e73f$export$be92b6f5f03c0fe9 as Root, $cc7e05a45900e73f$export$41fb9f06171c75f4 as Trigger, $cc7e05a45900e73f$export$4c8d1a57a761ef94 as Value, $cc7e05a45900e73f$export$f04a61298a47a40f as Icon, $cc7e05a45900e73f$export$602eac185826482c as Portal, $cc7e05a45900e73f$export$7c6e2c02157bb7d2 as Content, $cc7e05a45900e73f$export$d5c6c08dc2d3ca7 as Viewport, $cc7e05a45900e73f$export$eb2fcfdbd7ba97d4 as Group, $cc7e05a45900e73f$export$b04be29aa201d4f5 as Label, $cc7e05a45900e73f$export$6d08773d2e66f8f2 as Item, $cc7e05a45900e73f$export$d6e5bf9c43ea9319 as ItemText, $cc7e05a45900e73f$export$c3468e2714d175fa as ItemIndicator, $cc7e05a45900e73f$export$2f60d3ec9ad468f2 as ScrollUpButton, $cc7e05a45900e73f$export$bf1aedc3039c8d63 as ScrollDownButton, $cc7e05a45900e73f$export$1ff3c3f08ae963c0 as Separator };","map":{"version":3,"sources":["packages/react/select/src/Select.tsx"],"names":["OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","createCollection","createContextScope","createSelectContext","Select","props","open","value","React","direction","useDirection","useControllableState","prop","defaultProp","onChange","triggerPointerDownPosRef","isFormControl","trigger","Boolean","nativeSelectKey","option","useId","setNativeOptionsSet","prev","optionsSet","event","setValue","Array","TRIGGER_NAME","SelectTrigger","disabled","context","useSelectContext","composedRefs","useComposedRefs","getItems","useCollection","labelId","useLabelContext","labelledBy","ariaLabelledby","useTypeaheadSearch","search","enabledItems","item","currentItem","nextItem","findNextItem","handleOpen","resetTypeahead","composeEventHandlers","triggerProps","x","Math","y","isTypingAhead","searchRef","isModifierKey","handleTypeaheadSearch","VALUE_NAME","SelectValue","hasChildren","children","useLayoutEffect","onValueNodeHasChildrenChange","pointerEvents","placeholder","ICON_NAME","SelectIcon","PORTAL_NAME","SelectPortal","CONTENT_NAME","SelectContent","setFragment","fragment","ReactDOM","CONTENT_MARGIN","SelectContentImpl","node","setContent","shouldRepositionRef","shouldExpandOnScrollRef","firstValidItemFoundRef","hideOthers","useFocusGuards","setContentZIndex","window","focusFirst","candidates","restItems","PREVIOUSLY_FOCUSED_ELEMENT","document","candidate","block","viewport","position","triggerRect","contentRect","content","valueNodeRect","itemTextRect","selectedItemText","itemTextOffset","left","leftDelta","minContentWidth","contentWidth","rightEdge","clampedLeft","clamp","contentWrapper","right","rightDelta","leftEdge","clampedRight","items","availableHeight","itemsHeight","contentStyles","contentBorderTopWidth","parseInt","contentPaddingTop","contentBorderBottomWidth","contentPaddingBottom","fullContentHeight","minContentHeight","selectedItem","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","triggerMiddleToBottomEdge","selectedItemHalfHeight","itemOffsetMiddle","contentTopToItemMiddle","itemMiddleToContentBottom","willAlignWithoutTopOverflow","isLastItem","viewportOffsetBottom","clampedTriggerMiddleToBottomEdge","height","isFirstItem","clampedTopEdgeToTriggerMiddle","setIsPositioned","requestAnimationFrame","focusSelectedItem","handleScrollButtonChange","pointerMoveDelta","handlePointerMove","handlePointerUp","onOpenChange","capture","once","close","itemRefCallback","isFirstValidItem","isSelectedItem","setSelectedItem","handleItemLeave","itemTextRefCallback","setSelectedItemText","display","flexDirection","zIndex","preventScroll","boxSizing","maxHeight","outline","contentProps","candidateNodes","currentElement","currentIndex","setTimeout","VIEWPORT_NAME","SelectViewport","contentContext","useSelectContentContext","prevScrollTopRef","__html","flex","overflow","viewportProps","scrolledBy","cssMinHeight","parseFloat","cssHeight","prevHeight","nextHeight","clampedNextHeight","heightDiff","GROUP_NAME","SelectGroup","groupId","LABEL_NAME","SelectLabel","groupContext","useSelectGroupContext","ITEM_NAME","SelectItem","textValue","isSelected","textValueProp","textId","handleSelect","setTextValue","prevTextValue","isFocused","itemProps","setIsFocused","ITEM_TEXT_NAME","SelectItemText","itemContext","useSelectItemContext","nativeOptionsContext","useSelectNativeOptionsContext","setItemTextNode","textContent","itemTextNode","nativeOption","onNativeOptionAdd","onNativeOptionRemove","itemTextProps","ITEM_INDICATOR_NAME","SelectItemIndicator","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","handleScroll","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","maxScroll","canScrollDown","setCanScrollDown","SelectScrollButtonImpl","autoScrollTimerRef","clearAutoScrollTimer","activeItem","flexShrink","scrollIndicatorProps","SEPARATOR_NAME","SelectSeparator","BubbleSelect","ref","prevValue","usePrevious","select","selectProto","descriptor","Object","bubbles","handleSearchChange","useCallbackRef","timerRef","key","updateSearch","isRepeated","char","normalizedSearch","currentItemIndex","wrappedItems","wrapArray","excludeCurrentItem","v","array","startIndex","Root","Trigger","Value","Icon","Portal","Content","Viewport","Group","Label","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport { useLabelContext } from '@radix-ui/react-label';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n]);\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value?: string;\n  onValueChange(value: string): void;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface SelectProps {\n  children?: React.ReactNode;\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n}\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n  } = props;\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? Boolean(trigger.closest('form')) : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <SelectProvider\n      scope={__scopeSelect}\n      trigger={trigger}\n      onTriggerChange={setTrigger}\n      valueNode={valueNode}\n      onValueNodeChange={setValueNode}\n      valueNodeHasChildren={valueNodeHasChildren}\n      onValueNodeHasChildrenChange={setValueNodeHasChildren}\n      contentId={useId()}\n      value={value}\n      onValueChange={setValue}\n      open={open}\n      onOpenChange={setOpen}\n      dir={direction}\n      triggerPointerDownPosRef={triggerPointerDownPosRef}\n    >\n      <Collection.Provider scope={__scopeSelect}>\n        <SelectNativeOptionsProvider\n          scope={props.__scopeSelect}\n          onNativeOptionAdd={React.useCallback((option) => {\n            setNativeOptionsSet((prev) => new Set(prev).add(option));\n          }, [])}\n          onNativeOptionRemove={React.useCallback((option) => {\n            setNativeOptionsSet((prev) => {\n              const optionsSet = new Set(prev);\n              optionsSet.delete(option);\n              return optionsSet;\n            });\n          }, [])}\n        >\n          {children}\n        </SelectNativeOptionsProvider>\n      </Collection.Provider>\n\n      {isFormControl ? (\n        <BubbleSelect\n          key={nativeSelectKey}\n          aria-hidden\n          tabIndex={-1}\n          name={name}\n          autoComplete={autoComplete}\n          value={value}\n          // enable form autofill\n          onChange={(event) => setValue(event.target.value)}\n        >\n          {Array.from(nativeOptionsSet)}\n        </BubbleSelect>\n      ) : null}\n    </SelectProvider>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      disabled = false,\n      'aria-labelledby': ariaLabelledby,\n      ...triggerProps\n    } = props;\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const labelId = useLabelContext(context.trigger);\n    const labelledBy = ariaLabelledby || labelId;\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = () => {\n      if (!disabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n    };\n\n    return (\n      <Primitive.button\n        type=\"button\"\n        role=\"combobox\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open}\n        aria-autocomplete=\"none\"\n        aria-labelledby={labelledBy}\n        dir={context.dir}\n        data-state={context.open ? 'open' : 'closed'}\n        disabled={disabled}\n        data-disabled={disabled ? '' : undefined}\n        data-placeholder={context.value === undefined ? '' : undefined}\n        {...triggerProps}\n        ref={composedRefs}\n        onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n          // prevent implicit pointer capture\n          // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n\n          // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n          // but not when the control key is pressed (avoiding MacOS right click)\n          if (event.button === 0 && event.ctrlKey === false) {\n            handleOpen();\n            context.triggerPointerDownPosRef.current = {\n              x: Math.round(event.pageX),\n              y: Math.round(event.pageY),\n            };\n            // prevent trigger from stealing focus from the active item after opening.\n            event.preventDefault();\n          }\n        })}\n        onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n          const isTypingAhead = searchRef.current !== '';\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n          if (isTypingAhead && event.key === ' ') return;\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder, ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {context.value === undefined && placeholder !== undefined ? placeholder : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '▼'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    return (\n      <>\n        {context.open ? (\n          <SelectContentImpl {...props} ref={forwardedRef} />\n        ) : fragment ? (\n          ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            fragment as any\n          )\n        ) : null}\n      </>\n    );\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  selectedItemText?: SelectItemTextElement | null;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n  isPositioned?: boolean;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\ntype SelectContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface SelectContentImplProps\n  extends Omit<\n    DismissableLayerProps,\n    'disableOutsidePointerEvents' | 'onFocusOutside' | 'onInteractOutside' | 'onDismiss'\n  > {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const { __scopeSelect, onCloseAutoFocus, ...contentProps } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const shouldRepositionRef = React.useRef(true);\n    const shouldExpandOnScrollRef = React.useRef(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const position = React.useCallback(() => {\n      if (\n        context.trigger &&\n        context.valueNode &&\n        contentWrapper &&\n        content &&\n        viewport &&\n        selectedItem &&\n        selectedItemText\n      ) {\n        const triggerRect = context.trigger.getBoundingClientRect();\n\n        // -----------------------------------------------------------------------------------------\n        //  Horizontal positioning\n        // -----------------------------------------------------------------------------------------\n        const contentRect = content.getBoundingClientRect();\n        const valueNodeRect = context.valueNode.getBoundingClientRect();\n        const itemTextRect = selectedItemText.getBoundingClientRect();\n\n        if (context.dir !== 'rtl') {\n          const itemTextOffset = itemTextRect.left - contentRect.left;\n          const left = valueNodeRect.left - itemTextOffset;\n          const leftDelta = triggerRect.left - left;\n          const minContentWidth = triggerRect.width + leftDelta;\n          const contentWidth = Math.max(minContentWidth, contentRect.width);\n          const rightEdge = window.innerWidth - CONTENT_MARGIN;\n          const clampedLeft = clamp(left, [CONTENT_MARGIN, rightEdge - contentWidth]);\n\n          contentWrapper.style.minWidth = minContentWidth + 'px';\n          contentWrapper.style.left = clampedLeft + 'px';\n        } else {\n          const itemTextOffset = contentRect.right - itemTextRect.right;\n          const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n          const rightDelta = window.innerWidth - triggerRect.right - right;\n          const minContentWidth = triggerRect.width + rightDelta;\n          const contentWidth = Math.max(minContentWidth, contentRect.width);\n          const leftEdge = window.innerWidth - CONTENT_MARGIN;\n          const clampedRight = clamp(right, [CONTENT_MARGIN, leftEdge - contentWidth]);\n\n          contentWrapper.style.minWidth = minContentWidth + 'px';\n          contentWrapper.style.right = clampedRight + 'px';\n        }\n\n        // -----------------------------------------------------------------------------------------\n        // Vertical positioning\n        // -----------------------------------------------------------------------------------------\n        const items = getItems();\n        const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n        const itemsHeight = viewport.scrollHeight;\n\n        const contentStyles = window.getComputedStyle(content);\n        const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n        const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n        const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n        const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n        const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n        const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n        const viewportStyles = window.getComputedStyle(viewport);\n        const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n        const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n        const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n        const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n        const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n        const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n        const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n        const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n        const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n        if (willAlignWithoutTopOverflow) {\n          const isLastItem = selectedItem === items[items.length - 1].ref.current;\n          contentWrapper.style.bottom = 0 + 'px';\n          const viewportOffsetBottom =\n            content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n          const clampedTriggerMiddleToBottomEdge = Math.max(\n            triggerMiddleToBottomEdge,\n            selectedItemHalfHeight +\n              // viewport might have padding bottom, include it to avoid a scrollable viewport\n              (isLastItem ? viewportPaddingBottom : 0) +\n              viewportOffsetBottom +\n              contentBorderBottomWidth\n          );\n          const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n          contentWrapper.style.height = height + 'px';\n        } else {\n          const isFirstItem = selectedItem === items[0].ref.current;\n          contentWrapper.style.top = 0 + 'px';\n          const clampedTopEdgeToTriggerMiddle = Math.max(\n            topEdgeToTriggerMiddle,\n            contentBorderTopWidth +\n              viewport.offsetTop +\n              // viewport might have padding top, include it to avoid a scrollable viewport\n              (isFirstItem ? viewportPaddingTop : 0) +\n              selectedItemHalfHeight\n          );\n          const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n          contentWrapper.style.height = height + 'px';\n          viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n        }\n\n        contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n        contentWrapper.style.minHeight = minContentHeight + 'px';\n        contentWrapper.style.maxHeight = availableHeight + 'px';\n        // -----------------------------------------------------------------------------------------\n\n        setIsPositioned(true);\n\n        // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n        // so we explicitly turn it on only after they've registered.\n        requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n      }\n    }, [\n      getItems,\n      context.trigger,\n      context.valueNode,\n      contentWrapper,\n      content,\n      viewport,\n      selectedItem,\n      selectedItemText,\n      context.dir,\n    ]);\n\n    useLayoutEffect(() => position(), [position]);\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // When the viewport becomes scrollable at the top, the scroll up button will mount.\n    // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n    // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n    // We wait for this to happen and then re-run the positining logic one more time to account for it.\n    const handleScrollButtonChange = React.useCallback(\n      (node: SelectScrollButtonImplElement | null) => {\n        if (node && shouldRepositionRef.current === true) {\n          position();\n          focusSelectedItem();\n          shouldRepositionRef.current = false;\n        }\n      },\n      [position, focusSelectedItem]\n    );\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        contentWrapper={contentWrapper}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        selectedItemText={selectedItemText}\n        onScrollButtonChange={handleScrollButtonChange}\n        isPositioned={isPositioned}\n        shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <div\n            ref={setContentWrapper}\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              position: 'fixed',\n              zIndex: contentZIndex,\n            }}\n          >\n            <FocusScope\n              asChild\n              // we make sure we're not trapping once it's been closed\n              // (closed !== unmounted when animating out)\n              trapped={context.open}\n              onMountAutoFocus={(event) => {\n                // we prevent open autofocus because we manually focus the selected item\n                event.preventDefault();\n              }}\n              onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n                context.trigger?.focus({ preventScroll: true });\n                event.preventDefault();\n              })}\n            >\n              <DismissableLayer\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                ref={composedRefs}\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // When we get the height of the content, it includes borders. If we were to set\n                  // the height without having `boxSizing: 'border-box'` it would be too big.\n                  boxSizing: 'border-box',\n                  maxHeight: '100%',\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                disableOutsidePointerEvents\n                // When focus is trapped, a focusout event may still happen.\n                // We make sure we don't trigger our `onDismiss` in such case.\n                onFocusOutside={(event) => event.preventDefault()}\n                onDismiss={() => context.onOpenChange(false)}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </FocusScope>\n          </div>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              overflow: 'auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = contentContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, handleSelect)}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, contentContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, contentContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleSelect = React.forwardRef<HTMLSelectElement, React.ComponentPropsWithoutRef<'select'>>(\n  (props, forwardedRef) => {\n    const { value, ...selectProps } = props;\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current!;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much\n     * as possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programatically and bubble to any parent form `onChange` event.\n     * Adding the `value` will cause React to consider the programatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n     * won't work otherwise.\n     */\n    return (\n      <VisuallyHidden asChild>\n        <select {...selectProps} ref={composedRefs} defaultValue={value} />\n      </VisuallyHidden>\n    );\n  }\n);\n\nBubbleSelect.displayName = 'BubbleSelect';\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n};\n"]},"metadata":{},"sourceType":"module"}