{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/UseEffectMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s();\n\n  // queremos que se ejecute cuando el componente es ejecutado por primera vez\n  useEffect(() => {\n    // van a aparecer las coordenadas X e Y\n    const mouseMove = e => {\n      const coords = {\n        x: e.x,\n        y: e.y\n      }; // se estraen las coordenadas\n\n      setCoords(coords);\n    };\n\n    window.addEventListener('mousemove', mouseMove);\n    return () => {\n      window.removeEventListener('mousemove', mouseMove);\n    };\n  }, []); // dependencia por la que cuál se va a escuchar\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Ha funcionado!!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" x: \", x, \" y: \", y, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Message, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/UseEffectMessage.js"],"names":["React","useEffect","Message","mouseMove","e","coords","x","y","setCoords","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAGlB;AACAD,EAAAA,SAAS,CAAE,MAAM;AAEb;AACA,UAAME,SAAS,GAAIC,CAAD,IAAO;AACrB,YAAMC,MAAM,GAAG;AAAEC,QAAAA,CAAC,EAAEF,CAAC,CAACE,CAAP;AAAUC,QAAAA,CAAC,EAAEH,CAAC,CAACG;AAAf,OAAf,CADqB,CACa;;AAClCC,MAAAA,SAAS,CAAGH,MAAH,CAAT;AACH,KAHD;;AAKAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCP,SAArC;AAEA,WAAM,MAAM;AACTM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCR,SAAxC;AACF,KAFD;AAIH,GAdQ,EAcN,EAdM,CAAT,CAJkB,CAmBlB;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,yBAASG,CAAT,UAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA5BD;;GAAML,O;;KAAAA,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from \"react\";\n\nconst Message = () => {\n\n\n    // queremos que se ejecute cuando el componente es ejecutado por primera vez\n    useEffect( () => {\n\n        // van a aparecer las coordenadas X e Y\n        const mouseMove = (e) => {\n            const coords = { x: e.x, y: e.y}; // se estraen las coordenadas\n            setCoords ( coords );\n        }\n\n        window.addEventListener('mousemove', mouseMove );\n\n        return() => {\n           window.removeEventListener('mousemove', mouseMove );\n        }\n\n    }, [] )\n    // dependencia por la que cuál se va a escuchar\n\n\n    return (\n        <>\n            <p> Ha funcionado!!! </p>\n            <p> x: { x } y: { y } </p>\n        </>\n    );\n};\nexport default Message;"]},"metadata":{},"sourceType":"module"}