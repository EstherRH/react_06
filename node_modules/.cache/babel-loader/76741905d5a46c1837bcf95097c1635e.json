{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/AaBase.js\",\n    _s = $RefreshSig$();\n\n// Hooks\n// qué es un ESTADO\n// P ejemplo: un formulario\n// cuando se muestra la primera vez --> tiene un ESTADO INCIAL\n// si el usuario interactúa, el estado CAMBIA\n// cómo imprimir variables en el html\n// qué sucede cuando colocamos variables o constantes en nuestras etiquetas html (en el jsx)\n// Hooks --> son FUNCIONES\n// useState({}) --> el más común\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Base = () => {\n  _s();\n\n  // se hace la desestructuración\n  // setName --> es la función\n  // estructura: nombre y el set delante --> setName\n  // valor inicial --> en este caso 0\n  const [name, setName] = useState(\"Wanda\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Base, \"TsycXosb+kCMvot772i1BVfEw04=\");\n\n_c = Base;\nexport default Base;\n\nvar _c;\n\n$RefreshReg$(_c, \"Base\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_hooks/AaBase.js"],"names":["React","useState","Base","name","setName"],"mappings":";;;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf;AACA;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,OAAD,CAAhC;AAGA,sBACI;AAAA,2BACI;AAAA,sBAAKE,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAdD;;GAAMD,I;;KAAAA,I;AAeN,eAAeA,IAAf","sourcesContent":["\n// Hooks\n\n// qué es un ESTADO\n// P ejemplo: un formulario\n// cuando se muestra la primera vez --> tiene un ESTADO INCIAL\n// si el usuario interactúa, el estado CAMBIA\n\n// cómo imprimir variables en el html\n// qué sucede cuando colocamos variables o constantes en nuestras etiquetas html (en el jsx)\n\n// Hooks --> son FUNCIONES\n\n// useState({}) --> el más común\n\nimport React, { useState } from \"react\";\n\nconst Base = () => {\n\n    // se hace la desestructuración\n    // setName --> es la función\n    // estructura: nombre y el set delante --> setName\n    // valor inicial --> en este caso 0\n    const [name, setName] = useState(\"Wanda\");\n\n\n    return (\n        <>\n            <p> {name} </p>\n        </>\n    );\n};\nexport default Base;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}