{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  const query = {};\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  const result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target, ...searchParamsList) {\n  searchParamsList.forEach(searchParams => {\n    Array.from(searchParams.keys()).forEach(key => target.delete(key));\n    searchParams.forEach((value, key) => target.append(key, value));\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/querystring.ts"],"names":["searchParamsToUrlQuery","searchParams","query","forEach","value","key","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","urlQueryToSearchParams","urlQuery","result","URLSearchParams","Object","entries","item","append","set","assign","target","searchParamsList","from","keys","delete"],"mappings":";;;;;QAEgBA,sB,GAAAA,sB;QA4BAa,sB,GAAAA,sB;QAcAS,M,GAAAA,M;;SA1CAtB,sB,CACdC,Y,EACgB;AAChB,QAAMC,KAAK,GAAmB,EAA9B;AACAD,EAAAA,YAAY,CAACE,OAAbF,CAAoB,CAAEG,KAAF,EAASC,GAAT,KAAiB;AACnC,QAAI,OAAOH,KAAK,CAACG,GAAD,CAAZ,KAAsB,WAA1B,EAAuC;AACrCH,MAAAA,KAAK,CAACG,GAAD,CAALH,GAAaE,KAAbF;AACD,KAFD,MAEO,IAAII,KAAK,CAACC,OAAND,CAAcJ,KAAK,CAACG,GAAD,CAAnBC,CAAJ,EAA+B;AAClCJ,MAAAA,KAAK,CAACG,GAAD,CAALH,CAAwBM,IAAxBN,CAA6BE,KAA7BF;AACH,KAFM,MAEA;AACLA,MAAAA,KAAK,CAACG,GAAD,CAALH,GAAa,CAACA,KAAK,CAACG,GAAD,CAAN,EAAuBD,KAAvB,CAAbF;AACD;AACF,GARDD;AASA,SAAOC,KAAP;AACD;;SAEQO,sB,CAAuBC,K,EAAuB;AACrD,MACE,OAAOA,KAAP,KAAiB,QAAjB,IACC,OAAOA,KAAP,KAAiB,QAAjB,IAAyB,CAAKC,KAAK,CAACD,KAAD,CADpC,IAEA,OAAOA,KAAP,KAAiB,SAHnB,EAIE;AACA,WAAOE,MAAM,CAACF,KAAD,CAAb;AACD,GAND,MAMO;AACL,WAAO,EAAP;AACD;AACF;;SAEeG,sB,CACdC,Q,EACiB;AACjB,QAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAC,EAAAA,MAAM,CAACC,OAAPD,CAAeH,QAAfG,EAAyBd,OAAzBc,CAAgC,CAAA,CAAGZ,GAAH,EAAQD,KAAR,CAAA,KAAmB;AACjD,QAAIE,KAAK,CAACC,OAAND,CAAcF,KAAdE,CAAJ,EAA0B;AACxBF,MAAAA,KAAK,CAACD,OAANC,CAAee,IAAF,IAAWJ,MAAM,CAACK,MAAPL,CAAcV,GAAdU,EAAmBN,sBAAsB,CAACU,IAAD,CAAzCJ,CAAxBX;AACD,KAFD,MAEO;AACLW,MAAAA,MAAM,CAACM,GAAPN,CAAWV,GAAXU,EAAgBN,sBAAsB,CAACL,KAAD,CAAtCW;AACD;AACF,GANDE;AAOA,SAAOF,MAAP;AACD;;SAEeO,M,CACdC,M,EAAuB,GACpBC,gB,EACc;AACjBA,EAAAA,gBAAgB,CAACrB,OAAjBqB,CAA0BvB,YAAF,IAAmB;AACzCK,IAAAA,KAAK,CAACmB,IAANnB,CAAWL,YAAY,CAACyB,IAAbzB,EAAXK,EAAgCH,OAAhCG,CAAyCD,GAAF,IAAUkB,MAAM,CAACI,MAAPJ,CAAclB,GAAdkB,CAAjDjB;AACAL,IAAAA,YAAY,CAACE,OAAbF,CAAoB,CAAEG,KAAF,EAASC,GAAT,KAAiBkB,MAAM,CAACH,MAAPG,CAAclB,GAAdkB,EAAmBnB,KAAnBmB,CAArCtB;AACD,GAHDuB;AAIA,SAAOD,MAAP;AACD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach(([key, value])=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item))\n            );\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target, ...searchParamsList) {\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key)\n        );\n        searchParams.forEach((value, key)=>target.append(key, value)\n        );\n    });\n    return target;\n}\n\n//# sourceMappingURL=querystring.js.map"]},"metadata":{},"sourceType":"script"}