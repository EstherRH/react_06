{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { getHeroeById } from \"./components/components_02/02_ejercicio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    // resolve();\n    const heroe = getHeroeById(2); // ejemplo\n\n    console.log(heroe);\n  }, 2000);\n}); // qué hará cuando la promesa se cumpla\n// dentro reciben un callback\n// se utiliza .then() -->  la promesa se hizo correctamente\n// .catch()  --> es la excepción, sino se hace correctamente\n// .finally() --> después de then y catch\n\npromesa.then(() => {\n  console.log('Then de la promesa');\n});\npromesa.catch();","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","getHeroeById","render","document","getElementById","promesa","Promise","resolve","reject","setTimeout","heroe","console","log","then","catch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,YAAR,QAA2B,yCAA3B;;AAEAH,QAAQ,CAACI,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAJ,eAAe;AAGf,MAAMK,OAAO,GAAG,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9CC,EAAAA,UAAU,CAAE,MAAM;AACd;AAEA,UAAMC,KAAK,GAAGT,YAAY,CAAC,CAAD,CAA1B,CAHc,CAGiB;;AAC/BU,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GALS,EAKP,IALO,CAAV;AAMH,CAPe,CAAhB,C,CASA;AAEA;AACA;AACA;AACA;;AAGAL,OAAO,CAACQ,IAAR,CAAc,MAAM;AAChBF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,CAFD;AAIAP,OAAO,CAACS,KAAR","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {getHeroeById} from \"./components/components_02/02_ejercicio\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nconst promesa = new Promise( (resolve, reject) => {\n    setTimeout( () => {\n        // resolve();\n\n        const heroe = getHeroeById(2); // ejemplo\n        console.log(heroe)\n    }, 2000)\n});\n\n// qué hará cuando la promesa se cumpla\n\n// dentro reciben un callback\n// se utiliza .then() -->  la promesa se hizo correctamente\n// .catch()  --> es la excepción, sino se hace correctamente\n// .finally() --> después de then y catch\n\n\npromesa.then( () => {\n    console.log('Then de la promesa')\n})\n\npromesa.catch()\n\n"]},"metadata":{},"sourceType":"module"}