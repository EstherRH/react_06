{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_03_useLayaoutEffect/Quote.js\",\n    _s = $RefreshSig$();\n\n// useLayoutEffect (129)\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport '../04_00_hooks_useState/style.css';\nimport { useCouter1 } from \"../../hooks\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quote = () => {\n  _s();\n\n  // useRef\n  const pRef = useRef(); // tama単o original de la caja:\n\n  const [boxSize, setBoxSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const {\n    counter,\n    increment\n  } = useCouter1(1);\n  const {\n    loading,\n    data\n  } = useFetch(` https://www.breakingbadapi.com/api/quotes/${counter} `);\n  const {\n    author,\n    quote\n  } = !!data && data[0]; // nuevo:\n  // objetivo: cambiar el tama単o\n  // .current --> para tomar el valor actual\n\n  useLayoutEffect(() => {\n    const {\n      height,\n      width\n    } = pRef.current.getBoundingClientRect();\n    setBoxSize({\n      height,\n      width\n    });\n  }, [quote]); // la dependencia se dispara cada vez que el quote cambia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: \" blockquote text-right \",\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: pRef,\n        className: \"mb-1\",\n        children: [\" Hello there! \", quote, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"blockquote-footer m-5\",\n        children: [\" - \", author, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n      children: JSON.stringify(boxSize)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quote, \"8g67vyfbgKgGsMuNFdHL/Sytz3w=\", false, function () {\n  return [useCouter1, useFetch];\n});\n\n_c = Quote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_03_useLayaoutEffect/Quote.js"],"names":["React","useLayoutEffect","useRef","useState","useCouter1","useFetch","Quote","pRef","boxSize","setBoxSize","width","height","counter","increment","loading","data","author","quote","current","getBoundingClientRect","display","JSON","stringify"],"mappings":";;;AACA;AAEA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAuD,OAAvD;AACA,OAAO,mCAAP;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEvB;AACA,QAAMC,IAAI,GAAGL,MAAM,EAAnB,CAHuB,CAIvB;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAAtC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBT,UAAU,CAAC,CAAD,CAAzC;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,QAAQ,CAAG,8CAA8CO,OAAS,GAA1D,CAAlC;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoB,CAAC,CAACF,IAAF,IAAUA,IAAI,CAAC,CAAD,CAAxC,CARuB,CAUvB;AACA;AACA;;AACAd,EAAAA,eAAe,CAAC,MAAM;AAClB,UAAM;AAAEU,MAAAA,MAAF;AAAUD,MAAAA;AAAV,QAAoBH,IAAI,CAACW,OAAL,CAAaC,qBAAb,EAA1B;AACAV,IAAAA,UAAU,CAAC;AAAEE,MAAAA,MAAF;AAAUD,MAAAA;AAAV,KAAD,CAAV;AACH,GAHc,EAGZ,CAACO,KAAD,CAHY,CAAf,CAbuB,CAiBvB;;AAEA,sBACI;AAAA,4BACI;AAAY,MAAA,SAAS,EAAC,yBAAtB;AACY,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OADnB;AAAA,8BAII;AAAG,QAAA,GAAG,EAAGb,IAAT;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAA,qCAAiDU,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAAA,0BAA+CD,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBACMK,IAAI,CAACC,SAAL,CAAed,OAAf;AADN;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnCM;;GAAMF,K;UAMsBF,U,EACLC,Q;;;KAPjBC,K","sourcesContent":["\n// useLayoutEffect (129)\n\nimport React, {useLayoutEffect, useRef, useState} from \"react\";\nimport '../04_00_hooks_useState/style.css'\nimport {useCouter1} from \"../../hooks\";\nimport {useFetch} from \"../../hooks/useFetch\";\n\nexport const Quote = () => {\n\n    // useRef\n    const pRef = useRef();\n    // tama単o original de la caja:\n    const [boxSize, setBoxSize] = useState({ width: 0, height: 0 });\n    const { counter, increment } = useCouter1(1);\n    const { loading, data } = useFetch( ` https://www.breakingbadapi.com/api/quotes/${ counter } `);\n    const { author, quote } = !!data && data[0];\n\n    // nuevo:\n    // objetivo: cambiar el tama単o\n    // .current --> para tomar el valor actual\n    useLayoutEffect(() => {\n        const { height, width } = pRef.current.getBoundingClientRect();\n        setBoxSize({ height, width });\n    }, [quote])\n    // la dependencia se dispara cada vez que el quote cambia\n\n    return (\n        <div>\n            <blockquote className=\" blockquote text-right \"\n                        style={{ display: 'flex' }}\n            >\n                {/* referencia: pRef */}\n                <p ref={ pRef } className=\"mb-1\"> Hello there! { quote } </p>\n                <footer className=\"blockquote-footer m-5\"> - { author } </footer>\n            </blockquote>\n\n            <code>\n                { JSON.stringify(boxSize) }\n            </code>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}