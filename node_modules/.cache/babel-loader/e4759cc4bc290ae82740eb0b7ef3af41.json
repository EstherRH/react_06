{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRouteMatcher = getRouteMatcher;\n\nvar _utils = require(\"../../utils\");\n\nfunction getRouteMatcher(routeRegex) {\n  const {\n    re,\n    groups\n  } = routeRegex;\n  return pathname => {\n    const routeMatch = re.exec(pathname);\n\n    if (!routeMatch) {\n      return false;\n    }\n\n    const decode = param => {\n      try {\n        return decodeURIComponent(param);\n      } catch (_) {\n        throw new _utils.DecodeError('failed to decode param');\n      }\n    };\n\n    const params = {};\n    Object.keys(groups).forEach(slugName => {\n      const g = groups[slugName];\n      const m = routeMatch[g.pos];\n\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);\n      }\n    });\n    return params;\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/route-matcher.ts"],"names":["getRouteMatcher","routeRegex","re","groups","pathname","routeMatch","exec","decode","param","decodeURIComponent","_","DecodeError","params","Object","keys","forEach","slugName","g","m","pos","undefined","indexOf","split","map","entry","repeat"],"mappings":";;;;;QAGgBA,e,GAAAA,e;;AAHY,IAAA,MAAa,GAAA,OAAA,CAAA,aAAA,CAAb;;SAGZA,e,CAAgBC,U,EAA8C;AAC5E,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAiBF,UAAvB;AACA,SAAQG,QAAF,IAA0C;AAC9C,UAAMC,UAAU,GAAGH,EAAE,CAACI,IAAHJ,CAAQE,QAARF,CAAnB;;AACA,QAAE,CAAGG,UAAL,EAAiB;AACf,aAAO,KAAP;AACD;;AAED,UAAME,MAAM,GAAIC,KAAJ,IAAsB;AAChC,UAAI;AACF,eAAOC,kBAAkB,CAACD,KAAD,CAAzB;AACD,OAFD,CAEE,OAAOE,CAAP,EAAU;AACV,cAAM,IAAIC,MAAW,CAAA,WAAf,CAAgB,wBAAhB,CAAN;AACD;AACF,KAND;;AAOA,UAAMC,MAAM,GAA+C,EAA3D;AAEAC,IAAAA,MAAM,CAACC,IAAPD,CAAYV,MAAZU,EAAoBE,OAApBF,CAA6BG,QAAF,IAAuB;AAChD,YAAMC,CAAC,GAAGd,MAAM,CAACa,QAAD,CAAhB;AACA,YAAME,CAAC,GAAGb,UAAU,CAACY,CAAC,CAACE,GAAH,CAApB;;AACA,UAAID,CAAC,KAAKE,SAAV,EAAqB;AACnBR,QAAAA,MAAM,CAACI,QAAD,CAANJ,GAAe,CAAKM,CAAC,CAACG,OAAFH,CAAU,GAAVA,CAAL,GACXA,CAAC,CAACI,KAAFJ,CAAQ,GAARA,EAAaK,GAAbL,CAAkBM,KAAF,IAAYjB,MAAM,CAACiB,KAAD,CAAlCN,CADW,GAEXD,CAAC,CAACQ,MAAFR,GACA,CAACV,MAAM,CAACW,CAAD,CAAP,CADAD,GAEAV,MAAM,CAACW,CAAD,CAJVN;AAKD;AACF,KAVDC;AAWA,WAAOD,MAAP;AACD,GA3BD;AA4BD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getRouteMatcher = getRouteMatcher;\nvar _utils = require(\"../../utils\");\nfunction getRouteMatcher(routeRegex) {\n    const { re , groups  } = routeRegex;\n    return (pathname)=>{\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const decode = (param)=>{\n            try {\n                return decodeURIComponent(param);\n            } catch (_) {\n                throw new _utils.DecodeError('failed to decode param');\n            }\n        };\n        const params = {};\n        Object.keys(groups).forEach((slugName)=>{\n            const g = groups[slugName];\n            const m = routeMatch[g.pos];\n            if (m !== undefined) {\n                params[slugName] = ~m.indexOf('/') ? m.split('/').map((entry)=>decode(entry)\n                ) : g.repeat ? [\n                    decode(m)\n                ] : decode(m);\n            }\n        });\n        return params;\n    };\n}\n\n//# sourceMappingURL=route-matcher.js.map"]},"metadata":{},"sourceType":"script"}