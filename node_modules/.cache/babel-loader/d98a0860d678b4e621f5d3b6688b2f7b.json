{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/02_base/BbbComponentes.js\";\n// cómo imprimir variables en el html\n// qué sucede cuando colocamos variables o constantes en nuestras etiquetas html (en el jsx)\n// dentro del { ... } se puede poner expresión de JS que retorne un valor (pero no cualquier valor)\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BbbCom = () => {\n  const saludo = 'Hola mundo const'; // constante con el nombre de saludo\n\n  const num = 123;\n  const array = [1, 2, 3, 4, 5]; // concatenación de elementos\n  // objeto\n\n  const newMessage = {\n    nombre: 'Esther',\n    edad: 34\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", saludo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", num, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", array, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", newMessage.nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\" \", JSON.stringify(newMessage, null, 3), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = BbbCom;\nexport default BbbCom;\n\nvar _c;\n\n$RefreshReg$(_c, \"BbbCom\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/02_base/BbbComponentes.js"],"names":["React","BbbCom","saludo","num","array","newMessage","nombre","edad","JSON","stringify"],"mappings":";AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,MAAM,GAAG,kBAAf,CAFiB,CAEkB;;AACnC,QAAMC,GAAG,GAAG,GAAZ;AACA,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAd,CAJiB,CAIW;AAE5B;;AACA,QAAMC,UAAU,GAAG;AACfC,IAAAA,MAAM,EAAE,QADO;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAnB;AAKA,sBACI;AAAA,4BAMI;AAAA,sBAAML,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,sBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,sBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,sBAAMC,UAAU,CAACC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI;AAAA,sBAAQE,IAAI,CAACC,SAAL,CAAgBJ,UAAhB,EAA4B,IAA5B,EAAkC,CAAlC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AAkBH,CA9BD;;KAAMJ,M;AA+BN,eAAeA,MAAf","sourcesContent":["\n// cómo imprimir variables en el html\n// qué sucede cuando colocamos variables o constantes en nuestras etiquetas html (en el jsx)\n// dentro del { ... } se puede poner expresión de JS que retorne un valor (pero no cualquier valor)\n\nimport React from \"react\";\n\nconst BbbCom = () => {\n\n    const saludo = 'Hola mundo const'  // constante con el nombre de saludo\n    const num = 123\n    const array = [1,2,3,4,5]   // concatenación de elementos\n\n    // objeto\n    const newMessage = {\n        nombre: 'Esther',\n        edad: 34\n    }\n\n    return (\n        <>\n            {/*  imprime la variable en el html\n              Dentro de las llaves:\n                se coloca cualquier expresión de JS que retorne un valor\n                dentro se coloca una expresión permitida de JS que no sea un objeto\n              */}\n            <p> { saludo } </p>\n            <p> { num } </p>\n            <p> { array } </p>\n            <p> { newMessage.nombre } </p>\n\n            {/*JSON.stringify() --> convierte el objeto a string*/}\n            {/*etiqueta pre*/}\n            <pre> { JSON.stringify( newMessage, null, 3 ) } </pre>\n            <p className=\"\">Hello there</p>\n        </>\n    );\n};\nexport default BbbCom;\n"]},"metadata":{},"sourceType":"module"}