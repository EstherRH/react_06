{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/GifGrid.js\";\n// Fetch API\n// obtener las imágenes que queremos\n// Intro a useEffect\n// en este componente: cuando note que hay un nuevo elemento, hace la petición http\n// y traiga las imgs correspondientes a la categoría\n// abrir Postman:\n// get: api.giphy.com/v1/gifs/search\n// key: api_key\n// value: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// click en Send\n// aparece la info\n// búsqueda: aloy\n// límite: 10\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GifGrid = ({\n  category\n}) => {\n  const getGifs = async () => {\n    // necesitamos recibir la categoría y hacer una petición http\n    const url = 'https://api.giphy.com/v1/gifs/search?q=aloy&limit=10&api_key=QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE';\n    const respuesta = await fetch(url);\n    const {\n      data\n    } = await respuesta.json(); // .json porque lo recibimos en formato json\n    // de la data queremos retornar: id, title, url\n\n    const gifs = data.map(img => {\n      var _img$images;\n\n      return {\n        id: img.id,\n        title: img.title,\n        url: (_img$images = img.images) === null || _img$images === void 0 ? void 0 : _img$images.downsized_medium.url\n      };\n    });\n  }; // se llama a la función\n\n\n  getGifs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", category, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GifGrid;\nexport default GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/GifGrid.js"],"names":["React","GifGrid","category","getGifs","url","respuesta","fetch","data","json","gifs","map","img","id","title","images","downsized_medium"],"mappings":";AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE9B,QAAMC,OAAO,GAAG,YAAW;AACvB;AACA,UAAMC,GAAG,GAAG,+FAAZ;AACA,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAEF,GAAF,CAA7B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,SAAS,CAACG,IAAV,EAAvB,CAJuB,CAIkB;AAEzC;;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAAWC,GAAG,IAAK;AAAA;;AACxB,aAAO;AACHC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADL;AAEHC,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAFR;AAGHT,QAAAA,GAAG,iBAAEO,GAAG,CAACG,MAAN,gDAAE,YAAYC,gBAAZ,CAA6BX;AAH/B,OAAP;AAMH,KAPQ,CAAb;AASH,GAhBD,CAF8B,CAmB9B;;;AACAD,EAAAA,OAAO;AAEP,sBACI;AAAA,2BAEI;AAAA,sBAAOD,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5BD;;KAAMD,O;AA6BN,eAAeA,OAAf","sourcesContent":["\n// Fetch API\n// obtener las imágenes que queremos\n\n// Intro a useEffect\n\n// en este componente: cuando note que hay un nuevo elemento, hace la petición http\n// y traiga las imgs correspondientes a la categoría\n\n// abrir Postman:\n// get: api.giphy.com/v1/gifs/search\n// key: api_key\n// value: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// click en Send\n// aparece la info\n\n// búsqueda: aloy\n// límite: 10\n\nimport React from \"react\";\n\nconst GifGrid = ({ category }) => {\n\n    const getGifs = async() => {\n        // necesitamos recibir la categoría y hacer una petición http\n        const url = 'https://api.giphy.com/v1/gifs/search?q=aloy&limit=10&api_key=QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE';\n        const respuesta = await fetch( url );\n        const { data } = await respuesta.json(); // .json porque lo recibimos en formato json\n\n        // de la data queremos retornar: id, title, url\n        const gifs = data.map ( img  => {\n                return {\n                    id: img.id,\n                    title: img.title,\n                    url: img.images?.downsized_medium.url\n\n                }\n            }\n        )\n    }\n    // se llama a la función\n    getGifs();\n\n    return (\n        <div>\n            {/* se imprime la categoría */}\n            <h3> { category } </h3>\n        </div>\n    )\n}\nexport default GifGrid;\n\n\n"]},"metadata":{},"sourceType":"module"}