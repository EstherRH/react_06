{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_01_useFetch/MultipleCustomHooks.js\",\n    _s = $RefreshSig$();\n\n// useFetch - CustomHook\n// vamos a crear un custom hook que permita hacer peticiones a cualquier url\n// varios hooks personalizados van a interactuar entre sí\n//  a)   https://breakingbadapi.com/\n//  en la web:\n//  Get quote by id: Endpoint to get quote by id\n//  b)  /api/quotes/1\n//  poner en postman:\n//  petición get\n//  https://www.breakingbadapi.com/api/quotes/1\n// Resultado:\n// es un array y dentro un objeto:\n// [\n//     {\n//         \"quote_id\": 1,\n//         \"quote\": \"I am not in danger, Skyler. I am the danger!\",\n//         \"author\": \"Walter White\",\n//         \"series\": \"Breaking Bad\"\n//     }\n// ]\n// ir probando:\n// /api/quotes/2    /api/quotes/3   etc.\nimport React from \"react\";\nimport '../../components/04_00_hooks/style.css';\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultipleCustomHook = () => {\n  _s();\n\n  const state = useFetch(` https://www.breakingbadapi.com/api/quotes/1 `);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" useFetch - Custom Hook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MultipleCustomHook, \"Yxu3ObV1bsFA0kI7bkGj8DK42us=\", false, function () {\n  return [useFetch];\n});\n\n_c = MultipleCustomHook;\nexport default MultipleCustomHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleCustomHook\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_01_useFetch/MultipleCustomHooks.js"],"names":["React","useFetch","MultipleCustomHook","state"],"mappings":";;;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wCAAP;AACA,SAAQC,QAAR,QAAuB,sBAAvB;;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAMC,KAAK,GAAGF,QAAQ,CAAG,+CAAH,CAAtB;AAEA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CATD;;GAAMC,kB;UAEYD,Q;;;KAFZC,kB;AAUN,eAAeA,kBAAf","sourcesContent":["\n// useFetch - CustomHook\n\n// vamos a crear un custom hook que permita hacer peticiones a cualquier url\n// varios hooks personalizados van a interactuar entre sí\n\n//  a)   https://breakingbadapi.com/\n\n//  en la web:\n//  Get quote by id: Endpoint to get quote by id\n//  b)  /api/quotes/1\n\n//  poner en postman:\n//  petición get\n//  https://www.breakingbadapi.com/api/quotes/1\n\n\n// Resultado:\n// es un array y dentro un objeto:\n\n// [\n//     {\n//         \"quote_id\": 1,\n//         \"quote\": \"I am not in danger, Skyler. I am the danger!\",\n//         \"author\": \"Walter White\",\n//         \"series\": \"Breaking Bad\"\n//     }\n// ]\n\n\n// ir probando:\n// /api/quotes/2    /api/quotes/3   etc.\n\nimport React from \"react\";\nimport '../../components/04_00_hooks/style.css'\nimport {useFetch} from \"../../hooks/useFetch\";\n\nconst MultipleCustomHook = () => {\n\n    const state = useFetch( ` https://www.breakingbadapi.com/api/quotes/1 `);\n\n    return (\n        <>\n            <p> useFetch - Custom Hook </p>\n        </>\n    );\n};\nexport default MultipleCustomHook;\n\n"]},"metadata":{},"sourceType":"module"}