{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/AddCategory.js\",\n    _s = $RefreshSig$();\n\n// nuevo componente: AddCategory\n// input para agregar la categoría\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCategory = ({\n  setCategories\n}) => {\n  _s();\n\n  // estado inicial\n  const [inputValue, setInputValue] = useState('Hey there'); // función para onChange\n\n  const handelInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // prevenir comportamiento por defecto\n    // validación\n\n    if (inputValue.trim().length > 2) {\n      // se recibe como argumento: setCategories\n      // se llama a: setCategories\n      setCategories(cats => [...cats, inputValue]);\n      setInputValue('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Hey \", inputValue, \" ! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handelInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddCategory, \"rBKLrJ4+I9GzziTvfqudt8QLIJY=\");\n\n_c = AddCategory;\nexport default AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/AddCategory.js"],"names":["React","useState","AddCategory","setCategories","inputValue","setInputValue","handelInputChange","e","target","value","handleSubmit","preventDefault","trim","length","cats"],"mappings":";;;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAuB;AAAA;;AAEvC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,WAAD,CAA5C,CAHuC,CAKvC;;AACA,QAAMK,iBAAiB,GAAKC,CAAF,IAAS;AAC/BF,IAAAA,aAAa,CAAEE,CAAC,CAACC,MAAF,CAASC,KAAX,CAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAKH,CAAF,IAAS;AAC1BA,IAAAA,CAAC,CAACI,cAAF,GAD0B,CACN;AAEpB;;AACA,QAAKP,UAAU,CAACQ,IAAX,GAAkBC,MAAlB,GAA2B,CAAhC,EAAoC;AAEhC;AACA;AACAV,MAAAA,aAAa,CAAEW,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUV,UAAV,CAAV,CAAb;AACAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GAXD;;AAeA,sBACI;AAAA,4BACI;AAAA,0BAAUD,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,6BAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,KAAK,EAAGN,UADf;AAEO,QAAA,QAAQ,EAAGE;AAFlB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiBH,CA1CD;;GAAMJ,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["\n// nuevo componente: AddCategory\n// input para agregar la categoría\n\nimport React, {useState} from \"react\";\n\nconst AddCategory = ( {setCategories} ) => {\n\n    // estado inicial\n    const [inputValue, setInputValue] = useState('Hey there');\n\n    // función para onChange\n    const handelInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault(); // prevenir comportamiento por defecto\n\n        // validación\n        if ( inputValue.trim().length > 2 ) {\n\n            // se recibe como argumento: setCategories\n            // se llama a: setCategories\n            setCategories( cats => [...cats, inputValue] );\n            setInputValue('');\n        }\n    }\n\n\n\n    return (\n        <>\n            <p> Hey { inputValue } ! </p>\n            <form onSubmit={handleSubmit}>\n\n                {/*  atributos: type, value, onChange\n                  onChange: se dispara cada vez que la caja de texto cambia\n                  se llama la función:   handelInputChange\n                  */}\n                <input type=\"text\"\n                       value={ inputValue }\n                       onChange={ handelInputChange }\n                />\n            </form>\n        </>\n    );\n\n};\nexport default AddCategory;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}