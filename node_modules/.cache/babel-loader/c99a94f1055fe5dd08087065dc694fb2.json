{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/Pruebas.js\",\n    _s = $RefreshSig$();\n\n// eventos\n// https://es.reactjs.org/docs/events.html\n// onClick\n// ejemplo de un Contador\n// +1, -1, reset\n// counterApp continuación\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventoClick = ({\n  value = 10\n}) => {\n  _s();\n\n  // incorporamos el Hook: useState (0)\n  // valor iniciar de counter: se inicializa en 0\n  // al darle a Reset: pasa a 10\n  // setCounter es la función que vamos a usar para incrementar, resetear o disminuir\n  const [counter, setCounter] = useState(0); // eliminar 1\n\n  const handleSubtract = () => {\n    setCounter(counter - 1);\n  }; // resetear\n  // es igual al value, que en este caso es 10\n\n\n  const handleReset = () => {\n    setCounter(value);\n  }; // agregar 1\n  // así se modifica el valor de counter\n  // en este caso se incrementa\n\n\n  const handleAdd = () => {\n    setCounter(counter + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" CounterApp \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubtract,\n      children: \" -1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \" Reset \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \" +1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventoClick, \"rU49ahHXqILO256x8h9hfi2uqSs=\");\n\n_c = EventoClick;\nEventoClick.propTypes = {\n  value: PropTypes.number\n};\nexport default EventoClick;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventoClick\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/Pruebas.js"],"names":["React","useState","PropTypes","EventoClick","value","counter","setCounter","handleSubtract","handleReset","handleAdd","propTypes","number"],"mappings":";;;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAE;AAAT,CAAD,KAAmB;AAAA;;AAEnC;AACA;AACA;AACA;AACA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BL,QAAQ,CAAE,CAAF,CAAxC,CANmC,CAQnC;;AACA,QAAMM,cAAc,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAED,OAAO,GAAG,CAAZ,CAAV;AACH,GAFD,CATmC,CAanC;AACA;;;AACA,QAAMG,WAAW,GAAG,MAAM;AACtBF,IAAAA,UAAU,CAAEF,KAAF,CAAV;AACH,GAFD,CAfmC,CAmBnC;AACA;AACA;;;AACA,QAAMK,SAAS,GAAG,MAAM;AACpBH,IAAAA,UAAU,CAAED,OAAO,GAAG,CAAZ,CAAV;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMA,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAQ,MAAA,OAAO,EAAGE,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAQ,MAAA,OAAO,EAAGC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAQ,MAAA,OAAO,EAAGC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAeH,CAzCD;;GAAMN,W;;KAAAA,W;AA2CNA,WAAW,CAACO,SAAZ,GAAwB;AACpBN,EAAAA,KAAK,EAAEF,SAAS,CAACS;AADG,CAAxB;AAIA,eAAeR,WAAf","sourcesContent":["\n// eventos\n// https://es.reactjs.org/docs/events.html\n\n// onClick\n\n// ejemplo de un Contador\n// +1, -1, reset\n// counterApp continuación\n\n\nimport React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst EventoClick = ({ value= 10 }) => {\n\n    // incorporamos el Hook: useState (0)\n    // valor iniciar de counter: se inicializa en 0\n    // al darle a Reset: pasa a 10\n    // setCounter es la función que vamos a usar para incrementar, resetear o disminuir\n    const [ counter, setCounter ] = useState( 0 );\n\n    // eliminar 1\n    const handleSubtract = () => {\n        setCounter( counter - 1 );\n    }\n\n    // resetear\n    // es igual al value, que en este caso es 10\n    const handleReset = () => {\n        setCounter( value );\n    }\n\n    // agregar 1\n    // así se modifica el valor de counter\n    // en este caso se incrementa\n    const handleAdd = () => {\n        setCounter( counter + 1 );\n    }\n\n    return (\n        <>\n            <p> CounterApp </p>\n            <p> { counter } </p>\n\n            {/*  evento onClick --> qué pasa al hacer click  */}\n            {/*  onClick= {  aquí dentro va una función: se llama a esa función  } */}\n            {/*  onClick= {  esto es una expresión de javaScript  } */}\n            {/*  sumar, resetear, restar  */}\n            {/*  handleSubtract --> función que se dispara cuando alguien hace click   */}\n            <button onClick={ handleSubtract } > -1 </button>\n            <button onClick={ handleReset } > Reset </button>\n            <button onClick={ handleAdd } > +1 </button>\n        </>\n    )\n}\n\nEventoClick.propTypes = {\n    value: PropTypes.number\n}\n\nexport default EventoClick;\n\n\n"]},"metadata":{},"sourceType":"module"}