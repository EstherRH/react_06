{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/Header01.js\";\n// componente de Header\n// otra forma de hacerlo\n// Nombre del componente: Header01\n// se hace con const\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header01 = props => {\n  // Aquí puede ir código javaScript\n  // cómo mostrar ese total:\n  const total = 1 + 2;\n  const {\n    cantidad\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"La suma es \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" esta es la \", cantidad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header01;\nexport default Header01;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header01\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/Header01.js"],"names":["React","Header01","props","total","cantidad","titulo"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB;AACA;AACA,QAAMC,KAAK,GAAG,IAAI,CAAlB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaF,KAAnB;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gCAAgBF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,iCAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAjBD;;KAAMH,Q;AAmBN,eAAeA,QAAf","sourcesContent":["// componente de Header\n// otra forma de hacerlo\n// Nombre del componente: Header01\n// se hace con const\n\nimport React from 'react';\n\nconst Header01 = (props) => {\n\n    // Aquí puede ir código javaScript\n    // cómo mostrar ese total:\n    const total = 1 + 2;\n    const {cantidad} = props;\n\n    return (\n        <div>\n            <h1>{ props.titulo }</h1>\n\n            {/*Aquí se llama al total\n            de la función que hemos creado antes*/}\n            <p>La suma es { total }</p>\n            <p> esta es la {cantidad}</p>\n        </div>\n    );\n}\n\nexport default Header01;\n\n"]},"metadata":{},"sourceType":"module"}