{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js\";\n// PropTypes\n// son los TIPOS de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BbbPropsTypes = ({\n  hey = 'Hola Bbb',\n  subtitulo,\n  subtitulo1 = \"123\",\n  subtitulo2,\n  subtitulo3,\n  subtitulo4\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", hey, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo2, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo3, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo4, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\n\n\n_c = BbbPropsTypes;\nBbbPropsTypes.propTypes = {\n  hey: PropTypes.string.isRequired,\n  subtitulo1: PropTypes.number,\n  subtitulo2: PropTypes.array,\n  subtitulo3: PropTypes.string // etc\n\n}; // DefaultProps\n\nBbbPropsTypes.defaultProps = {\n  subtitulo: 'Soy un subtítulo',\n  // valores por defecto\n  subtitulo4: ''\n};\nexport default BbbPropsTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"BbbPropsTypes\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js"],"names":["React","PropTypes","BbbPropsTypes","hey","subtitulo","subtitulo1","subtitulo2","subtitulo3","subtitulo4","propTypes","string","isRequired","number","array","defaultProps"],"mappings":";AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,aAAa,GAAG,CAAE;AAAEC,EAAAA,GAAG,GAAG,UAAR;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,UAAU,GAAG,KAA5C;AAAmDC,EAAAA,UAAnD;AAA+DC,EAAAA,UAA/D;AAA2EC,EAAAA;AAA3E,CAAF,KAA+F;AAEjH,sBACI;AAAA,4BACI;AAAA,sBAAML,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,sBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CAbD,C,CAeA;AACA;AACA;;;KAjBMN,a;AAkBNA,aAAa,CAACO,SAAd,GAA0B;AACtBN,EAAAA,GAAG,EAAEF,SAAS,CAACS,MAAV,CAAiBC,UADA;AAEtBN,EAAAA,UAAU,EAAEJ,SAAS,CAACW,MAFA;AAGtBN,EAAAA,UAAU,EAAEL,SAAS,CAACY,KAHA;AAItBN,EAAAA,UAAU,EAAEN,SAAS,CAACS,MAJA,CAKtB;;AALsB,CAA1B,C,CAQA;;AACAR,aAAa,CAACY,YAAd,GAA6B;AACzBV,EAAAA,SAAS,EAAE,kBADc;AACO;AAChCI,EAAAA,UAAU,EAAE;AAFa,CAA7B;AAKA,eAAeN,aAAf","sourcesContent":["\n// PropTypes\n// son los TIPOS de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\n\nimport React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst BbbPropsTypes = ( { hey = 'Hola Bbb', subtitulo, subtitulo1 = \"123\", subtitulo2, subtitulo3, subtitulo4 } ) => {\n\n    return (\n        <>\n            <p> { hey } </p>\n            <p className=\"\">Hello there</p>\n            <p> { subtitulo } </p>\n            <p> { subtitulo1 } </p>\n            <p> { subtitulo2 } </p>\n            <p> { subtitulo3 } </p>\n            <p> { subtitulo4 } </p>\n        </>\n    );\n};\n\n// Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\nBbbPropsTypes.propTypes = {\n    hey: PropTypes.string.isRequired,\n    subtitulo1: PropTypes.number,\n    subtitulo2: PropTypes.array,\n    subtitulo3: PropTypes.string,\n    // etc\n}\n\n// DefaultProps\nBbbPropsTypes.defaultProps = {\n    subtitulo: 'Soy un subtítulo',  // valores por defecto\n    subtitulo4: ''\n}\n\nexport default BbbPropsTypes;\n"]},"metadata":{},"sourceType":"module"}