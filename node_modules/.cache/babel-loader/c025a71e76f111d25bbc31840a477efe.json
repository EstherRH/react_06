{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_00_hooks_useState/CounterApp.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useCouter } from '../../hooks/useCouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CounterApp = () => {\n  _s();\n\n  // se desestructura lo que regresa nuestro custom hook\n  const {\n    state,\n    increment,\n    decrement,\n    reset\n  } = useCouter(100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Counter with Hook: \", state, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => increment(2),\n      children: \" + 1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: reset,\n      children: \" Reset \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => decrement(2),\n      children: \" - 1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CounterApp, \"bJknVhmrUYMwmXdPbeEbg7zsa4s=\", false, function () {\n  return [useCouter];\n});\n\n_c = CounterApp;\nexport default CounterApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterApp\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_00_hooks_useState/CounterApp.js"],"names":["React","useCouter","CounterApp","state","increment","decrement","reset"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAAyCL,SAAS,CAAE,GAAF,CAAxD;AAEA,sBACI;AAAA,4BACI;AAAA,yCAAwBE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAG,MAAMC,SAAS,CAAC,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAGE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAG,MAAMD,SAAS,CAAC,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAYH,CAjBD;;GAAMH,U;UAG6CD,S;;;KAH7CC,U;AAkBN,eAAeA,UAAf","sourcesContent":["\n\nimport React from \"react\";\nimport { useCouter } from '../../hooks/useCouter';\n\nconst CounterApp = () => {\n\n    // se desestructura lo que regresa nuestro custom hook\n    const { state, increment, decrement, reset } = useCouter( 100 );\n\n    return (\n        <>\n            <p> Counter with Hook: {state} </p>\n            <hr/>\n\n            {/*  el incremento va a ser de 2 en 2  */}\n            <button className=\"btn\" onClick={ () => increment(2) }> + 1 </button>\n            <button className=\"btn\" onClick={ reset }> Reset </button>\n            <button className=\"btn\" onClick={ () => decrement(2) }> - 1 </button>\n\n        </>\n    );\n};\nexport default CounterApp;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}