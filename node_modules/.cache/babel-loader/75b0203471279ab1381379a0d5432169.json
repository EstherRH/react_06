{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/01_ejercicios/Test01.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./components_01/Header\";\nimport Header01 from \"./components_01/Header01\";\nimport Formulario from \"./components_01/Formulario\";\nimport Mensaje from \"./components_01/Mensaje\";\nimport Resultado from \"./components_01/Resultado\";\nimport Spinner from \"./components_01/Spinner\"; // import Props from \"./components_01/Props\";\n\nimport Header02 from \"./components_01/Header02\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test01 = () => {\n  _s();\n\n  // En React los valores fluyen del padre al hijo pero no al revés\n  // del component\n  // el state se puede pasar por varios componentes: fluye hacia formulario y otros componentes\n  // useState\n  // hay que importarlo arriba\n  // se define un state para la cantidad\n  // lo que sea interactivo tendrá state\n  // El state retorna --> dos valores\n  // así se leen valores en el formulario\n  // VARIABLE, FUNCIÓN Y VALOR INICIAL\n  // se define un state para la cantidad\n  // useState: retorna dos valores\n  // cantidad es: una VARIABLE que contiene el valor\n  // cantidad va a tener el valor que se le pasa al state --> un 5\n  // guardarCantidad es la función para guardar o modificar el state\n  // guardarCantidad es: una FUNCIÓN que va a ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n  // al useState se le puede dar un VALOR INICIAL. En este caso empieza en 5\n  // cuando se use el state, va a tener el valor que se le pasa al useState cuando se use la función\n  // Puede empezar en true o false, números, string vacío, etc.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  // se coloca cantidad y guardarCantidad en el padre, para que fluja hacia el hijo\n  const [cantidad, guardarCantidad] = useState(5); // const [plazo, guardarPlazo] = useState(0);\n  // Plazo: contiene el valor\n  // guardarPlazo: es la función que va a modificar la función\n  // pasamos ambas al Formulario\n  // leer los datos de un select\n  // el plazo arranca en vacío --> string vacío\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n  // Cantidad a pagar\n  // Resumen de cuánto se va a pagar\n  // se inicializa en 0\n  // más abajo en <Formulario/> se pasa el total\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const [total, guardarTotal] = useState(0); // Spinner\n  // se inicia en false (cuando se inicia la app no va a salir el spinner)\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const [cargando, guardarCargando] = useState(true); // Cargar un componente de forma condicional\n  // o Carga condicional de componentes\n  // si el total es 0 --> mensaje\n  // sino --> tabla con resultado\n\n  let componente;\n\n  if (cargando) {\n    componente = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }, this);\n  } else if (total === 0) {\n    componente = /*#__PURE__*/_jsxDEV(Mensaje, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this);\n  } else {\n    // Resultado final con los totales\n    componente = /*#__PURE__*/_jsxDEV(Resultado, {\n      total: total,\n      plazo: plazo,\n      cantidad: cantidad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Siempre hay que retornar un elemento que retorne los demás elementos\n    // el div engloba todo\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header01, {\n        titulo: \"Header 1\",\n        cantidad: cantidad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n        cantidad: cantidad,\n        guardarCantidad: guardarCantidad,\n        plazo: plazo,\n        guardarPlazo: guardarPlazo,\n        total: total,\n        guardarTotal: guardarTotal,\n        guardarCargando: guardarCargando\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), componente]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Test01, \"5A+gU6gI1mPOwAX6BMgKDuBIq40=\");\n\n_c = Test01;\nexport default Test01;\nconst mss = activo ? 'Activo' : 'Inactivo';\n\nvar _c;\n\n$RefreshReg$(_c, \"Test01\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/01_ejercicios/Test01.js"],"names":["React","useState","Header","Header01","Formulario","Mensaje","Resultado","Spinner","Header02","Test01","cantidad","guardarCantidad","plazo","guardarPlazo","total","guardarTotal","cargando","guardarCargando","componente","mss","activo"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,eAAX,IAA+BV,QAAQ,CAAC,CAAD,CAA7C,CA5BiB,CA8BjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACW,KAAD,EAAQC,YAAR,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAtCiB,CAsC2B;AAE5C;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACa,KAAD,EAAQC,YAAR,IAAwBd,QAAQ,CAAC,CAAD,CAAtC,CA7CiB,CA+CjB;AACA;AACA;;AACA,QAAM,CAACe,QAAD,EAAWC,eAAX,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C,CAlDiB,CAqDjB;AACA;AACA;AACA;;AACA,MAAIiB,UAAJ;;AAEA,MAAGF,QAAH,EAAa;AACTE,IAAAA,UAAU,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;AACH,GAFD,MAEO,IAAKJ,KAAK,KAAK,CAAf,EAAmB;AACtBI,IAAAA,UAAU,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAb;AACH,GAFM,MAEA;AACH;AACAA,IAAAA,UAAU,gBAAG,QAAC,SAAD;AACT,MAAA,KAAK,EAAIJ,KADA;AAET,MAAA,KAAK,EAAIF,KAFA;AAGT,MAAA,QAAQ,EAAIF;AAHH;AAAA;AAAA;AAAA;AAAA,YAAb;AAKH;;AAID;AAAA;AACI;AACA;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAgBI,QAAC,QAAD;AACI,QAAA,MAAM,EAAC,UADX;AAEI,QAAA,QAAQ,EAAEA;AAFd;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAyCI,QAAC,UAAD;AACI,QAAA,QAAQ,EAAEA,QADd;AAEI,QAAA,eAAe,EAAEC,eAFrB;AAGI,QAAA,KAAK,EAAEC,KAHX;AAII,QAAA,YAAY,EAAEC,YAJlB;AAKI,QAAA,KAAK,EAAIC,KALb;AAMI,QAAA,YAAY,EAAIC,YANpB;AAOI,QAAA,eAAe,EAAIE;AAPvB;AAAA;AAAA;AAAA;AAAA,cAzCJ,EAoDKC,UApDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAuEH,CAjJD;;GAAMT,M;;KAAAA,M;AAmJN,eAAeA,MAAf;AACA,MAAMU,GAAG,GAAGC,MAAM,GAAG,QAAH,GAAc,UAAhC","sourcesContent":["\nimport React, {useState} from \"react\";\nimport Header from \"./components_01/Header\";\nimport Header01 from \"./components_01/Header01\";\nimport Formulario from \"./components_01/Formulario\";\nimport Mensaje from \"./components_01/Mensaje\";\nimport Resultado from \"./components_01/Resultado\";\nimport Spinner from \"./components_01/Spinner\";\n// import Props from \"./components_01/Props\";\nimport Header02 from \"./components_01/Header02\";\n\n\nconst Test01 = () => {\n\n    // En React los valores fluyen del padre al hijo pero no al revés\n    // del component\n    // el state se puede pasar por varios componentes: fluye hacia formulario y otros componentes\n\n    // useState\n    // hay que importarlo arriba\n    // se define un state para la cantidad\n    // lo que sea interactivo tendrá state\n    // El state retorna --> dos valores\n    // así se leen valores en el formulario\n\n    // VARIABLE, FUNCIÓN Y VALOR INICIAL\n\n    // se define un state para la cantidad\n    // useState: retorna dos valores\n    // cantidad es: una VARIABLE que contiene el valor\n    // cantidad va a tener el valor que se le pasa al state --> un 5\n    // guardarCantidad es la función para guardar o modificar el state\n    // guardarCantidad es: una FUNCIÓN que va a ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n    // al useState se le puede dar un VALOR INICIAL. En este caso empieza en 5\n    // cuando se use el state, va a tener el valor que se le pasa al useState cuando se use la función\n    // Puede empezar en true o false, números, string vacío, etc.\n\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    // se coloca cantidad y guardarCantidad en el padre, para que fluja hacia el hijo\n    const [cantidad, guardarCantidad ] = useState(5);\n\n    // const [plazo, guardarPlazo] = useState(0);\n\n    // Plazo: contiene el valor\n    // guardarPlazo: es la función que va a modificar la función\n    // pasamos ambas al Formulario\n    // leer los datos de un select\n    // el plazo arranca en vacío --> string vacío\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n\n    // Cantidad a pagar\n    // Resumen de cuánto se va a pagar\n    // se inicializa en 0\n    // más abajo en <Formulario/> se pasa el total\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [total, guardarTotal] = useState(0);\n\n    // Spinner\n    // se inicia en false (cuando se inicia la app no va a salir el spinner)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [cargando, guardarCargando] = useState(true);\n\n\n    // Cargar un componente de forma condicional\n    // o Carga condicional de componentes\n    // si el total es 0 --> mensaje\n    // sino --> tabla con resultado\n    let componente;\n\n    if(cargando) {\n        componente = <Spinner/>\n    } else if ( total === 0 ) {\n        componente = <Mensaje />\n    } else {\n        // Resultado final con los totales\n        componente = <Resultado\n            total = {total}\n            plazo = {plazo}\n            cantidad = {cantidad}\n        />\n    }\n\n\n\n    return (\n        // Siempre hay que retornar un elemento que retorne los demás elementos\n        // el div engloba todo\n        <div className=\"App\">\n\n            {/*  <Props />  */}\n\n            {/*  El componente de Header se puede poner así:  */}\n            {/*<Header/>*/}\n\n            {/*  Es reutilizable: así podemos pegar el Header múltiples veces\n                también así para incluir los PROPS !!!!!\n                \"título\" es la propiedad, se le asigna un valor: \"Header 0\".   Se le está colocando un string, tmb puede ser una función\n                en Console: se pueden ver los props que se le pasan en Object: título y descripción\n                Aparece todo el árbol de componentes: se puede ir clicando en cada uno de ellos  */}\n            {/*<Header*/}\n            {/*    titulo=\"Header 0\"*/}\n            {/*    descripcion=\"Utiliza el formulario y obtén una cotización\"/>*/}\n\n            <Header01\n                titulo=\"Header 1\"\n                cantidad={cantidad}\n            />\n\n            {/*<Header02*/}\n            {/*    titulo=\"Header 2\"*/}\n            {/*/>*/}\n\n\n\n            {/* Ya tenemos el Header\n            En componentes: Ahora se crea un segundo componente: formulario\n            Desde aquí se pasa la variable cantidad y la función\n            Hay que pasar cantidad y guardarCantidad vía props\n\n            sintaxis:\n            props={variable}\n\n            se le pasa vía pros: cantidad, guardaCantidad, plazo, etc\n            en Formulario.js --> se reciben los props\n\n            props y variable:cantidad={cantidad}\n\n            */}\n            <Formulario\n                cantidad={cantidad}\n                guardarCantidad={guardarCantidad}\n                plazo={plazo}\n                guardarPlazo={guardarPlazo}\n                total = {total}\n                guardarTotal = {guardarTotal}\n                guardarCargando = {guardarCargando}\n            />\n\n            {/*  Resultado:  */}\n            {componente}\n\n            {/*\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <a className=\"App-link\" href=\"https://www.20minutos.es/\"\n                   target=\"_blank\" rel=\"noopener noreferrer\">\n                    periódico\n                </a>\n                <p>Hola mundo</p>\n            </div>\n            */}\n\n\n        </div>\n    );\n}\n\nexport default Test01;\nconst mss = activo ? 'Activo' : 'Inactivo';"]},"metadata":{},"sourceType":"module"}