{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifExpertApp.js\",\n    _s = $RefreshSig$();\n\n// https://giphy.com/channel/esther_herrero_\n// Consumo de una API\n// Primero se crea una API key\n// buscador de imágenes\n// Apy key: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// se crea el componente de Gif\nimport React, { useState } from \"react\";\nimport AddCategory from \"./AddCategory\";\nimport GifGrid from \"./GifGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GifApp = () => {\n  _s();\n\n  // crear una lista de categorías y mostralas\n  // valor inicial ( en useState ) --> es un array\n  // const [categories, setCategories] = useState( ['Wanda', 'Thor', 'Dr. Strange'] );\n  const [categories, setCategories] = useState(['Aloy']); // agregar nuevo elemento al array al darle al botón\n  // el estado cambio y se hace una nueva renderización\n  // const handleAdd = () => {\n  //     setCategories ( cats => [...cats, 'Thor'] );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gif App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCategory, {\n      setCategories: setCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: categories.map(category => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", category, \" \"]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(GifGrid, {\n        category: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifApp, \"FAgrYsKFG9+LGL5mHweV6VhCoqY=\");\n\n_c = GifApp;\nexport default GifApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifApp\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/05_gifAppBuscador/GifExpertApp.js"],"names":["React","useState","AddCategory","GifGrid","GifApp","categories","setCategories","map","category"],"mappings":";;;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAE,CAAC,MAAD,CAAF,CAA5C,CALiB,CAOjB;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,WAAD;AAAa,MAAA,aAAa,EAAGK;AAA7B;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI;AAAA,gBAMKD,UAAU,CAACE,GAAX,CAAgBC,QAAQ,IAAI;AACzB,4BAAO;AAAA,0BAAwBA,QAAxB;AAAA,WAAUA,QAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AANL;AAAA;AAAA;AAAA;AAAA,YAhBJ,eA8BI;AAAA,gBAEQH,UAAU,CAACE,GAAX,CAAgBC,QAAQ,iBACpB,QAAC,OAAD;AACS,QAAA,QAAQ,EAAEA;AADnB,SAAcA,QAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA,kBADJ;AA6CH,CA1DD;;GAAMJ,M;;KAAAA,M;AA4DN,eAAeA,MAAf","sourcesContent":["\n// https://giphy.com/channel/esther_herrero_\n\n// Consumo de una API\n\n// Primero se crea una API key\n\n// buscador de imágenes\n// Apy key: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n\n// se crea el componente de Gif\n\nimport React, {useState} from \"react\";\nimport AddCategory from \"./AddCategory\";\nimport GifGrid from \"./GifGrid\";\n\nconst GifApp = () => {\n\n    // crear una lista de categorías y mostralas\n    // valor inicial ( en useState ) --> es un array\n    // const [categories, setCategories] = useState( ['Wanda', 'Thor', 'Dr. Strange'] );\n    const [categories, setCategories] = useState( ['Aloy'] );\n\n    // agregar nuevo elemento al array al darle al botón\n    // el estado cambio y se hace una nueva renderización\n    // const handleAdd = () => {\n    //     setCategories ( cats => [...cats, 'Thor'] );\n    // }\n\n    return (\n        <>\n            <p>Gif App!</p>\n\n            {/*\n            - Comunicación entre Componentes\n            - componente con un input para escribir y agregar una nueva categoría:\n            - se le puede ir pasando propiedades al componente\n            - en este caso se le pasa una función: setCategories\n            - y se le pasa la referencia a setCategories\n            */}\n            <AddCategory setCategories={ setCategories }/>\n\n            {/*<button onClick={ handleAdd }> Agregar </button>*/}\n\n\n            {/* 1) lista ordenada*/}\n            <ol>\n                {/*\n                recorrer el array y regresar el que necesite\n                expresión que regresa algo  -->  método  -->  .map\n                return: devuelve tod el array en una lista ordenada\n                */}\n                {categories.map( category => {\n                    return <li key={ category }> { category } </li>\n                })}\n            </ol>\n\n            {/* 2) lista ordenada con Grid\n            se importa el componente de GifGrid\n            */}\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid key={category}\n                                 category={category}\n                        />\n                    ) )\n                }\n\n            </ol>\n\n        </>\n\n    )\n}\n\nexport default GifApp;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}