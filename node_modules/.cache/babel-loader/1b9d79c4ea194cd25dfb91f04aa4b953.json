{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js\";\n// PropTypes\n// son los tipos de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport PrimeraApp from \"./AaaComponentes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BbbPropsTypes = ({\n  saludo,\n  saludo1 = 'Hola Bbb',\n  subtitulo,\n  subtitulo2\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", saludo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", saludo1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo2, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\n\n\n_c = BbbPropsTypes;\nPrimeraApp.propTypes = {\n  saludo: PropTypes.string.isRequired //  saludo: PropTypes.number\n  // etc\n\n}; // DefaultProps\n\nPrimeraApp.defaultProps = {\n  subtitulo: 'Soy un subtítulo',\n  // valores por defecto\n  subtitulo2: ''\n};\nexport default BbbPropsTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"BbbPropsTypes\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js"],"names":["React","PropTypes","PrimeraApp","BbbPropsTypes","saludo","saludo1","subtitulo","subtitulo2","propTypes","string","isRequired","defaultProps"],"mappings":";AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAEA,MAAMC,aAAa,GAAG,CAAE;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAO,GAAI,UAArB;AAAiCC,EAAAA,SAAjC;AAA4CC,EAAAA;AAA5C,CAAF,KAAgE;AAElF,sBACI;AAAA,4BACI;AAAA,sBAAMH,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAXD,C,CAaA;AACA;AACA;;;KAfMJ,a;AAgBND,UAAU,CAACM,SAAX,GAAuB;AACnBJ,EAAAA,MAAM,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UADN,CAEnB;AACA;;AAHmB,CAAvB,C,CAMA;;AACAR,UAAU,CAACS,YAAX,GAA0B;AACtBL,EAAAA,SAAS,EAAE,kBADW;AACU;AAChCC,EAAAA,UAAU,EAAE;AAFU,CAA1B;AAKA,eAAeJ,aAAf","sourcesContent":["\n// PropTypes\n// son los tipos de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\n\nimport React from \"react\";\nimport PropTypes from 'prop-types'\nimport PrimeraApp from \"./AaaComponentes\";\n\nconst BbbPropsTypes = ( { saludo, saludo1  = 'Hola Bbb', subtitulo, subtitulo2 } ) => {\n\n    return (\n        <>\n            <p> { saludo } </p>\n            <p> { saludo1 } </p>\n            <p className=\"\">Hello there</p>\n            <p> { subtitulo } </p>\n            <p> { subtitulo2 } </p>\n        </>\n    );\n};\n\n// Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\nPrimeraApp.propTypes = {\n    saludo: PropTypes.string.isRequired\n    //  saludo: PropTypes.number\n    // etc\n}\n\n// DefaultProps\nPrimeraApp.defaultProps = {\n    subtitulo: 'Soy un subtítulo',  // valores por defecto\n    subtitulo2: ''\n}\n\nexport default BbbPropsTypes;\n"]},"metadata":{},"sourceType":"module"}