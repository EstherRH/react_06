{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Programation_Front/Base_React/retshe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport Header01 from \"./Components/Header01\";\nimport Formulario from \"./Components/Formulario\";\nimport Mensaje from \"./Components/Mensaje\";\nimport Resultado from \"./Components/Resultado\";\nimport Spinner from \"./Components/Spinner\";\nimport Props from \"./Components/Props\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // En React los valores fluyen del padre al hijo pero no al revés,\n  // se define un state para la cantidad\n  // El state retorna dos valores\n  // cantidad es: una variable que contiene el valor\n  // guardarCantidad es: una función que va ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n  // al useState se le puede dar un valor inicial. empieza en cero\n  const [cantidad, guardarCantidad] = useState(0); // const [plazo, guardarPlazo] = useState(0);\n\n  const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n  // Plazo contiene el valor\n  // guardarPlazo: es la función\n  // pasamos ambas al formulario\n\n  const [total, guardarTotal] = useState(0); // Spinner\n  // se inicia en false\n\n  const [cargando, guardarCargando] = useState(false);\n  let componente;\n\n  if (cargando) {\n    componente = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this);\n  } else if (total === 0) {\n    componente = /*#__PURE__*/_jsxDEV(Mensaje, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this);\n  } else {\n    componente = /*#__PURE__*/_jsxDEV(Resultado, {\n      total: total,\n      plazo: plazo,\n      cantidad: cantidad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this);\n  } // a)\n  // Componente Hello. Primera forma\n  // se utiliza el parámetro u objeto props, con la propiedad title\n  // se utlizan las llaves\n\n\n  const Hello = props => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }; // b)\n  // Componente Yass. Segunda forma\n  // Se utiliza el método Render: se devuelve el elemento que queremos renderizar\n\n\n  class Yasss extends Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    }\n\n  } // c)\n  // Componente Text. Con sintaxis de clases:\n\n\n  class Text extends Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }, this);\n    }\n\n  } // d)\n  // Componente Número. Con sintaxis de clases:\n  // el elemento render solo puede devolver un elemento\n  // Componente Booleano tmb:\n\n\n  class Number extends Component {\n    render() {\n      const textoSegunBool = this.props.boolean ? 'Cierto' : 'Falso';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: textoSegunBool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n\n  } //Boolean\n\n\n  class Boolean extends Component {\n    render() {\n      const textoBooleans = this.props.isActivated ? 'On!' : 'Off';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: textoBooleans\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    }\n\n  } // // Números\n  // class Numbers extends Component {\n  //     render () {\n  //\n  //         // se le pasa una función para multiplicar cada elemento por 2\n  //         const mappedNumber = this.props.arrayOfNumber.map(n => n * 2)\n  //         // otra forma de multiplicar: multiply1\n  //         const mappedNumber1 = this.props.arrayOfNumber.map(this.props.multiply1)\n  //\n  //         return (\n  //             <div>\n  //                 {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n  //                 <p>{this.props.arrayOfNumber.join(', ')}</p>\n  //                 <p>{mappedNumber.join(', ')}</p>\n  //                 <p>{mappedNumber1.join(', ')}</p>\n  //                 <p>{this.props.objectWithInfo.key}</p>\n  //             </div>\n  //\n  //         )\n  //     }\n  // }\n  //Números (como la anterior pero más simplificada) Destructuración:\n\n\n  class Numbers extends Component {\n    render() {\n      // Destructuración del objeto. todo ordenado en una constante:\n      // Así se accede a todas las props que necesitamos en nuestro componente\n      const {\n        arrayOfNumber,\n        multiply1,\n        objectWithInfo,\n        title\n      } = this.props; // en las dos siguientes funciones se elimina: \"this.props\"\n      // se le pasa una función para multiplicar cada elemento por 2\n\n      const mappedNumber = arrayOfNumber.map(n => n * 2); // otra forma de multiplicar: multiply1\n\n      const mappedNumber1 = arrayOfNumber.map(multiply1);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.arrayOfNumber.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mappedNumber.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mappedNumber1.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: objectWithInfo.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Props, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      titulo: \"Header 1\",\n      descripcion: \"Utiliza el formulario y obten una cotizaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header01, {\n      titulo: \"Header 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      cantidad: cantidad,\n      guardarCantidad: guardarCantidad,\n      plazo: plazo,\n      guardarPlazo: guardarPlazo,\n      total: total,\n      guardarTotal: guardarTotal,\n      guardarCargando: guardarCargando\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), componente, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://www.20minutos.es/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"peri\\xF3dico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hola mundo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"LXKE2bW3zNFIJeRyKXQglirthIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/ALOY/Programation_Front/Base_React/retshe/src/App.js"],"names":["React","useState","Component","Header","Header01","Formulario","Mensaje","Resultado","Spinner","Props","App","cantidad","guardarCantidad","plazo","guardarPlazo","total","guardarTotal","cargando","guardarCargando","componente","Hello","props","title","Yasss","render","Text","text","Number","textoSegunBool","boolean","number","Boolean","textoBooleans","isActivated","Numbers","arrayOfNumber","multiply1","objectWithInfo","mappedNumber","map","n","mappedNumber1","join","key","logo"],"mappings":"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","sourcesContent":["import React, {useState, Component} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport Header01 from \"./Components/Header01\";\nimport Formulario from \"./Components/Formulario\";\nimport Mensaje from \"./Components/Mensaje\";\nimport Resultado from \"./Components/Resultado\";\nimport Spinner from \"./Components/Spinner\";\nimport Props from \"./Components/Props\";\n\n\n\n\nfunction App() {\n\n    // En React los valores fluyen del padre al hijo pero no al revés,\n    // se define un state para la cantidad\n    // El state retorna dos valores\n    // cantidad es: una variable que contiene el valor\n    // guardarCantidad es: una función que va ser utilizada para estar interactuando y guardando lo que es el state que estamos creando\n    // al useState se le puede dar un valor inicial. empieza en cero\n\n    const [cantidad, guardarCantidad ] = useState(0);\n    // const [plazo, guardarPlazo] = useState(0);\n    const [plazo, guardarPlazo] = useState(''); // se le indica que es un string vacío\n    // Plazo contiene el valor\n    // guardarPlazo: es la función\n    // pasamos ambas al formulario\n    const [total, guardarTotal] = useState(0);\n\n    // Spinner\n    // se inicia en false\n    const [cargando, guardarCargando] = useState(false);\n\n\n    let componente;\n\n    if(cargando) {\n        componente = <Spinner/>\n    } else if ( total === 0 ) {\n        componente = <Mensaje />\n    } else {\n        componente = <Resultado\n            total = {total}\n            plazo = {plazo}\n            cantidad = {cantidad}\n        />\n    }\n\n\n    // a)\n    // Componente Hello. Primera forma\n    // se utiliza el parámetro u objeto props, con la propiedad title\n    // se utlizan las llaves\n    const Hello = (props) => {\n        return <p>{props.title}</p>\n    }\n\n    // b)\n    // Componente Yass. Segunda forma\n    // Se utiliza el método Render: se devuelve el elemento que queremos renderizar\n    class Yasss extends Component{\n        render () {\n            return <h2>{this.props.title}</h2>\n        }\n    }\n\n    // c)\n    // Componente Text. Con sintaxis de clases:\n    class Text extends Component {\n        render () {\n            return <p>{this.props.text}</p>\n        }\n\n    }\n\n    // d)\n    // Componente Número. Con sintaxis de clases:\n    // el elemento render solo puede devolver un elemento\n    // Componente Booleano tmb:\n    class Number extends Component {\n        render () {\n            const textoSegunBool = this.props.boolean ? 'Cierto' : 'Falso'\n            return(\n                <div>\n                    <p>{this.props.text}</p>\n                    <p>{this.props.number}</p>\n                    <p>{textoSegunBool}</p>\n                </div>\n            )\n        }\n\n    }\n\n\n\n\n    //Boolean\n    class Boolean extends Component {\n        render () {\n            const textoBooleans = this.props.isActivated ? 'On!' : 'Off'\n\n            return (\n                <div>\n                    <p>{textoBooleans}</p>\n                </div>\n            )\n        }\n    }\n\n    // // Números\n    // class Numbers extends Component {\n    //     render () {\n    //\n    //         // se le pasa una función para multiplicar cada elemento por 2\n    //         const mappedNumber = this.props.arrayOfNumber.map(n => n * 2)\n    //         // otra forma de multiplicar: multiply1\n    //         const mappedNumber1 = this.props.arrayOfNumber.map(this.props.multiply1)\n    //\n    //         return (\n    //             <div>\n    //                 {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n    //                 <p>{this.props.arrayOfNumber.join(', ')}</p>\n    //                 <p>{mappedNumber.join(', ')}</p>\n    //                 <p>{mappedNumber1.join(', ')}</p>\n    //                 <p>{this.props.objectWithInfo.key}</p>\n    //             </div>\n    //\n    //         )\n    //     }\n    // }\n\n    //Números (como la anterior pero más simplificada) Destructuración:\n    class Numbers extends Component {\n        render () {\n            // Destructuración del objeto. todo ordenado en una constante:\n            // Así se accede a todas las props que necesitamos en nuestro componente\n            const {\n                arrayOfNumber,\n                multiply1,\n                objectWithInfo,\n                title\n            } = this.props\n\n            // en las dos siguientes funciones se elimina: \"this.props\"\n            // se le pasa una función para multiplicar cada elemento por 2\n            const mappedNumber = arrayOfNumber.map(n => n * 2)\n            // otra forma de multiplicar: multiply1\n            const mappedNumber1 = arrayOfNumber.map(multiply1)\n\n            return (\n                <div>\n                    {/*Se hace un join en el array de números, y le decimos que lo divida con una coma y un espacio*/}\n                    <p>{this.props.arrayOfNumber.join(', ')}</p>\n                    <p>{mappedNumber.join(', ')}</p>\n                    <p>{mappedNumber1.join(', ')}</p>\n                    <p>{objectWithInfo.key}</p>\n\n                    {/* tmb se pueden usar los propios Elementos de React como props */}\n                    {title}\n                </div>\n\n            )\n        }\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <Props />\n\n\n\n            {/* El componente de Header se puede poner así:*/}\n            <Header/>\n            {/*  también así para incluir los props  */}\n            {/*  \"título\" es la propiedad, se le asigna un valor: \"Prueba uno\" */}\n            <Header\n                titulo=\"Header 1\"\n                descripcion=\"Utiliza el formulario y obten una cotización\"/>\n            <Header01\n                titulo=\"Header 2\"/>\n\n\n\n            <Formulario\n                cantidad={cantidad}\n                guardarCantidad={guardarCantidad}\n                plazo={plazo}\n                guardarPlazo={guardarPlazo}\n                total = {total}\n                guardarTotal = {guardarTotal}\n                guardarCargando = {guardarCargando}\n            />\n\n\n            {componente}\n\n\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <a className=\"App-link\" href=\"https://www.20minutos.es/\"\n                   target=\"_blank\" rel=\"noopener noreferrer\">\n                    periódico\n                </a>\n                <p>Hola mundo</p>\n            </div>\n\n\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}