{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // valor inicial el que nos indiquen, si no será 10\n// valor por defecto: initialState = 10\n// se hace el export\n\nexport const useCouter2 = (initialState = 10) => {\n  _s();\n\n  const [state, setState] = useState(initialState); // se pasa un argumento: factor\n  // por defecto se incrementa en 1\n  // valor por defecto: 1\n\n  const increment = (factor = 1) => {\n    setState(state + factor);\n  };\n\n  const reset = () => {\n    setState(initialState);\n  };\n\n  const decrement = (factor = 1) => {\n    setState(state - factor);\n  };\n\n  return {\n    state,\n    increment,\n    decrement,\n    reset\n  };\n};\n\n_s(useCouter2, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/hooks/useCouter2.js"],"names":["useState","useCouter2","initialState","state","setState","increment","factor","reset","decrement"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAwB;AAAA;;AAE9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC,CAF8C,CAI9C;AACA;AACA;;AACA,QAAMG,SAAS,GAAG,CAACC,MAAM,GAAG,CAAV,KAAgB;AAC9BF,IAAAA,QAAQ,CAACD,KAAK,GAAGG,MAAT,CAAR;AACH,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAChBH,IAAAA,QAAQ,CAACF,YAAD,CAAR;AACH,GAFD;;AAIA,QAAMM,SAAS,GAAG,CAACF,MAAM,GAAG,CAAV,KAAgB;AAC9BF,IAAAA,QAAQ,CAACD,KAAK,GAAGG,MAAT,CAAR;AACH,GAFD;;AAIA,SAAO;AAACH,IAAAA,KAAD;AAAQE,IAAAA,SAAR;AAAmBG,IAAAA,SAAnB;AAA8BD,IAAAA;AAA9B,GAAP;AACH,CApBM;;GAAMN,U","sourcesContent":["\nimport { useState } from \"react\";\n\n// valor inicial el que nos indiquen, si no será 10\n// valor por defecto: initialState = 10\n// se hace el export\nexport const useCouter2 = (initialState = 10 ) => {\n\n    const [state, setState] = useState(initialState);\n\n    // se pasa un argumento: factor\n    // por defecto se incrementa en 1\n    // valor por defecto: 1\n    const increment = (factor = 1) => {\n        setState(state + factor)\n    }\n\n    const reset = () => {\n        setState(initialState)\n    }\n\n    const decrement = (factor = 1) => {\n        setState(state - factor)\n    }\n\n    return {state, increment, decrement, reset}\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}