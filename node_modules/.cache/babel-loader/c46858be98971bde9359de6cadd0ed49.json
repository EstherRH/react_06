{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\n\nvar _utils = require(\"../../utils\");\n\nvar _querystring = require(\"./querystring\");\n\nfunction parseRelativeUrl(url, base) {\n  const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n  const resolvedBase = base ? new URL(base, globalBase) : globalBase;\n  const {\n    pathname,\n    searchParams,\n    search,\n    hash,\n    href,\n    origin\n  } = new URL(url, resolvedBase);\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`);\n  }\n\n  return {\n    pathname,\n    query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n    search,\n    hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-relative-url.ts"],"names":["parseRelativeUrl","url","base","globalBase","URL","window","getLocationOrigin","resolvedBase","pathname","searchParams","search","hash","href","origin","Error","query","searchParamsToUrlQuery","slice","length"],"mappings":";;;;;QASgBA,gB,GAAAA,gB;;AATkB,IAAA,MAAa,GAAA,OAAA,CAAA,aAAA,CAAb;;AACK,IAAA,YAAe,GAAA,OAAA,CAAA,eAAA,CAAf;;SAQvBA,gB,CAAiBC,G,EAAaC,I,EAAe;AAC3D,QAAMC,UAAU,GAAG,IAAIC,GAAJ,CACjB,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,UAAhC,GAA0C,CAAA,GAAGC,MAAH,EAAoB,iBAApB,EADzB,CAAnB;AAGA,QAAMC,YAAY,GAAGL,IAAI,GAAG,IAAIE,GAAJ,CAAQF,IAAR,EAAcC,UAAd,CAAH,GAA+BA,UAAxD;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA,IAAxC;AAA8CC,IAAAA;AAA9C,MAAyD,IAAIT,GAAJ,CAC7DH,GAD6D,EAE7DM,YAF6D,CAA/D;;AAIA,MAAIM,MAAM,KAAKV,UAAU,CAACU,MAA1B,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CAAW,oDAAmDb,GAAG,EAAjE,CAAN;AACD;;AACD,SAAO;AACLO,IAAAA,QADK;AAELO,IAAAA,KAAK,EAAA,CAAA,GAAEC,YAAF,EAAwB,sBAAxB,CAAyBP,YAAzB,CAFA;AAGLC,IAAAA,MAHK;AAILC,IAAAA,IAJK;AAKLC,IAAAA,IAAI,EAAEA,IAAI,CAACK,KAALL,CAAWT,UAAU,CAACU,MAAXV,CAAkBe,MAA7BN;AALD,GAAP;AAOD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\nvar _utils = require(\"../../utils\");\nvar _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n    const resolvedBase = base ? new URL(base, globalBase) : globalBase;\n    const { pathname , searchParams , search , hash , href , origin  } = new URL(url, resolvedBase);\n    if (origin !== globalBase.origin) {\n        throw new Error(`invariant: invalid relative URL, router received ${url}`);\n    }\n    return {\n        pathname,\n        query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n        search,\n        hash,\n        href: href.slice(globalBase.origin.length)\n    };\n}\n\n//# sourceMappingURL=parse-relative-url.js.map"]},"metadata":{},"sourceType":"script"}