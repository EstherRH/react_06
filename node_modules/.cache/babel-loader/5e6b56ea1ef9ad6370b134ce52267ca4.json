{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/autocomplete/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './Autoc.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Autosuggest from 'react-autosuggest';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  pais: \"Brasil\",\n  presidente: \"Jair Messias Bolsonaro\"\n}, {\n  pais: \"México\",\n  presidente: \"Andrés Manuel López Obrador\"\n}, {\n  pais: \"Argentina\",\n  presidente: \"Alberto Ángel Fernández\"\n}, {\n  pais: \"Colombia\",\n  presidente: \"Iván Duque Márquez\"\n}, {\n  pais: \"Chile\",\n  presidente: \"Gabriel Boric Font\"\n}, {\n  pais: \"Perú\",\n  presidente: \"José Pedro Castillo Terrones\"\n}, {\n  pais: \"Ecuador\",\n  presidente: \"Guillermo Alberto Santiago Lasso Mendoza\"\n}, {\n  pais: \"República Dominicana\",\n  presidente: \"Luis Rodolfo Abinader Corona\"\n}, {\n  pais: \"Guatemala\",\n  presidente: \"Alejandro Eduardo Giammattei Falla\"\n}, {\n  pais: \"Costa Rica\",\n  presidente: \"Carlos Andrés Alvarado Quesada\"\n}];\n\nfunction Autocomplete() {\n  _s();\n\n  const [presidentes, setPresidentes] = useState(data);\n  const [value, setValue] = useState(\"\");\n  const [presidenteSeleccionado, setPresidenteSeleccionado] = useState({});\n\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPresidentes(filtrarPresidentes(value));\n  };\n\n  const filtrarPresidentes = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    var filtrado = data.filter(presidente => {\n      var textoCompleto = presidente.presidente + \" - \" + presidente.pais;\n\n      if (textoCompleto.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").includes(inputValue)) {\n        return presidente;\n      }\n    });\n    return inputLength === 0 ? [] : filtrado;\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setPresidentes([]);\n  };\n\n  const getSuggestionValue = suggestion => {\n    return `${suggestion.presidente} - ${suggestion.pais}`;\n  };\n\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sugerencia\",\n    onClick: () => seleccionarPresidente(suggestion),\n    children: `${suggestion.presidente} - ${suggestion.pais}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n\n  const seleccionarPresidente = presidente => {\n    setPresidenteSeleccionado(presidente);\n  };\n\n  const onChange = (e, {\n    newValue\n  }) => {\n    setValue(newValue);\n  };\n\n  const inputProps = {\n    placeholder: \"País o Nombre del Presidente\",\n    value,\n    onChange\n  };\n\n  const eventEnter = e => {\n    if (e.key == \"Enter\") {\n      var split = e.target.value.split('-');\n      var presidente = {\n        presidente: split[0].trim(),\n        pais: split[1].trim()\n      };\n      seleccionarPresidente(presidente);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: presidentes,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      onSuggestionSelected: eventEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => console.log(presidenteSeleccionado),\n      children: \"Checar Estado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Autocomplete, \"B4pWHdjnCEXEX5bv76JTV/1zbKs=\");\n\n_c = Autocomplete;\nexport default Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/autocomplete/Autocomplete.js"],"names":["Autosuggest","useState","data","pais","presidente","Autocomplete","presidentes","setPresidentes","value","setValue","presidenteSeleccionado","setPresidenteSeleccionado","onSuggestionsFetchRequested","filtrarPresidentes","inputValue","trim","toLowerCase","inputLength","length","filtrado","filter","textoCompleto","normalize","replace","includes","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","seleccionarPresidente","onChange","e","newValue","inputProps","placeholder","eventEnter","key","split","target","console","log"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './Autoc.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Autosuggest from 'react-autosuggest';\nimport { useState } from 'react';\n\nconst data = [\n  { pais: \"Brasil\", presidente: \"Jair Messias Bolsonaro\" },\n  { pais: \"México\", presidente: \"Andrés Manuel López Obrador\" },\n  { pais: \"Argentina\", presidente: \"Alberto Ángel Fernández\" },\n  { pais: \"Colombia\", presidente: \"Iván Duque Márquez\" },\n  { pais: \"Chile\", presidente: \"Gabriel Boric Font\" },\n  { pais: \"Perú\", presidente: \"José Pedro Castillo Terrones\" },\n  { pais: \"Ecuador\", presidente: \"Guillermo Alberto Santiago Lasso Mendoza\" },\n  { pais: \"República Dominicana\", presidente: \"Luis Rodolfo Abinader Corona\" },\n  { pais: \"Guatemala\", presidente: \"Alejandro Eduardo Giammattei Falla\" },\n  { pais: \"Costa Rica\", presidente: \"Carlos Andrés Alvarado Quesada\" },\n];\n\nfunction Autocomplete() {\nconst[presidentes, setPresidentes]= useState(data);\nconst[value, setValue]= useState(\"\");\nconst[presidenteSeleccionado, setPresidenteSeleccionado]= useState({});\n\nconst onSuggestionsFetchRequested=({value})=>{\n  setPresidentes(filtrarPresidentes(value));\n}\n\nconst filtrarPresidentes=(value)=>{\n  const inputValue=value.trim().toLowerCase();\nconst inputLength=inputValue.length;\n\n  var filtrado=data.filter((presidente)=>{\n    var textoCompleto=presidente.presidente + \" - \" +presidente.pais;\n\n    if(textoCompleto.toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .includes(inputValue)){\n      return presidente;\n    }\n  });\n\n  return inputLength===0 ? [] : filtrado;\n}\n\nconst onSuggestionsClearRequested = () =>{\n  setPresidentes([]);\n}\n\nconst getSuggestionValue=(suggestion)=>{\n  return `${suggestion.presidente} - ${suggestion.pais}`;\n}\n\nconst renderSuggestion=(suggestion)=>(\n  <div className='sugerencia' onClick={()=>seleccionarPresidente(suggestion)}>\n    {`${suggestion.presidente} - ${suggestion.pais}`}\n  </div>\n);\n\nconst seleccionarPresidente=(presidente)=>{\n  setPresidenteSeleccionado(presidente);\n}\n\nconst onChange=(e, {newValue})=>{\n  setValue(newValue);\n}\n\nconst inputProps={\nplaceholder:\"País o Nombre del Presidente\",\nvalue,\nonChange\n};\n\nconst eventEnter=(e)=>{\nif(e.key == \"Enter\"){\n  var split = e.target.value.split('-');\n  var presidente ={\n    presidente: split[0].trim(),\n    pais: split[1].trim(),\n  };\n  seleccionarPresidente(presidente);\n}\n}\n\n  return (\n    <div className=\"App\">\n     <Autosuggest\n      suggestions={presidentes}\n      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n      onSuggestionsClearRequested={onSuggestionsClearRequested}\n      getSuggestionValue={getSuggestionValue}\n      renderSuggestion={renderSuggestion}\n      inputProps={inputProps}\n      onSuggestionSelected={eventEnter}\n     />\n     <br />\n     <button className='btn btn-primary' onClick={()=>console.log(presidenteSeleccionado)}>Checar Estado</button>\n    </div>\n  );\n}\n\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}