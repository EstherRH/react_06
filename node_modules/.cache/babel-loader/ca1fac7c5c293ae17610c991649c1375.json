{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/04_01_useFetch/MultipleCustomHooks.js\",\n    _s = $RefreshSig$();\n\n// useFetch - CustomHook\n// vamos a crear un custom hook que permita hacer peticiones a cualquier url\n// varios hooks personalizados van a interactuar entre sí\n//  a)   https://breakingbadapi.com/\n//  en la web:\n//  Get quote by id: Endpoint to get quote by id\n//  b)  /api/quotes/1\n//  poner en postman:\n//  petición get\n//  https://www.breakingbadapi.com/api/quotes/1\n// (esta url tmb se utiliza en este componente)\n// Resultado:\n// es un array y dentro un objeto:\n// [\n//     {\n//         \"quote_id\": 1,\n//         \"quote\": \"I am not in danger, Skyler. I am the danger!\",\n//         \"author\": \"Walter White\",\n//         \"series\": \"Breaking Bad\"\n//     }\n// ]\n// ir probando:\n// /api/quotes/2    /api/quotes/3   etc.\nimport React from \"react\";\nimport '../../components/04_00_hooks/style.css';\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { useCouter } from \"../../hooks/useCouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleCustomHook = () => {\n  _s();\n\n  // useFetch + useCouter\n  // en el state ( en el componente de useFetch )\n  const {\n    counter,\n    increment\n  } = useCouter(1); // es la url que se utilizó en postman\n  // el useFetch regresa un state\n  // loading: aparece mientras carga y después se muestra la data\n\n  const {\n    loading,\n    data\n  } = useFetch(` https://www.breakingbadapi.com/api/quotes/1 `); // dentro de data está author y quote\n\n  const {\n    author,\n    quote\n  } = !!data && data[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" useFetch - Custom Hook \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \" Hello there! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"blockquote.gooter\",\n        children: \" Herrero \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MultipleCustomHook, \"eGfIcrfBdF8a5a7OFwBG84oPCCA=\", false, function () {\n  return [useCouter, useFetch];\n});\n\n_c = MultipleCustomHook;\nexport default MultipleCustomHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleCustomHook\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/04_01_useFetch/MultipleCustomHooks.js"],"names":["React","useFetch","useCouter","MultipleCustomHook","counter","increment","loading","data","author","quote"],"mappings":";;;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wCAAP;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE7B;AACA;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBH,SAAS,CAAC,CAAD,CAAxC,CAL6B,CAO7B;AACA;AACA;;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBN,QAAQ,CAAG,+CAAH,CAAlC,CAV6B,CAY7B;;AACA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoB,CAAC,CAACF,IAAF,IAAUA,IAAI,CAAC,CAAD,CAAxC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMQD,OAAO,gBAEC;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,gBAMC;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CArCD;;GAAMH,kB;UAK6BD,S,EAKLD,Q;;;KAVxBE,kB;AAsCN,eAAeA,kBAAf","sourcesContent":["\n// useFetch - CustomHook\n\n// vamos a crear un custom hook que permita hacer peticiones a cualquier url\n// varios hooks personalizados van a interactuar entre sí\n\n//  a)   https://breakingbadapi.com/\n\n//  en la web:\n//  Get quote by id: Endpoint to get quote by id\n//  b)  /api/quotes/1\n\n//  poner en postman:\n//  petición get\n//  https://www.breakingbadapi.com/api/quotes/1\n\n// (esta url tmb se utiliza en este componente)\n\n// Resultado:\n// es un array y dentro un objeto:\n\n// [\n//     {\n//         \"quote_id\": 1,\n//         \"quote\": \"I am not in danger, Skyler. I am the danger!\",\n//         \"author\": \"Walter White\",\n//         \"series\": \"Breaking Bad\"\n//     }\n// ]\n\n\n// ir probando:\n// /api/quotes/2    /api/quotes/3   etc.\n\nimport React from \"react\";\nimport '../../components/04_00_hooks/style.css'\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {useCouter} from \"../../hooks/useCouter\";\n\nconst MultipleCustomHook = () => {\n\n    // useFetch + useCouter\n    // en el state ( en el componente de useFetch )\n\n    const { counter, increment } = useCouter(1);\n\n    // es la url que se utilizó en postman\n    // el useFetch regresa un state\n    // loading: aparece mientras carga y después se muestra la data\n    const { loading, data } = useFetch( ` https://www.breakingbadapi.com/api/quotes/1 `);\n\n    // dentro de data está author y quote\n    const { author, quote } = !!data && data[0];\n\n    return (\n        <div>\n            <p> useFetch - Custom Hook </p>\n            <hr/>\n\n            {/*  ternario del loading  */}\n            {\n                loading ?\n                    (\n                        <div className=\"alert alert-info text-center\">\n                            Loading...\n                        </div>\n                    ) : (\n                        <blockquote>\n                            <p className=\"mb-0\"> Hello there! </p>\n                            <footer className=\"blockquote.gooter\"> Herrero </footer>\n                        </blockquote>\n                    )\n            }\n\n        </div>\n    );\n};\nexport default MultipleCustomHook;\n\n"]},"metadata":{},"sourceType":"module"}