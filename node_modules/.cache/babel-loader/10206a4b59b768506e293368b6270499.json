{"ast":null,"code":"var _jsxFileName = \"/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js\";\n// PropTypes\n// son los TIPOS de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BbbPropsTypes = ({\n  saludo = 'Hola Bbb',\n  subtitulo,\n  subtitulo2\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", saludo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: \"Hello there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo2, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", subtitulo3, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\n\n\n_c = BbbPropsTypes;\nBbbPropsTypes.propTypes = {\n  saludo: PropTypes.string.isRequired,\n  subtitulo: PropTypes.number,\n  subtitulo2: PropTypes.array,\n  subtitulo3: PropTypes.string //  saludo: PropTypes.number\n  // etc\n\n}; // DefaultProps\n\nBbbPropsTypes.defaultProps = {\n  subtitulo: 'Soy un subtítulo',\n  // valores por defecto\n  subtitulo2: ''\n};\nexport default BbbPropsTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"BbbPropsTypes\");","map":{"version":3,"sources":["/Users/erodriguez/Projects/react_06/src/components/02_base/BbbPropTypes.js"],"names":["React","PropTypes","BbbPropsTypes","saludo","subtitulo","subtitulo2","subtitulo3","propTypes","string","isRequired","number","array","defaultProps"],"mappings":";AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,aAAa,GAAG,CAAE;AAAEC,EAAAA,MAAM,GAAG,UAAX;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA;AAAlC,CAAF,KAAsD;AAExE,sBACI;AAAA,4BACI;AAAA,sBAAMF,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,sBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,sBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAXD,C,CAaA;AACA;AACA;;;KAfMJ,a;AAgBNA,aAAa,CAACK,SAAd,GAA0B;AACtBJ,EAAAA,MAAM,EAAEF,SAAS,CAACO,MAAV,CAAiBC,UADH;AAEtBL,EAAAA,SAAS,EAAEH,SAAS,CAACS,MAFC;AAGtBL,EAAAA,UAAU,EAAEJ,SAAS,CAACU,KAHA;AAItBL,EAAAA,UAAU,EAAEL,SAAS,CAACO,MAJA,CAKtB;AACA;;AANsB,CAA1B,C,CASA;;AACAN,aAAa,CAACU,YAAd,GAA6B;AACzBR,EAAAA,SAAS,EAAE,kBADc;AACO;AAChCC,EAAAA,UAAU,EAAE;AAFa,CAA7B;AAKA,eAAeH,aAAf","sourcesContent":["\n// PropTypes\n// son los TIPOS de props que debería de recibir el componente (BbbPropsTypes)\n// verificación de tipos\n// Para usar VERIFICACIÓN de tipos en las props de un componente, puedes asignar la propiedad especial PropTypes:\n\nimport React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst BbbPropsTypes = ( { saludo = 'Hola Bbb', subtitulo, subtitulo2 } ) => {\n\n    return (\n        <>\n            <p> { saludo } </p>\n            <p className=\"\">Hello there</p>\n            <p> { subtitulo } </p>\n            <p> { subtitulo2 } </p>\n            <p> { subtitulo3 } </p>\n        </>\n    );\n};\n\n// Se coloca aquí. Fuera de la función\n// PrimeraApp.propTypes   es igual a un objeto --> { ... }\n// puede ser: .string, . number, .bool, .array, etc.\nBbbPropsTypes.propTypes = {\n    saludo: PropTypes.string.isRequired,\n    subtitulo: PropTypes.number,\n    subtitulo2: PropTypes.array,\n    subtitulo3: PropTypes.string,\n    //  saludo: PropTypes.number\n    // etc\n}\n\n// DefaultProps\nBbbPropsTypes.defaultProps = {\n    subtitulo: 'Soy un subtítulo',  // valores por defecto\n    subtitulo2: ''\n}\n\nexport default BbbPropsTypes;\n"]},"metadata":{},"sourceType":"module"}