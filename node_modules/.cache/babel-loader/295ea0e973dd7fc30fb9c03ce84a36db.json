{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\n\nfunction normalizeLocalePath(pathname, locales) {\n  let detectedLocale; // first item will be empty string from splitting at first char\n\n  const pathnameParts = pathname.split('/');\n  (locales || []).some(locale => {\n    if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n\n    return false;\n  });\n  return {\n    pathname,\n    detectedLocale\n  };\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/normalize-locale-path.ts"],"names":["normalizeLocalePath","pathname","locales","detectedLocale","pathnameParts","split","some","locale","toLowerCase","splice","join"],"mappings":";;;;;QAcgBA,mB,GAAAA,mB;;SAAAA,mB,CACdC,Q,EACAC,O,EACY;AACZ,MAAIC,cAAJ,CADY,CAEZ;;AACA,QAAMC,aAAa,GAAGH,QAAQ,CAACI,KAATJ,CAAe,GAAfA,CAAtB;GAEEC,OAAO,IAAI,E,EAAII,I,CAAMC,MAAF,IAAa;AAChC,QACEH,aAAa,CAAC,CAAD,CAAbA,IACAA,aAAa,CAAC,CAAD,CAAbA,CAAiBI,WAAjBJ,OAAmCG,MAAM,CAACC,WAAPD,EAFrC,EAGE;AACAJ,MAAAA,cAAc,GAAGI,MAAjBJ;AACAC,MAAAA,aAAa,CAACK,MAAdL,CAAqB,CAArBA,EAAwB,CAAxBA;AACAH,MAAAA,QAAQ,GAAGG,aAAa,CAACM,IAAdN,CAAmB,GAAnBA,KAA2B,GAAtCH;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,G;AAED,SAAO;AACLA,IAAAA,QADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.normalizeLocalePath = normalizeLocalePath;\nfunction normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map"]},"metadata":{},"sourceType":"script"}