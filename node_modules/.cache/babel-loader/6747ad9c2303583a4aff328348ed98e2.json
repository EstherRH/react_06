{"ast":null,"code":"var _s = $RefreshSig$();\n\n// custom hook que nos ayude a manejar el formulario (122)\n// recibe el estado del formulario\n// custom hook --> useForm\n// se coloca un \"use\" delante porque es un custom hook\nimport { useState } from \"react\"; // estado inicial --> initialState = {}\n// es igual a un objeto vacío\n// va a recibir name, email y password\n\nexport const useForm = (initialForm = {}) => {\n  _s();\n\n  const [formState, setFormState] = useState(initialForm);\n\n  const onInputChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  }; // función para RESETEAR\n  // va a restablecer los valores (name, email, etc.)\n  // retorna al punto inicial del formulario\n  // es decir, todos los cambios vacíos\n  // se coloca el on delante del nombre\n  // setFormState es el valor inicial del formulario\n\n\n  const onResetForm = () => {\n    setFormState(initialForm);\n  }; // se retorna como un array\n  // primer valor: el estado del formulario\n  // segundo valor: la función\n\n\n  return { ...formState,\n    // se desestructura\n    formState,\n    // el valor del formulario\n    onInputChange,\n    // función para hacer el cambio\n    onResetForm // función de reseteo\n\n  };\n};\n\n_s(useForm, \"r6u0ii4BypHPPIIAZhRzIK8Ac5E=\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/hooks/useForm.js"],"names":["useState","useForm","initialForm","formState","setFormState","onInputChange","target","name","value","onResetForm"],"mappings":";;AACA;AAEA;AACA;AAEA;AAEA,SAAQA,QAAR,QAAuB,OAAvB,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAAEC,WAAW,GAAG,EAAhB,KAAwB;AAAA;;AAE3C,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAACE,WAAD,CAA5C;;AAEA,QAAMG,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAElC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,MAAxB;AAEAF,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,OAAEI,IAAF,GAAUC;AAFD,KAAD,CAAZ;AAIH,GARD,CAJ2C,CAc3C;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBL,IAAAA,YAAY,CAAEF,WAAF,CAAZ;AACH,GAFD,CApB2C,CA0B3C;AACA;AACA;;;AACA,SAAO,EACH,GAAGC,SADA;AACY;AACfA,IAAAA,SAFG;AAEY;AACfE,IAAAA,aAHG;AAGY;AACfI,IAAAA,WAJG,CAIY;;AAJZ,GAAP;AAMH,CAnCM;;GAAMR,O","sourcesContent":["\n// custom hook que nos ayude a manejar el formulario (122)\n\n// recibe el estado del formulario\n// custom hook --> useForm\n\n// se coloca un \"use\" delante porque es un custom hook\n\nimport {useState} from \"react\";\n\n// estado inicial --> initialState = {}\n// es igual a un objeto vacío\n// va a recibir name, email y password\nexport const useForm = ( initialForm = {} ) => {\n\n    const [ formState, setFormState ] = useState(initialForm)\n\n    const onInputChange = ({ target }) => {\n\n        const { name, value } = target;\n\n        setFormState({\n            ...formState,\n            [ name ]: value\n        });\n    }\n\n    // función para RESETEAR\n    // va a restablecer los valores (name, email, etc.)\n    // retorna al punto inicial del formulario\n    // es decir, todos los cambios vacíos\n    // se coloca el on delante del nombre\n    // setFormState es el valor inicial del formulario\n    const onResetForm = () => {\n        setFormState( initialForm );\n    }\n\n\n\n    // se retorna como un array\n    // primer valor: el estado del formulario\n    // segundo valor: la función\n    return {\n        ...formState,  // se desestructura\n        formState,     // el valor del formulario\n        onInputChange, // función para hacer el cambio\n        onResetForm,   // función de reseteo\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}