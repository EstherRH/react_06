{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/GifGrid.js\",\n    _s = $RefreshSig$();\n\n// Fetch API\n// obtener las imágenes que queremos\n// Intro a useEffect\n// en este componente: cuando note que hay un nuevo elemento, hace la petición http\n// y traiga las imgs correspondientes a la categoría\n// abrir Postman:\n// get: api.giphy.com/v1/gifs/search\n// key: api_key\n// value: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// click en Send\n// aparece la info\n// búsqueda: aloy\n// límite: 10\nimport React, { useState, useEffect } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GifGrid = ({\n  category\n}) => {\n  _s();\n\n  // estado inicial: array vacío\n  const [images, setImages] = useState([]); // la función se ejecuta solo una vez\n\n  useEffect(() => {\n    // recibe la función que queremos ejecutar\n    getGifs();\n  }, []); // deps: [] --> el segundo argumento es un array de dependencias\n\n  const getGifs = async () => {\n    // necesitamos recibir la categoría y hacer una petición http\n    const url = 'https://api.giphy.com/v1/gifs/search?q=aloy&limit=10&api_key=QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE';\n    const respuesta = await fetch(url);\n    const {\n      data\n    } = await respuesta.json(); // .json porque lo recibimos en formato json\n    // de la data queremos retornar: id, title, url\n\n    const gifs = data.map(img => {\n      var _img$images;\n\n      return {\n        id: img.id,\n        title: img.title,\n        url: (_img$images = img.images) === null || _img$images === void 0 ? void 0 : _img$images.downsized_medium.url\n      };\n    });\n    setImages(gifs);\n  }; // va a regresar título, imagen, etc\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", category, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, {\n      img: img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\nexport default GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/05_gifAppBuscador/GifGrid.js"],"names":["React","useState","useEffect","GifGridItem","GifGrid","category","images","setImages","getGifs","url","respuesta","fetch","data","json","gifs","map","img","id","title","downsized_medium"],"mappings":";;;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAH8B,CAK9B;;AACAC,EAAAA,SAAS,CAAE,MAAM;AACb;AACAM,IAAAA,OAAO;AACV,GAHQ,EAGN,EAHM,CAAT,CAN8B,CAU9B;;AAGA,QAAMA,OAAO,GAAG,YAAW;AACvB;AACA,UAAMC,GAAG,GAAG,+FAAZ;AACA,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAEF,GAAF,CAA7B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMF,SAAS,CAACG,IAAV,EAAvB,CAJuB,CAIkB;AAEzC;;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAAWC,GAAG,IAAK;AAAA;;AAC5B,aAAO;AACHC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADL;AAEHC,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAFR;AAGHT,QAAAA,GAAG,iBAAEO,GAAG,CAACV,MAAN,gDAAE,YAAYa,gBAAZ,CAA6BV;AAH/B,OAAP;AAKE,KANO,CAAb;AAOAF,IAAAA,SAAS,CAAEO,IAAF,CAAT;AACH,GAfD,CAb8B,CA+B9B;;;AACA,sBACI;AAAA,4BAGI;AAAA,sBAAOT,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAaQC,MAAM,CAACS,GAAP,CAAYC,GAAG,iBACX,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,CAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArDD;;GAAMZ,O;;KAAAA,O;AAsDN,eAAeA,OAAf","sourcesContent":["\n// Fetch API\n// obtener las imágenes que queremos\n\n// Intro a useEffect\n\n// en este componente: cuando note que hay un nuevo elemento, hace la petición http\n// y traiga las imgs correspondientes a la categoría\n\n// abrir Postman:\n// get: api.giphy.com/v1/gifs/search\n// key: api_key\n// value: QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE\n// click en Send\n// aparece la info\n\n// búsqueda: aloy\n// límite: 10\n\nimport React, {useState, useEffect} from \"react\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n\n    // estado inicial: array vacío\n    const [images, setImages] = useState([]);\n\n    // la función se ejecuta solo una vez\n    useEffect( () => {\n        // recibe la función que queremos ejecutar\n        getGifs();\n    }, [] )\n    // deps: [] --> el segundo argumento es un array de dependencias\n\n\n    const getGifs = async() => {\n        // necesitamos recibir la categoría y hacer una petición http\n        const url = 'https://api.giphy.com/v1/gifs/search?q=aloy&limit=10&api_key=QOHo5pdgc4r9KlBkpjsKmAYTnTBc5WcE';\n        const respuesta = await fetch( url );\n        const { data } = await respuesta.json(); // .json porque lo recibimos en formato json\n\n        // de la data queremos retornar: id, title, url\n        const gifs = data.map ( img  => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n\n            }})\n        setImages( gifs );\n    }\n\n\n    // va a regresar título, imagen, etc\n    return (\n        <div>\n\n            {/* se imprime la categoría */}\n            <h3> { category } </h3>\n\n            {/*  título:  */}\n            {/*{*/}\n            {/*    images.map(({ id, title }) => (*/}\n            {/*        <li key={ id }> { title } </li>*/}\n            {/*    ) )*/}\n            {/*}*/}\n\n            {\n                images.map( img => (\n                    <GifGridItem img={img}/>\n                ))\n            }\n            \n        </div>\n    )\n}\nexport default GifGrid;\n\n\n"]},"metadata":{},"sourceType":"module"}