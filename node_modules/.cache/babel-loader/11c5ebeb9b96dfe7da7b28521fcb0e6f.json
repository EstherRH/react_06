{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMiddlewareRegex = getMiddlewareRegex;\n\nvar _routeRegex = require(\"./route-regex\");\n\nfunction getMiddlewareRegex(normalizedRoute, catchAll = true) {\n  const result = (0, _routeRegex).getParametrizedRoute(normalizedRoute);\n  let catchAllRegex = catchAll ? '(?!_next).*' : '';\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';\n\n  if ('routeKeys' in result) {\n    if (result.parameterizedRoute === '/') {\n      return {\n        groups: {},\n        namedRegex: `^/${catchAllRegex}$`,\n        re: new RegExp(`^/${catchAllRegex}$`),\n        routeKeys: {}\n      };\n    }\n\n    return {\n      groups: result.groups,\n      namedRegex: `^${result.namedParameterizedRoute}${catchAllGroupedRegex}$`,\n      re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`),\n      routeKeys: result.routeKeys\n    };\n  }\n\n  if (result.parameterizedRoute === '/') {\n    return {\n      groups: {},\n      re: new RegExp(`^/${catchAllRegex}$`)\n    };\n  }\n\n  return {\n    groups: {},\n    re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`)\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/get-middleware-regex.ts"],"names":["getMiddlewareRegex","normalizedRoute","catchAll","result","getParametrizedRoute","catchAllRegex","catchAllGroupedRegex","parameterizedRoute","groups","namedRegex","re","RegExp","routeKeys","namedParameterizedRoute"],"mappings":";;;;;QAEgBA,kB,GAAAA,kB;;AAFiC,IAAA,WAAe,GAAA,OAAA,CAAA,eAAA,CAAf;;SAEjCA,kB,CACdC,e,EACAC,QAAiB,GAAG,I,EACR;AACZ,QAAMC,MAAM,GAAA,CAAA,GAAGC,WAAH,EAAuB,oBAAvB,CAAwBH,eAAxB,CAAZ;AAEA,MAAII,aAAa,GAAGH,QAAQ,GAAG,aAAH,GAAmB,EAA/C;AACA,MAAII,oBAAoB,GAAGJ,QAAQ,GAAG,YAAH,GAAkB,EAArD;;AAEA,MAAI,eAAeC,MAAnB,EAA2B;AACzB,QAAIA,MAAM,CAACI,kBAAPJ,KAA8B,GAAlC,EAAuC;AACrC,aAAO;AACLK,QAAAA,MAAM,EAAE,EADH;AAELC,QAAAA,UAAU,EAAG,KAAIJ,aAAc,GAF1B;AAGLK,QAAAA,EAAE,EAAE,IAAIC,MAAJ,CAAY,KAAIN,aAAc,GAA9B,CAHC;AAILO,QAAAA,SAAS,EAAE;AAJN,OAAP;AAMD;;AAED,WAAO;AACLJ,MAAAA,MAAM,EAAEL,MAAM,CAACK,MADV;AAELC,MAAAA,UAAU,EAAG,IAAGN,MAAM,CAACU,uBAAuB,GAAGP,oBAAqB,GAFjE;AAGLI,MAAAA,EAAE,EAAE,IAAIC,MAAJ,CAAY,IAAGR,MAAM,CAACI,kBAAkB,GAAGD,oBAAqB,GAAhE,CAHC;AAILM,MAAAA,SAAS,EAAET,MAAM,CAACS;AAJb,KAAP;AAMD;;AAED,MAAIT,MAAM,CAACI,kBAAPJ,KAA8B,GAAlC,EAAuC;AACrC,WAAO;AACLK,MAAAA,MAAM,EAAE,EADH;AAELE,MAAAA,EAAE,EAAE,IAAIC,MAAJ,CAAY,KAAIN,aAAc,GAA9B;AAFC,KAAP;AAID;;AAED,SAAO;AACLG,IAAAA,MAAM,EAAE,EADH;AAELE,IAAAA,EAAE,EAAE,IAAIC,MAAJ,CAAY,IAAGR,MAAM,CAACI,kBAAkB,GAAGD,oBAAqB,GAAhE;AAFC,GAAP;AAID","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getMiddlewareRegex = getMiddlewareRegex;\nvar _routeRegex = require(\"./route-regex\");\nfunction getMiddlewareRegex(normalizedRoute, catchAll = true) {\n    const result = (0, _routeRegex).getParametrizedRoute(normalizedRoute);\n    let catchAllRegex = catchAll ? '(?!_next).*' : '';\n    let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';\n    if ('routeKeys' in result) {\n        if (result.parameterizedRoute === '/') {\n            return {\n                groups: {},\n                namedRegex: `^/${catchAllRegex}$`,\n                re: new RegExp(`^/${catchAllRegex}$`),\n                routeKeys: {}\n            };\n        }\n        return {\n            groups: result.groups,\n            namedRegex: `^${result.namedParameterizedRoute}${catchAllGroupedRegex}$`,\n            re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`),\n            routeKeys: result.routeKeys\n        };\n    }\n    if (result.parameterizedRoute === '/') {\n        return {\n            groups: {},\n            re: new RegExp(`^/${catchAllRegex}$`)\n        };\n    }\n    return {\n        groups: {},\n        re: new RegExp(`^${result.parameterizedRoute}${catchAllGroupedRegex}$`)\n    };\n}\n\n//# sourceMappingURL=get-middleware-regex.js.map"]},"metadata":{},"sourceType":"script"}