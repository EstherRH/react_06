{"ast":null,"code":"var _jsxFileName = \"/Volumes/ALOY/Front/6_React/retshe/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\n// objetivo: Cotizador de préstamos\n// crear un formulario\n// plazo a pagar: tiempo e intereses\n// si se tarda más tiempo en pagar, el interés será mayor\n// se integra código JS en react\n// tiene tmb un spinner\n// al final se presenta un html con un Resumen\n// JSX --> className (es una clase)\n// class es una palabra reservada de js\n// en app.js  -->  import Formulario from \"./components/Formulario\";\nimport React, { useState } from \"react\";\nimport './Formulario.css';\nimport { calcularTotal } from \"../helpers\"; // con mayúscula el nombre de Formulario\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulario = props => {\n  _s();\n\n  // destructuring\n  const {\n    cantidad,\n    guardarCantidad,\n    plazo,\n    guardarPlazo,\n    guardarTotal,\n    guardarCargando\n  } = props; // useState('false');\n  // Definir el state\n  // se importa arriba  -->  import React, {useState} from \"react\";\n  // ejemplo: tenemos un state para un mensaje de error\n  // se inicializa en false porque no hay error hasta que el usuario hago algo mal\n\n  const [error, guardarError] = useState('false'); // se define la función\n  // se utilizan los eventos\n  // es un arrow function\n  // en el input: onChange={ leerCantidad }\n  // onChange: se va a ejecutar cada vez que el usuario comience a escribir en el input\n  // se va a ejecutar la función de leerCantidad cada vez que hay un cambio\n  // e --> para acceder al valor ( es el evento )\n  // e.target.value --> acceder a lo que el usuario está escribiendo\n  // guardarCantidad --> es la función que va a cambiar el state\n\n  const leerCantidad = e => {\n    guardarCantidad(parseInt(e.target.value));\n  };\n\n  const leerPrestamos = e => {\n    guardarPlazo(parseInt(e.target.value));\n  }; // Creamos la función: cuando el usuario hace submit\n  // e de evento\n\n\n  const calcularPrestamo = e => {\n    e.preventDefault();\n    console.log('enviando...'); // Validar\n\n    if (cantidad === 0 || plazo === '') {\n      console.log('error');\n      guardarError(true); // en caso de que haya un error, pasa a true (se inicializa en false)\n\n      return; // Resultado: Hooks: state: true\n    } else {\n      console.log('ok');\n      guardarError(false); // Habilitar el spinner\n\n      guardarCargando(true); // Postponer 3 segundos para que aparezca el spinner\n\n      setTimeout(() => {\n        // Realizar la cotización\n        const total = calcularTotal(cantidad, plazo);\n        console.log(total); // Una vez calculado, guardarTotal\n\n        guardarTotal(total); // Deshabilitar el spinner\n\n        guardarCargando(false);\n      }, 9000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: calcularPrestamo,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"La cantidad es de \", cantidad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"El plazo es de \", plazo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cantidad Prestamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"u-full-width\",\n            type: \"number\",\n            placeholder: \"Ejemplo: 3000\" // es un evento:\n            // leerCantidad es una función que se va a ejecutar\n            ,\n            onChange: leerCantidad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Segundo campo del formulario: plazo para el pr\\xE9stamo\", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Plazo para Pagar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"u-full-width\",\n            onChange: leerPrestamos,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3 meses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"6\",\n              children: \"6 meses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12\",\n              children: \"12 meses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"24\",\n              children: \"24 meses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Calcular\",\n            className: \"button-primary u-full-width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), error === true ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Todos los campos son obligatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 34\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Formulario, \"ET4Rb2cLY0ceWwT1u/59GBzUY08=\");\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["/Volumes/ALOY/Front/6_React/retshe/src/components/Formulario.js"],"names":["React","useState","calcularTotal","Formulario","props","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","error","guardarError","leerCantidad","e","parseInt","target","value","leerPrestamos","calcularPrestamo","preventDefault","console","log","setTimeout","total"],"mappings":"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","sourcesContent":["\n// objetivo: Cotizador de préstamos\n// crear un formulario\n\n// plazo a pagar: tiempo e intereses\n// si se tarda más tiempo en pagar, el interés será mayor\n// se integra código JS en react\n// tiene tmb un spinner\n// al final se presenta un html con un Resumen\n// JSX --> className (es una clase)\n// class es una palabra reservada de js\n\n// en app.js  -->  import Formulario from \"./components/Formulario\";\n\nimport React, {useState} from \"react\";\nimport './Formulario.css';\nimport { calcularTotal } from \"../helpers\";\n\n// con mayúscula el nombre de Formulario\nconst Formulario = (props) => {\n\n    // destructuring\n    const {cantidad, guardarCantidad, plazo, guardarPlazo, guardarTotal, guardarCargando } = props;\n\n\n    // useState('false');\n    // Definir el state\n    // se importa arriba  -->  import React, {useState} from \"react\";\n    // ejemplo: tenemos un state para un mensaje de error\n    // se inicializa en false porque no hay error hasta que el usuario hago algo mal\n    const [error, guardarError] = useState('false');\n\n\n    // se define la función\n    // se utilizan los eventos\n    // es un arrow function\n    // en el input: onChange={ leerCantidad }\n    // onChange: se va a ejecutar cada vez que el usuario comience a escribir en el input\n    // se va a ejecutar la función de leerCantidad cada vez que hay un cambio\n    // e --> para acceder al valor ( es el evento )\n    // e.target.value --> acceder a lo que el usuario está escribiendo\n    // guardarCantidad --> es la función que va a cambiar el state\n    const leerCantidad = (e) => {\n        guardarCantidad( parseInt( e.target.value ));\n    }\n\n\n    const leerPrestamos = (e) => {\n        guardarPlazo( parseInt( e.target.value ) )\n    }\n\n\n\n    // Creamos la función: cuando el usuario hace submit\n    // e de evento\n    const calcularPrestamo = e => {\n        e.preventDefault();\n        console.log('enviando...');\n\n        // Validar\n        if( cantidad === 0 || plazo === '') {\n            console.log('error');\n            guardarError(true); // en caso de que haya un error, pasa a true (se inicializa en false)\n            return; // Resultado: Hooks: state: true\n        } else {\n            console.log('ok');\n            guardarError(false);\n\n\n            // Habilitar el spinner\n            guardarCargando(true);\n\n            // Postponer 3 segundos para que aparezca el spinner\n            setTimeout( () => {\n                // Realizar la cotización\n                const total = calcularTotal(cantidad, plazo);\n                console.log(total);\n\n                // Una vez calculado, guardarTotal\n                guardarTotal(total);\n\n                // Deshabilitar el spinner\n                guardarCargando(false);\n\n            }, 9000)\n        }\n    }\n\n\n    return (\n        <div>\n            {/*evento cuando el usuario presiona el botón de enviar los datos*/}\n            <form onSubmit={calcularPrestamo}>\n                <p>La cantidad es de {cantidad}</p>\n                <p>El plazo es de {plazo}</p>\n                {/*Resultado: 0, porque es el valor inicial del state*/}\n                <div className=\"row\">\n                    <div>\n                        <label>Cantidad Prestamo</label>\n\n                        {/* se accede a lo que el usuario escribe en lo inputs */}\n                        <input className=\"u-full-width\"\n                               type=\"number\"\n                               placeholder=\"Ejemplo: 3000\"\n\n                            // es un evento:\n                            // leerCantidad es una función que se va a ejecutar\n                               onChange={ leerCantidad }\n                        />\n                    </div>\n                    <div>\n                        Segundo campo del formulario: plazo para el préstamo\n                        <label>Plazo para Pagar</label>\n                        <select\n                            className=\"u-full-width\"\n                            onChange={ leerPrestamos }\n                        >\n                            <option value=\"\">Seleccionar</option>\n                            <option value=\"3\">3 meses</option>\n                            <option value=\"6\">6 meses</option>\n                            <option value=\"12\">12 meses</option>\n                            <option value=\"24\">24 meses</option>\n                        </select>\n                    </div>\n                    <div>\n                        <input type=\"submit\"\n                               value=\"Calcular\"\n                               className=\"button-primary u-full-width\"/>\n                    </div>\n                </div>\n            </form>\n\n            {/*si error está en true, sale el mensaje, sino no aparece nada, está vacío*/}\n            { (error === true) ? <p>Todos los campos son obligatorios</p> : ''}\n\n        </div>\n    );\n}\n\nexport default Formulario;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}